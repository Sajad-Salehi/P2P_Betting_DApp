{
	"abi": [
	  {
		"inputs": [],
		"stateMutability": "nonpayable",
		"type": "constructor"
	  },
	  {
		"anonymous": false,
		"inputs": [
		  {
			"indexed": true,
			"internalType": "bytes32",
			"name": "id",
			"type": "bytes32"
		  }
		],
		"name": "ChainlinkCancelled",
		"type": "event"
	  },
	  {
		"anonymous": false,
		"inputs": [
		  {
			"indexed": true,
			"internalType": "bytes32",
			"name": "id",
			"type": "bytes32"
		  }
		],
		"name": "ChainlinkFulfilled",
		"type": "event"
	  },
	  {
		"anonymous": false,
		"inputs": [
		  {
			"indexed": true,
			"internalType": "bytes32",
			"name": "id",
			"type": "bytes32"
		  }
		],
		"name": "ChainlinkRequested",
		"type": "event"
	  },
	  {
		"anonymous": false,
		"inputs": [
		  {
			"indexed": true,
			"internalType": "uint256",
			"name": "_id",
			"type": "uint256"
		  },
		  {
			"indexed": true,
			"internalType": "address",
			"name": "_challenger",
			"type": "address"
		  },
		  {
			"indexed": true,
			"internalType": "address",
			"name": "_accepter",
			"type": "address"
		  },
		  {
			"indexed": false,
			"internalType": "uint256",
			"name": "_price",
			"type": "uint256"
		  }
		],
		"name": "LogAcceptBet",
		"type": "event"
	  },
	  {
		"anonymous": false,
		"inputs": [
		  {
			"indexed": true,
			"internalType": "uint256",
			"name": "_id",
			"type": "uint256"
		  },
		  {
			"indexed": true,
			"internalType": "address",
			"name": "_challenger",
			"type": "address"
		  },
		  {
			"indexed": true,
			"internalType": "uint256",
			"name": "_price",
			"type": "uint256"
		  }
		],
		"name": "LogPublishBet",
		"type": "event"
	  },
	  {
		"anonymous": false,
		"inputs": [
		  {
			"indexed": true,
			"internalType": "uint256",
			"name": "_id",
			"type": "uint256"
		  },
		  {
			"indexed": true,
			"internalType": "address",
			"name": "_challenger",
			"type": "address"
		  },
		  {
			"indexed": true,
			"internalType": "address",
			"name": "_accepter",
			"type": "address"
		  },
		  {
			"indexed": false,
			"internalType": "uint256",
			"name": "_payout",
			"type": "uint256"
		  }
		],
		"name": "LogResolveBet",
		"type": "event"
	  },
	  {
		"anonymous": false,
		"inputs": [
		  {
			"indexed": true,
			"internalType": "bytes32",
			"name": "requestId",
			"type": "bytes32"
		  },
		  {
			"indexed": false,
			"internalType": "uint256",
			"name": "number1",
			"type": "uint256"
		  },
		  {
			"indexed": false,
			"internalType": "uint256",
			"name": "number2",
			"type": "uint256"
		  }
		],
		"name": "RequestFulfilled",
		"type": "event"
	  },
	  {
		"anonymous": false,
		"inputs": [
		  {
			"indexed": false,
			"internalType": "uint256",
			"name": "number1",
			"type": "uint256"
		  },
		  {
			"indexed": false,
			"internalType": "uint256",
			"name": "number2",
			"type": "uint256"
		  }
		],
		"name": "logNumber",
		"type": "event"
	  },
	  {
		"inputs": [
		  {
			"internalType": "address",
			"name": "",
			"type": "address"
		  }
		],
		"name": "AddressToBet",
		"outputs": [
		  {
			"internalType": "uint256",
			"name": "id",
			"type": "uint256"
		  },
		  {
			"internalType": "uint256",
			"name": "gameId",
			"type": "uint256"
		  },
		  {
			"internalType": "uint256",
			"name": "conditions",
			"type": "uint256"
		  },
		  {
			"internalType": "uint256",
			"name": "price",
			"type": "uint256"
		  },
		  {
			"internalType": "address",
			"name": "challenger",
			"type": "address"
		  },
		  {
			"internalType": "address",
			"name": "accepter",
			"type": "address"
		  },
		  {
			"internalType": "address",
			"name": "winner",
			"type": "address"
		  },
		  {
			"internalType": "bool",
			"name": "isAlive",
			"type": "bool"
		  },
		  {
			"internalType": "bool",
			"name": "isAccepted",
			"type": "bool"
		  }
		],
		"stateMutability": "view",
		"type": "function"
	  },
	  {
		"inputs": [
		  {
			"internalType": "uint256",
			"name": "_id",
			"type": "uint256"
		  }
		],
		"name": "acceptBet",
		"outputs": [],
		"stateMutability": "payable",
		"type": "function"
	  },
	  {
		"inputs": [
		  {
			"internalType": "uint256",
			"name": "",
			"type": "uint256"
		  }
		],
		"name": "bets",
		"outputs": [
		  {
			"internalType": "uint256",
			"name": "id",
			"type": "uint256"
		  },
		  {
			"internalType": "uint256",
			"name": "gameId",
			"type": "uint256"
		  },
		  {
			"internalType": "uint256",
			"name": "conditions",
			"type": "uint256"
		  },
		  {
			"internalType": "uint256",
			"name": "price",
			"type": "uint256"
		  },
		  {
			"internalType": "address",
			"name": "challenger",
			"type": "address"
		  },
		  {
			"internalType": "address",
			"name": "accepter",
			"type": "address"
		  },
		  {
			"internalType": "address",
			"name": "winner",
			"type": "address"
		  },
		  {
			"internalType": "bool",
			"name": "isAlive",
			"type": "bool"
		  },
		  {
			"internalType": "bool",
			"name": "isAccepted",
			"type": "bool"
		  }
		],
		"stateMutability": "view",
		"type": "function"
	  },
	  {
		"inputs": [
		  {
			"internalType": "uint256",
			"name": "_id",
			"type": "uint256"
		  }
		],
		"name": "cancelBet",
		"outputs": [],
		"stateMutability": "payable",
		"type": "function"
	  },
	  {
		"inputs": [
		  {
			"internalType": "bytes32",
			"name": "requestId",
			"type": "bytes32"
		  },
		  {
			"internalType": "uint256",
			"name": "_number1",
			"type": "uint256"
		  },
		  {
			"internalType": "uint256",
			"name": "_number2",
			"type": "uint256"
		  }
		],
		"name": "fulfillBytesAndUint",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	  },
	  {
		"inputs": [],
		"name": "getAvailableBets",
		"outputs": [
		  {
			"components": [
			  {
				"internalType": "uint256",
				"name": "id",
				"type": "uint256"
			  },
			  {
				"internalType": "uint256",
				"name": "gameId",
				"type": "uint256"
			  },
			  {
				"internalType": "uint256",
				"name": "conditions",
				"type": "uint256"
			  },
			  {
				"internalType": "uint256",
				"name": "price",
				"type": "uint256"
			  },
			  {
				"internalType": "address",
				"name": "challenger",
				"type": "address"
			  },
			  {
				"internalType": "address",
				"name": "accepter",
				"type": "address"
			  },
			  {
				"internalType": "address",
				"name": "winner",
				"type": "address"
			  },
			  {
				"internalType": "bool",
				"name": "isAlive",
				"type": "bool"
			  },
			  {
				"internalType": "bool",
				"name": "isAccepted",
				"type": "bool"
			  }
			],
			"internalType": "struct BetContract.Bet[]",
			"name": "",
			"type": "tuple[]"
		  }
		],
		"stateMutability": "view",
		"type": "function"
	  },
	  {
		"inputs": [],
		"name": "getNumberOfAvailableBets",
		"outputs": [
		  {
			"internalType": "uint256",
			"name": "",
			"type": "uint256"
		  }
		],
		"stateMutability": "view",
		"type": "function"
	  },
	  {
		"inputs": [],
		"name": "getNumberOfBets",
		"outputs": [
		  {
			"internalType": "uint256",
			"name": "",
			"type": "uint256"
		  }
		],
		"stateMutability": "view",
		"type": "function"
	  },
	  {
		"inputs": [
		  {
			"internalType": "uint256",
			"name": "_conditions",
			"type": "uint256"
		  },
		  {
			"internalType": "uint256",
			"name": "_price",
			"type": "uint256"
		  },
		  {
			"internalType": "uint256",
			"name": "_gameId",
			"type": "uint256"
		  }
		],
		"name": "publishBet",
		"outputs": [],
		"stateMutability": "payable",
		"type": "function"
	  },
	  {
		"inputs": [],
		"name": "upkeep_setWinner",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	  }
	],
	"allSourcePaths": {
	  "0": "/home/sajad-solidity/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.6.0/contracts/src/v0.8/Chainlink.sol",
	  "1": "/home/sajad-solidity/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.6.0/contracts/src/v0.8/ChainlinkClient.sol",
	  "11": "contracts/BetContract.sol",
	  "8": "/home/sajad-solidity/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.6.0/contracts/src/v0.8/vendor/BufferChainlink.sol",
	  "9": "/home/sajad-solidity/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.6.0/contracts/src/v0.8/vendor/CBORChainlink.sol"
	},
	"ast": {
	  "absolutePath": "contracts/BetContract.sol",
	  "exportedSymbols": {
		"BetContract": [
		  728
		],
		"BufferChainlink": [
		  2418
		],
		"CBORChainlink": [
		  2865
		],
		"Chainlink": [
		  1590
		],
		"ChainlinkClient": [
		  1321
		],
		"ChainlinkRequestInterface": [
		  1623
		],
		"ENSInterface": [
		  1703
		],
		"ENSResolver_Chainlink": [
		  1896
		],
		"LinkTokenInterface": [
		  1798
		],
		"OperatorInterface": [
		  1878
		],
		"OracleInterface": [
		  2904
		],
		"PointerInterface": [
		  1886
		]
	  },
	  "id": 729,
	  "license": "MIT",
	  "nodeType": "SourceUnit",
	  "nodes": [
		{
		  "id": 1,
		  "literals": [
			"solidity",
			"^",
			"0.8",
			".0"
		  ],
		  "nodeType": "PragmaDirective",
		  "src": "32:23:11"
		},
		{
		  "absolutePath": "/home/sajad-solidity/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.6.0/contracts/src/v0.8/ChainlinkClient.sol",
		  "file": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol",
		  "id": 2,
		  "nameLocation": "-1:-1:-1",
		  "nodeType": "ImportDirective",
		  "scope": 729,
		  "sourceUnit": 1322,
		  "src": "58:59:11",
		  "symbolAliases": [],
		  "unitAlias": ""
		},
		{
		  "abstract": false,
		  "baseContracts": [
			{
			  "baseName": {
				"id": 3,
				"name": "ChainlinkClient",
				"nameLocations": [
				  "144:15:11"
				],
				"nodeType": "IdentifierPath",
				"referencedDeclaration": 1321,
				"src": "144:15:11"
			  },
			  "id": 4,
			  "nodeType": "InheritanceSpecifier",
			  "src": "144:15:11"
			}
		  ],
		  "canonicalName": "BetContract",
		  "contractDependencies": [],
		  "contractKind": "contract",
		  "fullyImplemented": true,
		  "id": 728,
		  "linearizedBaseContracts": [
			728,
			1321
		  ],
		  "name": "BetContract",
		  "nameLocation": "129:11:11",
		  "nodeType": "ContractDefinition",
		  "nodes": [
			{
			  "constant": false,
			  "id": 6,
			  "mutability": "mutable",
			  "name": "number1",
			  "nameLocation": "180:7:11",
			  "nodeType": "VariableDeclaration",
			  "scope": 728,
			  "src": "172:15:11",
			  "stateVariable": true,
			  "storageLocation": "default",
			  "typeDescriptions": {
				"typeIdentifier": "t_uint256",
				"typeString": "uint256"
			  },
			  "typeName": {
				"id": 5,
				"name": "uint256",
				"nodeType": "ElementaryTypeName",
				"src": "172:7:11",
				"typeDescriptions": {
				  "typeIdentifier": "t_uint256",
				  "typeString": "uint256"
				}
			  },
			  "visibility": "internal"
			},
			{
			  "constant": false,
			  "id": 8,
			  "mutability": "mutable",
			  "name": "number2",
			  "nameLocation": "201:7:11",
			  "nodeType": "VariableDeclaration",
			  "scope": 728,
			  "src": "193:15:11",
			  "stateVariable": true,
			  "storageLocation": "default",
			  "typeDescriptions": {
				"typeIdentifier": "t_uint256",
				"typeString": "uint256"
			  },
			  "typeName": {
				"id": 7,
				"name": "uint256",
				"nodeType": "ElementaryTypeName",
				"src": "193:7:11",
				"typeDescriptions": {
				  "typeIdentifier": "t_uint256",
				  "typeString": "uint256"
				}
			  },
			  "visibility": "internal"
			},
			{
			  "constant": false,
			  "id": 10,
			  "mutability": "mutable",
			  "name": "currentGameId",
			  "nameLocation": "222:13:11",
			  "nodeType": "VariableDeclaration",
			  "scope": 728,
			  "src": "214:21:11",
			  "stateVariable": true,
			  "storageLocation": "default",
			  "typeDescriptions": {
				"typeIdentifier": "t_uint256",
				"typeString": "uint256"
			  },
			  "typeName": {
				"id": 9,
				"name": "uint256",
				"nodeType": "ElementaryTypeName",
				"src": "214:7:11",
				"typeDescriptions": {
				  "typeIdentifier": "t_uint256",
				  "typeString": "uint256"
				}
			  },
			  "visibility": "internal"
			},
			{
			  "constant": false,
			  "id": 13,
			  "mutability": "mutable",
			  "name": "betCounter",
			  "nameLocation": "257:10:11",
			  "nodeType": "VariableDeclaration",
			  "scope": 728,
			  "src": "249:22:11",
			  "stateVariable": true,
			  "storageLocation": "default",
			  "typeDescriptions": {
				"typeIdentifier": "t_uint256",
				"typeString": "uint256"
			  },
			  "typeName": {
				"id": 11,
				"name": "uint256",
				"nodeType": "ElementaryTypeName",
				"src": "249:7:11",
				"typeDescriptions": {
				  "typeIdentifier": "t_uint256",
				  "typeString": "uint256"
				}
			  },
			  "value": {
				"hexValue": "30",
				"id": 12,
				"isConstant": false,
				"isLValue": false,
				"isPure": true,
				"kind": "number",
				"lValueRequested": false,
				"nodeType": "Literal",
				"src": "270:1:11",
				"typeDescriptions": {
				  "typeIdentifier": "t_rational_0_by_1",
				  "typeString": "int_const 0"
				},
				"value": "0"
			  },
			  "visibility": "internal"
			},
			{
			  "constant": false,
			  "id": 15,
			  "mutability": "mutable",
			  "name": "externalJobId",
			  "nameLocation": "294:13:11",
			  "nodeType": "VariableDeclaration",
			  "scope": 728,
			  "src": "278:29:11",
			  "stateVariable": true,
			  "storageLocation": "default",
			  "typeDescriptions": {
				"typeIdentifier": "t_bytes32",
				"typeString": "bytes32"
			  },
			  "typeName": {
				"id": 14,
				"name": "bytes32",
				"nodeType": "ElementaryTypeName",
				"src": "278:7:11",
				"typeDescriptions": {
				  "typeIdentifier": "t_bytes32",
				  "typeString": "bytes32"
				}
			  },
			  "visibility": "private"
			},
			{
			  "constant": false,
			  "id": 17,
			  "mutability": "mutable",
			  "name": "oraclePayment",
			  "nameLocation": "329:13:11",
			  "nodeType": "VariableDeclaration",
			  "scope": 728,
			  "src": "313:29:11",
			  "stateVariable": true,
			  "storageLocation": "default",
			  "typeDescriptions": {
				"typeIdentifier": "t_uint256",
				"typeString": "uint256"
			  },
			  "typeName": {
				"id": 16,
				"name": "uint256",
				"nodeType": "ElementaryTypeName",
				"src": "313:7:11",
				"typeDescriptions": {
				  "typeIdentifier": "t_uint256",
				  "typeString": "uint256"
				}
			  },
			  "visibility": "private"
			},
			{
			  "global": false,
			  "id": 21,
			  "libraryName": {
				"id": 18,
				"name": "Chainlink",
				"nameLocations": [
				  "354:9:11"
				],
				"nodeType": "IdentifierPath",
				"referencedDeclaration": 1590,
				"src": "354:9:11"
			  },
			  "nodeType": "UsingForDirective",
			  "src": "348:38:11",
			  "typeName": {
				"id": 20,
				"nodeType": "UserDefinedTypeName",
				"pathNode": {
				  "id": 19,
				  "name": "Chainlink.Request",
				  "nameLocations": [
					"368:9:11",
					"378:7:11"
				  ],
				  "nodeType": "IdentifierPath",
				  "referencedDeclaration": 1347,
				  "src": "368:17:11"
				},
				"referencedDeclaration": 1347,
				"src": "368:17:11",
				"typeDescriptions": {
				  "typeIdentifier": "t_struct$_Request_$1347_storage_ptr",
				  "typeString": "struct Chainlink.Request"
				}
			  }
			},
			{
			  "constant": false,
			  "functionSelector": "22af00fa",
			  "id": 26,
			  "mutability": "mutable",
			  "name": "bets",
			  "nameLocation": "421:4:11",
			  "nodeType": "VariableDeclaration",
			  "scope": 728,
			  "src": "392:33:11",
			  "stateVariable": true,
			  "storageLocation": "default",
			  "typeDescriptions": {
				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$58_storage_$",
				"typeString": "mapping(uint256 => struct BetContract.Bet)"
			  },
			  "typeName": {
				"id": 25,
				"keyType": {
				  "id": 22,
				  "name": "uint",
				  "nodeType": "ElementaryTypeName",
				  "src": "401:4:11",
				  "typeDescriptions": {
					"typeIdentifier": "t_uint256",
					"typeString": "uint256"
				  }
				},
				"nodeType": "Mapping",
				"src": "392:21:11",
				"typeDescriptions": {
				  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$58_storage_$",
				  "typeString": "mapping(uint256 => struct BetContract.Bet)"
				},
				"valueType": {
				  "id": 24,
				  "nodeType": "UserDefinedTypeName",
				  "pathNode": {
					"id": 23,
					"name": "Bet",
					"nameLocations": [
					  "409:3:11"
					],
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 58,
					"src": "409:3:11"
				  },
				  "referencedDeclaration": 58,
				  "src": "409:3:11",
				  "typeDescriptions": {
					"typeIdentifier": "t_struct$_Bet_$58_storage_ptr",
					"typeString": "struct BetContract.Bet"
				  }
				}
			  },
			  "visibility": "public"
			},
			{
			  "constant": false,
			  "functionSelector": "8f17aa89",
			  "id": 31,
			  "mutability": "mutable",
			  "name": "AddressToBet",
			  "nameLocation": "463:12:11",
			  "nodeType": "VariableDeclaration",
			  "scope": 728,
			  "src": "431:44:11",
			  "stateVariable": true,
			  "storageLocation": "default",
			  "typeDescriptions": {
				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bet_$58_storage_$",
				"typeString": "mapping(address => struct BetContract.Bet)"
			  },
			  "typeName": {
				"id": 30,
				"keyType": {
				  "id": 27,
				  "name": "address",
				  "nodeType": "ElementaryTypeName",
				  "src": "440:7:11",
				  "typeDescriptions": {
					"typeIdentifier": "t_address",
					"typeString": "address"
				  }
				},
				"nodeType": "Mapping",
				"src": "431:24:11",
				"typeDescriptions": {
				  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bet_$58_storage_$",
				  "typeString": "mapping(address => struct BetContract.Bet)"
				},
				"valueType": {
				  "id": 29,
				  "nodeType": "UserDefinedTypeName",
				  "pathNode": {
					"id": 28,
					"name": "Bet",
					"nameLocations": [
					  "451:3:11"
					],
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 58,
					"src": "451:3:11"
				  },
				  "referencedDeclaration": 58,
				  "src": "451:3:11",
				  "typeDescriptions": {
					"typeIdentifier": "t_struct$_Bet_$58_storage_ptr",
					"typeString": "struct BetContract.Bet"
				  }
				}
			  },
			  "visibility": "public"
			},
			{
			  "anonymous": false,
			  "eventSelector": "29d1fd44cc39a4213a364818c158187934866b333b04a59815cdf69b58c809c0",
			  "id": 39,
			  "name": "RequestFulfilled",
			  "nameLocation": "489:16:11",
			  "nodeType": "EventDefinition",
			  "parameters": {
				"id": 38,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 33,
					"indexed": true,
					"mutability": "mutable",
					"name": "requestId",
					"nameLocation": "531:9:11",
					"nodeType": "VariableDeclaration",
					"scope": 39,
					"src": "515:25:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_bytes32",
					  "typeString": "bytes32"
					},
					"typeName": {
					  "id": 32,
					  "name": "bytes32",
					  "nodeType": "ElementaryTypeName",
					  "src": "515:7:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_bytes32",
						"typeString": "bytes32"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 35,
					"indexed": false,
					"mutability": "mutable",
					"name": "number1",
					"nameLocation": "559:7:11",
					"nodeType": "VariableDeclaration",
					"scope": 39,
					"src": "551:15:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 34,
					  "name": "uint256",
					  "nodeType": "ElementaryTypeName",
					  "src": "551:7:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 37,
					"indexed": false,
					"mutability": "mutable",
					"name": "number2",
					"nameLocation": "585:7:11",
					"nodeType": "VariableDeclaration",
					"scope": 39,
					"src": "577:15:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 36,
					  "name": "uint256",
					  "nodeType": "ElementaryTypeName",
					  "src": "577:7:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "505:93:11"
			  },
			  "src": "483:116:11"
			},
			{
			  "canonicalName": "BetContract.Bet",
			  "id": 58,
			  "members": [
				{
				  "constant": false,
				  "id": 41,
				  "mutability": "mutable",
				  "name": "id",
				  "nameLocation": "633:2:11",
				  "nodeType": "VariableDeclaration",
				  "scope": 58,
				  "src": "628:7:11",
				  "stateVariable": false,
				  "storageLocation": "default",
				  "typeDescriptions": {
					"typeIdentifier": "t_uint256",
					"typeString": "uint256"
				  },
				  "typeName": {
					"id": 40,
					"name": "uint",
					"nodeType": "ElementaryTypeName",
					"src": "628:4:11",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					}
				  },
				  "visibility": "internal"
				},
				{
				  "constant": false,
				  "id": 43,
				  "mutability": "mutable",
				  "name": "gameId",
				  "nameLocation": "650:6:11",
				  "nodeType": "VariableDeclaration",
				  "scope": 58,
				  "src": "645:11:11",
				  "stateVariable": false,
				  "storageLocation": "default",
				  "typeDescriptions": {
					"typeIdentifier": "t_uint256",
					"typeString": "uint256"
				  },
				  "typeName": {
					"id": 42,
					"name": "uint",
					"nodeType": "ElementaryTypeName",
					"src": "645:4:11",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					}
				  },
				  "visibility": "internal"
				},
				{
				  "constant": false,
				  "id": 45,
				  "mutability": "mutable",
				  "name": "conditions",
				  "nameLocation": "671:10:11",
				  "nodeType": "VariableDeclaration",
				  "scope": 58,
				  "src": "666:15:11",
				  "stateVariable": false,
				  "storageLocation": "default",
				  "typeDescriptions": {
					"typeIdentifier": "t_uint256",
					"typeString": "uint256"
				  },
				  "typeName": {
					"id": 44,
					"name": "uint",
					"nodeType": "ElementaryTypeName",
					"src": "666:4:11",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					}
				  },
				  "visibility": "internal"
				},
				{
				  "constant": false,
				  "id": 47,
				  "mutability": "mutable",
				  "name": "price",
				  "nameLocation": "696:5:11",
				  "nodeType": "VariableDeclaration",
				  "scope": 58,
				  "src": "691:10:11",
				  "stateVariable": false,
				  "storageLocation": "default",
				  "typeDescriptions": {
					"typeIdentifier": "t_uint256",
					"typeString": "uint256"
				  },
				  "typeName": {
					"id": 46,
					"name": "uint",
					"nodeType": "ElementaryTypeName",
					"src": "691:4:11",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					}
				  },
				  "visibility": "internal"
				},
				{
				  "constant": false,
				  "id": 49,
				  "mutability": "mutable",
				  "name": "challenger",
				  "nameLocation": "719:10:11",
				  "nodeType": "VariableDeclaration",
				  "scope": 58,
				  "src": "711:18:11",
				  "stateVariable": false,
				  "storageLocation": "default",
				  "typeDescriptions": {
					"typeIdentifier": "t_address",
					"typeString": "address"
				  },
				  "typeName": {
					"id": 48,
					"name": "address",
					"nodeType": "ElementaryTypeName",
					"src": "711:7:11",
					"stateMutability": "nonpayable",
					"typeDescriptions": {
					  "typeIdentifier": "t_address",
					  "typeString": "address"
					}
				  },
				  "visibility": "internal"
				},
				{
				  "constant": false,
				  "id": 51,
				  "mutability": "mutable",
				  "name": "accepter",
				  "nameLocation": "747:8:11",
				  "nodeType": "VariableDeclaration",
				  "scope": 58,
				  "src": "739:16:11",
				  "stateVariable": false,
				  "storageLocation": "default",
				  "typeDescriptions": {
					"typeIdentifier": "t_address",
					"typeString": "address"
				  },
				  "typeName": {
					"id": 50,
					"name": "address",
					"nodeType": "ElementaryTypeName",
					"src": "739:7:11",
					"stateMutability": "nonpayable",
					"typeDescriptions": {
					  "typeIdentifier": "t_address",
					  "typeString": "address"
					}
				  },
				  "visibility": "internal"
				},
				{
				  "constant": false,
				  "id": 53,
				  "mutability": "mutable",
				  "name": "winner",
				  "nameLocation": "773:6:11",
				  "nodeType": "VariableDeclaration",
				  "scope": 58,
				  "src": "765:14:11",
				  "stateVariable": false,
				  "storageLocation": "default",
				  "typeDescriptions": {
					"typeIdentifier": "t_address",
					"typeString": "address"
				  },
				  "typeName": {
					"id": 52,
					"name": "address",
					"nodeType": "ElementaryTypeName",
					"src": "765:7:11",
					"stateMutability": "nonpayable",
					"typeDescriptions": {
					  "typeIdentifier": "t_address",
					  "typeString": "address"
					}
				  },
				  "visibility": "internal"
				},
				{
				  "constant": false,
				  "id": 55,
				  "mutability": "mutable",
				  "name": "isAlive",
				  "nameLocation": "794:7:11",
				  "nodeType": "VariableDeclaration",
				  "scope": 58,
				  "src": "789:12:11",
				  "stateVariable": false,
				  "storageLocation": "default",
				  "typeDescriptions": {
					"typeIdentifier": "t_bool",
					"typeString": "bool"
				  },
				  "typeName": {
					"id": 54,
					"name": "bool",
					"nodeType": "ElementaryTypeName",
					"src": "789:4:11",
					"typeDescriptions": {
					  "typeIdentifier": "t_bool",
					  "typeString": "bool"
					}
				  },
				  "visibility": "internal"
				},
				{
				  "constant": false,
				  "id": 57,
				  "mutability": "mutable",
				  "name": "isAccepted",
				  "nameLocation": "816:10:11",
				  "nodeType": "VariableDeclaration",
				  "scope": 58,
				  "src": "811:15:11",
				  "stateVariable": false,
				  "storageLocation": "default",
				  "typeDescriptions": {
					"typeIdentifier": "t_bool",
					"typeString": "bool"
				  },
				  "typeName": {
					"id": 56,
					"name": "bool",
					"nodeType": "ElementaryTypeName",
					"src": "811:4:11",
					"typeDescriptions": {
					  "typeIdentifier": "t_bool",
					  "typeString": "bool"
					}
				  },
				  "visibility": "internal"
				}
			  ],
			  "name": "Bet",
			  "nameLocation": "613:3:11",
			  "nodeType": "StructDefinition",
			  "scope": 728,
			  "src": "606:227:11",
			  "visibility": "public"
			},
			{
			  "anonymous": false,
			  "eventSelector": "8ac3a030abe983d724dc055182198435d38e966970592f8ab4015e6b0eacb62a",
			  "id": 66,
			  "name": "LogPublishBet",
			  "nameLocation": "846:13:11",
			  "nodeType": "EventDefinition",
			  "parameters": {
				"id": 65,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 60,
					"indexed": true,
					"mutability": "mutable",
					"name": "_id",
					"nameLocation": "883:3:11",
					"nodeType": "VariableDeclaration",
					"scope": 66,
					"src": "870:16:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 59,
					  "name": "uint",
					  "nodeType": "ElementaryTypeName",
					  "src": "870:4:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 62,
					"indexed": true,
					"mutability": "mutable",
					"name": "_challenger",
					"nameLocation": "912:11:11",
					"nodeType": "VariableDeclaration",
					"scope": 66,
					"src": "896:27:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_address",
					  "typeString": "address"
					},
					"typeName": {
					  "id": 61,
					  "name": "address",
					  "nodeType": "ElementaryTypeName",
					  "src": "896:7:11",
					  "stateMutability": "nonpayable",
					  "typeDescriptions": {
						"typeIdentifier": "t_address",
						"typeString": "address"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 64,
					"indexed": true,
					"mutability": "mutable",
					"name": "_price",
					"nameLocation": "949:6:11",
					"nodeType": "VariableDeclaration",
					"scope": 66,
					"src": "933:22:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 63,
					  "name": "uint256",
					  "nodeType": "ElementaryTypeName",
					  "src": "933:7:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "859:102:11"
			  },
			  "src": "840:122:11"
			},
			{
			  "anonymous": false,
			  "eventSelector": "05394edf3dc91f34510ad8b3c082c8a370ad8ee677a618697d8605ceeb76957b",
			  "id": 76,
			  "name": "LogAcceptBet",
			  "nameLocation": "975:12:11",
			  "nodeType": "EventDefinition",
			  "parameters": {
				"id": 75,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 68,
					"indexed": true,
					"mutability": "mutable",
					"name": "_id",
					"nameLocation": "1011:3:11",
					"nodeType": "VariableDeclaration",
					"scope": 76,
					"src": "998:16:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 67,
					  "name": "uint",
					  "nodeType": "ElementaryTypeName",
					  "src": "998:4:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 70,
					"indexed": true,
					"mutability": "mutable",
					"name": "_challenger",
					"nameLocation": "1040:11:11",
					"nodeType": "VariableDeclaration",
					"scope": 76,
					"src": "1024:27:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_address",
					  "typeString": "address"
					},
					"typeName": {
					  "id": 69,
					  "name": "address",
					  "nodeType": "ElementaryTypeName",
					  "src": "1024:7:11",
					  "stateMutability": "nonpayable",
					  "typeDescriptions": {
						"typeIdentifier": "t_address",
						"typeString": "address"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 72,
					"indexed": true,
					"mutability": "mutable",
					"name": "_accepter",
					"nameLocation": "1077:9:11",
					"nodeType": "VariableDeclaration",
					"scope": 76,
					"src": "1061:25:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_address",
					  "typeString": "address"
					},
					"typeName": {
					  "id": 71,
					  "name": "address",
					  "nodeType": "ElementaryTypeName",
					  "src": "1061:7:11",
					  "stateMutability": "nonpayable",
					  "typeDescriptions": {
						"typeIdentifier": "t_address",
						"typeString": "address"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 74,
					"indexed": false,
					"mutability": "mutable",
					"name": "_price",
					"nameLocation": "1105:6:11",
					"nodeType": "VariableDeclaration",
					"scope": 76,
					"src": "1096:15:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 73,
					  "name": "uint256",
					  "nodeType": "ElementaryTypeName",
					  "src": "1096:7:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "987:130:11"
			  },
			  "src": "969:149:11"
			},
			{
			  "anonymous": false,
			  "eventSelector": "de7bdc63a1edb3ac0ac6082e403023df932e591eefb161a7e009be960f42897a",
			  "id": 86,
			  "name": "LogResolveBet",
			  "nameLocation": "1130:13:11",
			  "nodeType": "EventDefinition",
			  "parameters": {
				"id": 85,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 78,
					"indexed": true,
					"mutability": "mutable",
					"name": "_id",
					"nameLocation": "1167:3:11",
					"nodeType": "VariableDeclaration",
					"scope": 86,
					"src": "1154:16:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 77,
					  "name": "uint",
					  "nodeType": "ElementaryTypeName",
					  "src": "1154:4:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 80,
					"indexed": true,
					"mutability": "mutable",
					"name": "_challenger",
					"nameLocation": "1196:11:11",
					"nodeType": "VariableDeclaration",
					"scope": 86,
					"src": "1180:27:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_address",
					  "typeString": "address"
					},
					"typeName": {
					  "id": 79,
					  "name": "address",
					  "nodeType": "ElementaryTypeName",
					  "src": "1180:7:11",
					  "stateMutability": "nonpayable",
					  "typeDescriptions": {
						"typeIdentifier": "t_address",
						"typeString": "address"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 82,
					"indexed": true,
					"mutability": "mutable",
					"name": "_accepter",
					"nameLocation": "1233:9:11",
					"nodeType": "VariableDeclaration",
					"scope": 86,
					"src": "1217:25:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_address",
					  "typeString": "address"
					},
					"typeName": {
					  "id": 81,
					  "name": "address",
					  "nodeType": "ElementaryTypeName",
					  "src": "1217:7:11",
					  "stateMutability": "nonpayable",
					  "typeDescriptions": {
						"typeIdentifier": "t_address",
						"typeString": "address"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 84,
					"indexed": false,
					"mutability": "mutable",
					"name": "_payout",
					"nameLocation": "1260:7:11",
					"nodeType": "VariableDeclaration",
					"scope": 86,
					"src": "1252:15:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 83,
					  "name": "uint256",
					  "nodeType": "ElementaryTypeName",
					  "src": "1252:7:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "1143:130:11"
			  },
			  "src": "1124:150:11"
			},
			{
			  "anonymous": false,
			  "eventSelector": "a87fe5b5627a119e4b2f557f4bd018c39e7eaece8a2957a278951bcaafc11178",
			  "id": 92,
			  "name": "logNumber",
			  "nameLocation": "1286:9:11",
			  "nodeType": "EventDefinition",
			  "parameters": {
				"id": 91,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 88,
					"indexed": false,
					"mutability": "mutable",
					"name": "number1",
					"nameLocation": "1311:7:11",
					"nodeType": "VariableDeclaration",
					"scope": 92,
					"src": "1306:12:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 87,
					  "name": "uint",
					  "nodeType": "ElementaryTypeName",
					  "src": "1306:4:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 90,
					"indexed": false,
					"mutability": "mutable",
					"name": "number2",
					"nameLocation": "1333:7:11",
					"nodeType": "VariableDeclaration",
					"scope": 92,
					"src": "1328:12:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 89,
					  "name": "uint",
					  "nodeType": "ElementaryTypeName",
					  "src": "1328:4:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "1296:50:11"
			  },
			  "src": "1280:67:11"
			},
			{
			  "body": {
				"id": 116,
				"nodeType": "Block",
				"src": "1368:274:11",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "hexValue": "307833323643393737453665666338344535313262423943333066373645333063313630654430364642",
						  "id": 96,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "kind": "number",
						  "lValueRequested": false,
						  "nodeType": "Literal",
						  "src": "1405:42:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  },
						  "value": "0x326C977E6efc84E512bB9C30f76E30c160eD06FB"
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  }
						],
						"id": 95,
						"name": "setChainlinkToken",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 1129,
						"src": "1387:17:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
						  "typeString": "function (address)"
						}
					  },
					  "id": 97,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "1387:61:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 98,
					"nodeType": "ExpressionStatement",
					"src": "1387:61:11"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "hexValue": "307837636137323135633642383031336632343941313935636331303746393763346536323365354635",
						  "id": 100,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "kind": "number",
						  "lValueRequested": false,
						  "nodeType": "Literal",
						  "src": "1477:42:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  },
						  "value": "0x7ca7215c6B8013f249A195cc107F97c4e623e5F5"
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  }
						],
						"id": 99,
						"name": "setChainlinkOracle",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 1116,
						"src": "1458:18:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
						  "typeString": "function (address)"
						}
					  },
					  "id": 101,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "1458:62:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 102,
					"nodeType": "ExpressionStatement",
					"src": "1458:62:11"
				  },
				  {
					"expression": {
					  "id": 105,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"id": 103,
						"name": "externalJobId",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 15,
						"src": "1530:13:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_bytes32",
						  "typeString": "bytes32"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"hexValue": "3238643533353536386237383438616462323336396531383530616134653163",
						"id": 104,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"kind": "string",
						"lValueRequested": false,
						"nodeType": "Literal",
						"src": "1546:34:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_stringliteral_1a4fd91c9b3fb576796e9d3592dfb9afb8d2c6879767f32293fab72395a9d59d",
						  "typeString": "literal_string \"28d535568b7848adb2369e1850aa4e1c\""
						},
						"value": "28d535568b7848adb2369e1850aa4e1c"
					  },
					  "src": "1530:50:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_bytes32",
						"typeString": "bytes32"
					  }
					},
					"id": 106,
					"nodeType": "ExpressionStatement",
					"src": "1530:50:11"
				  },
				  {
					"expression": {
					  "id": 114,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"id": 107,
						"name": "oraclePayment",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 17,
						"src": "1590:13:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"commonType": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						},
						"id": 113,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"lValueRequested": false,
						"leftExpression": {
						  "components": [
							{
							  "commonType": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							  },
							  "id": 110,
							  "isConstant": false,
							  "isLValue": false,
							  "isPure": true,
							  "lValueRequested": false,
							  "leftExpression": {
								"hexValue": "31",
								"id": 108,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "1607:1:11",
								"typeDescriptions": {
								  "typeIdentifier": "t_rational_1_by_1",
								  "typeString": "int_const 1"
								},
								"value": "1"
							  },
							  "nodeType": "BinaryOperation",
							  "operator": "*",
							  "rightExpression": {
								"id": 109,
								"name": "LINK_DIVISIBILITY",
								"nodeType": "Identifier",
								"overloadedDeclarations": [],
								"referencedDeclaration": 748,
								"src": "1611:17:11",
								"typeDescriptions": {
								  "typeIdentifier": "t_uint256",
								  "typeString": "uint256"
								}
							  },
							  "src": "1607:21:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							  }
							}
						  ],
						  "id": 111,
						  "isConstant": false,
						  "isInlineArray": false,
						  "isLValue": false,
						  "isPure": true,
						  "lValueRequested": false,
						  "nodeType": "TupleExpression",
						  "src": "1606:23:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						},
						"nodeType": "BinaryOperation",
						"operator": "/",
						"rightExpression": {
						  "hexValue": "3130",
						  "id": 112,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "kind": "number",
						  "lValueRequested": false,
						  "nodeType": "Literal",
						  "src": "1632:2:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_rational_10_by_1",
							"typeString": "int_const 10"
						  },
						  "value": "10"
						},
						"src": "1606:28:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "src": "1590:44:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"id": 115,
					"nodeType": "ExpressionStatement",
					"src": "1590:44:11"
				  }
				]
			  },
			  "id": 117,
			  "implemented": true,
			  "kind": "constructor",
			  "modifiers": [],
			  "name": "",
			  "nameLocation": "-1:-1:-1",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 93,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "1365:2:11"
			  },
			  "returnParameters": {
				"id": 94,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "1368:0:11"
			  },
			  "scope": 728,
			  "src": "1354:288:11",
			  "stateMutability": "nonpayable",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 176,
				"nodeType": "Block",
				"src": "1690:473:11",
				"statements": [
				  {
					"assignments": [
					  124
					],
					"declarations": [
					  {
						"constant": false,
						"id": 124,
						"mutability": "mutable",
						"name": "req",
						"nameLocation": "1726:3:11",
						"nodeType": "VariableDeclaration",
						"scope": 176,
						"src": "1701:28:11",
						"stateVariable": false,
						"storageLocation": "memory",
						"typeDescriptions": {
						  "typeIdentifier": "t_struct$_Request_$1347_memory_ptr",
						  "typeString": "struct Chainlink.Request"
						},
						"typeName": {
						  "id": 123,
						  "nodeType": "UserDefinedTypeName",
						  "pathNode": {
							"id": 122,
							"name": "Chainlink.Request",
							"nameLocations": [
							  "1701:9:11",
							  "1711:7:11"
							],
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 1347,
							"src": "1701:17:11"
						  },
						  "referencedDeclaration": 1347,
						  "src": "1701:17:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_Request_$1347_storage_ptr",
							"typeString": "struct Chainlink.Request"
						  }
						},
						"visibility": "internal"
					  }
					],
					"id": 135,
					"initialValue": {
					  "arguments": [
						{
						  "id": 126,
						  "name": "externalJobId",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 15,
						  "src": "1754:13:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_bytes32",
							"typeString": "bytes32"
						  }
						},
						{
						  "arguments": [
							{
							  "id": 129,
							  "name": "this",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": -28,
							  "src": "1777:4:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_contract$_BetContract_$728",
								"typeString": "contract BetContract"
							  }
							}
						  ],
						  "expression": {
							"argumentTypes": [
							  {
								"typeIdentifier": "t_contract$_BetContract_$728",
								"typeString": "contract BetContract"
							  }
							],
							"id": 128,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"lValueRequested": false,
							"nodeType": "ElementaryTypeNameExpression",
							"src": "1769:7:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_type$_t_address_$",
							  "typeString": "type(address)"
							},
							"typeName": {
							  "id": 127,
							  "name": "address",
							  "nodeType": "ElementaryTypeName",
							  "src": "1769:7:11",
							  "typeDescriptions": {}
							}
						  },
						  "id": 130,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "kind": "typeConversion",
						  "lValueRequested": false,
						  "nameLocations": [],
						  "names": [],
						  "nodeType": "FunctionCall",
						  "src": "1769:13:11",
						  "tryCall": false,
						  "typeDescriptions": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  }
						},
						{
						  "expression": {
							"expression": {
							  "id": 131,
							  "name": "this",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": -28,
							  "src": "1784:4:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_contract$_BetContract_$728",
								"typeString": "contract BetContract"
							  }
							},
							"id": 132,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"memberLocation": "1789:19:11",
							"memberName": "fulfillBytesAndUint",
							"nodeType": "MemberAccess",
							"referencedDeclaration": 204,
							"src": "1784:24:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
							  "typeString": "function (bytes32,uint256,uint256) external"
							}
						  },
						  "id": 133,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "lValueRequested": false,
						  "memberLocation": "1809:8:11",
						  "memberName": "selector",
						  "nodeType": "MemberAccess",
						  "src": "1784:33:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_bytes4",
							"typeString": "bytes4"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bytes32",
							"typeString": "bytes32"
						  },
						  {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  },
						  {
							"typeIdentifier": "t_bytes4",
							"typeString": "bytes4"
						  }
						],
						"id": 125,
						"name": "buildChainlinkRequest",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 833,
						"src": "1732:21:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_address_$_t_bytes4_$returns$_t_struct$_Request_$1347_memory_ptr_$",
						  "typeString": "function (bytes32,address,bytes4) pure returns (struct Chainlink.Request memory)"
						}
					  },
					  "id": 134,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "1732:86:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_struct$_Request_$1347_memory_ptr",
						"typeString": "struct Chainlink.Request memory"
					  }
					},
					"nodeType": "VariableDeclarationStatement",
					"src": "1701:117:11"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "hexValue": "676574",
						  "id": 139,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "kind": "string",
						  "lValueRequested": false,
						  "nodeType": "Literal",
						  "src": "1836:5:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_stringliteral_6817c00f03de8b5bd58d2016b59d251c13056b989171c5852949903bc043bc27",
							"typeString": "literal_string \"get\""
						  },
						  "value": "get"
						},
						{
						  "hexValue": "68747470733a2f2f6170692e73706f727473646174612e696f2f76332f6e62612f73636f7265732f6a736f6e2f5465616d47616d6553746174734279536561736f6e2f323032332f31312f313f6b65793d3736633262353661636532383435633539653834663330623861383861643336",
						  "id": 140,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "kind": "string",
						  "lValueRequested": false,
						  "nodeType": "Literal",
						  "src": "1843:115:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_stringliteral_4c03a63bd6f69a5f4b5162bf60ac2f1ca7fe367faae4e0597147f0dc2628667e",
							"typeString": "literal_string \"https://api.sportsdata.io/v3/nba/scores/json/TeamGameStatsBySeason/2023/11/1?key=76c2b56ace2845c59e84f30b8a88ad36\""
						  },
						  "value": "https://api.sportsdata.io/v3/nba/scores/json/TeamGameStatsBySeason/2023/11/1?key=76c2b56ace2845c59e84f30b8a88ad36"
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_stringliteral_6817c00f03de8b5bd58d2016b59d251c13056b989171c5852949903bc043bc27",
							"typeString": "literal_string \"get\""
						  },
						  {
							"typeIdentifier": "t_stringliteral_4c03a63bd6f69a5f4b5162bf60ac2f1ca7fe367faae4e0597147f0dc2628667e",
							"typeString": "literal_string \"https://api.sportsdata.io/v3/nba/scores/json/TeamGameStatsBySeason/2023/11/1?key=76c2b56ace2845c59e84f30b8a88ad36\""
						  }
						],
						"expression": {
						  "id": 136,
						  "name": "req",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 124,
						  "src": "1828:3:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_Request_$1347_memory_ptr",
							"typeString": "struct Chainlink.Request memory"
						  }
						},
						"id": 138,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": false,
						"memberLocation": "1832:3:11",
						"memberName": "add",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 1447,
						"src": "1828:7:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$1347_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_Request_$1347_memory_ptr_$",
						  "typeString": "function (struct Chainlink.Request memory,string memory,string memory) pure"
						}
					  },
					  "id": 141,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "1828:131:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 142,
					"nodeType": "ExpressionStatement",
					"src": "1828:131:11"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "hexValue": "7061746831",
						  "id": 146,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "kind": "string",
						  "lValueRequested": false,
						  "nodeType": "Literal",
						  "src": "1977:7:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_stringliteral_84cfab97f33392bc6425ae2b033cc53a0acc94e48b47a73d075a44894c6d7dc9",
							"typeString": "literal_string \"path1\""
						  },
						  "value": "path1"
						},
						{
						  "hexValue": "302c4e616d65",
						  "id": 147,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "kind": "string",
						  "lValueRequested": false,
						  "nodeType": "Literal",
						  "src": "1986:8:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_stringliteral_6ddd53268ea6c10458350d5c3136a56fdabe816321533e0b7377151febce3c08",
							"typeString": "literal_string \"0,Name\""
						  },
						  "value": "0,Name"
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_stringliteral_84cfab97f33392bc6425ae2b033cc53a0acc94e48b47a73d075a44894c6d7dc9",
							"typeString": "literal_string \"path1\""
						  },
						  {
							"typeIdentifier": "t_stringliteral_6ddd53268ea6c10458350d5c3136a56fdabe816321533e0b7377151febce3c08",
							"typeString": "literal_string \"0,Name\""
						  }
						],
						"expression": {
						  "id": 143,
						  "name": "req",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 124,
						  "src": "1969:3:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_Request_$1347_memory_ptr",
							"typeString": "struct Chainlink.Request memory"
						  }
						},
						"id": 145,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": false,
						"memberLocation": "1973:3:11",
						"memberName": "add",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 1447,
						"src": "1969:7:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$1347_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_Request_$1347_memory_ptr_$",
						  "typeString": "function (struct Chainlink.Request memory,string memory,string memory) pure"
						}
					  },
					  "id": 148,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "1969:26:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 149,
					"nodeType": "ExpressionStatement",
					"src": "1969:26:11"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "hexValue": "7061746832",
						  "id": 153,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "kind": "string",
						  "lValueRequested": false,
						  "nodeType": "Literal",
						  "src": "2013:7:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_stringliteral_9a902c09de1995f6f413ea92940fa37ef27aef0eb7f2dda2917d2e198d257947",
							"typeString": "literal_string \"path2\""
						  },
						  "value": "path2"
						},
						{
						  "hexValue": "302c57696e73",
						  "id": 154,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "kind": "string",
						  "lValueRequested": false,
						  "nodeType": "Literal",
						  "src": "2022:8:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_stringliteral_e03e9ca230ae7f5460f0b773c64c5ab63249106c49bf4066603acf9d7c7a8755",
							"typeString": "literal_string \"0,Wins\""
						  },
						  "value": "0,Wins"
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_stringliteral_9a902c09de1995f6f413ea92940fa37ef27aef0eb7f2dda2917d2e198d257947",
							"typeString": "literal_string \"path2\""
						  },
						  {
							"typeIdentifier": "t_stringliteral_e03e9ca230ae7f5460f0b773c64c5ab63249106c49bf4066603acf9d7c7a8755",
							"typeString": "literal_string \"0,Wins\""
						  }
						],
						"expression": {
						  "id": 150,
						  "name": "req",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 124,
						  "src": "2005:3:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_Request_$1347_memory_ptr",
							"typeString": "struct Chainlink.Request memory"
						  }
						},
						"id": 152,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": false,
						"memberLocation": "2009:3:11",
						"memberName": "add",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 1447,
						"src": "2005:7:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$1347_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_Request_$1347_memory_ptr_$",
						  "typeString": "function (struct Chainlink.Request memory,string memory,string memory) pure"
						}
					  },
					  "id": 155,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "2005:26:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 156,
					"nodeType": "ExpressionStatement",
					"src": "2005:26:11"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "hexValue": "7061746833",
						  "id": 160,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "kind": "string",
						  "lValueRequested": false,
						  "nodeType": "Literal",
						  "src": "2049:7:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_stringliteral_7315364003ed5868eb5f6d34bde5e686f50e1084721224262d1e966dd8a607c4",
							"typeString": "literal_string \"path3\""
						  },
						  "value": "path3"
						},
						{
						  "hexValue": "302c4c6f73736573",
						  "id": 161,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "kind": "string",
						  "lValueRequested": false,
						  "nodeType": "Literal",
						  "src": "2058:10:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_stringliteral_e3b407de5b243c1b9b67a570562df2bae2676376bb4dff07ce19ea1185a84868",
							"typeString": "literal_string \"0,Losses\""
						  },
						  "value": "0,Losses"
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_stringliteral_7315364003ed5868eb5f6d34bde5e686f50e1084721224262d1e966dd8a607c4",
							"typeString": "literal_string \"path3\""
						  },
						  {
							"typeIdentifier": "t_stringliteral_e3b407de5b243c1b9b67a570562df2bae2676376bb4dff07ce19ea1185a84868",
							"typeString": "literal_string \"0,Losses\""
						  }
						],
						"expression": {
						  "id": 157,
						  "name": "req",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 124,
						  "src": "2041:3:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_Request_$1347_memory_ptr",
							"typeString": "struct Chainlink.Request memory"
						  }
						},
						"id": 159,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": false,
						"memberLocation": "2045:3:11",
						"memberName": "add",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 1447,
						"src": "2041:7:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$1347_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_Request_$1347_memory_ptr_$",
						  "typeString": "function (struct Chainlink.Request memory,string memory,string memory) pure"
						}
					  },
					  "id": 162,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "2041:28:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 163,
					"nodeType": "ExpressionStatement",
					"src": "2041:28:11"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "hexValue": "7061746834",
						  "id": 167,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "kind": "string",
						  "lValueRequested": false,
						  "nodeType": "Literal",
						  "src": "2087:7:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_stringliteral_12b01943d9c090b224d5075f7e611e125fdda3bab852c6bdc9ed9beb938779d4",
							"typeString": "literal_string \"path4\""
						  },
						  "value": "path4"
						},
						{
						  "hexValue": "302c47616d654944",
						  "id": 168,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "kind": "string",
						  "lValueRequested": false,
						  "nodeType": "Literal",
						  "src": "2096:10:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_stringliteral_fa0d5847d8e8f525017b420a8a545e78995e97dd804463f5a6dae0690b85e50d",
							"typeString": "literal_string \"0,GameID\""
						  },
						  "value": "0,GameID"
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_stringliteral_12b01943d9c090b224d5075f7e611e125fdda3bab852c6bdc9ed9beb938779d4",
							"typeString": "literal_string \"path4\""
						  },
						  {
							"typeIdentifier": "t_stringliteral_fa0d5847d8e8f525017b420a8a545e78995e97dd804463f5a6dae0690b85e50d",
							"typeString": "literal_string \"0,GameID\""
						  }
						],
						"expression": {
						  "id": 164,
						  "name": "req",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 124,
						  "src": "2079:3:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_Request_$1347_memory_ptr",
							"typeString": "struct Chainlink.Request memory"
						  }
						},
						"id": 166,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": false,
						"memberLocation": "2083:3:11",
						"memberName": "add",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 1447,
						"src": "2079:7:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$1347_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_Request_$1347_memory_ptr_$",
						  "typeString": "function (struct Chainlink.Request memory,string memory,string memory) pure"
						}
					  },
					  "id": 169,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "2079:28:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 170,
					"nodeType": "ExpressionStatement",
					"src": "2079:28:11"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "id": 172,
						  "name": "req",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 124,
						  "src": "2137:3:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_Request_$1347_memory_ptr",
							"typeString": "struct Chainlink.Request memory"
						  }
						},
						{
						  "id": 173,
						  "name": "oraclePayment",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 17,
						  "src": "2142:13:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_struct$_Request_$1347_memory_ptr",
							"typeString": "struct Chainlink.Request memory"
						  },
						  {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						],
						"id": 171,
						"name": "sendOperatorRequest",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 958,
						"src": "2117:19:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Request_$1347_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
						  "typeString": "function (struct Chainlink.Request memory,uint256) returns (bytes32)"
						}
					  },
					  "id": 174,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "2117:39:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_bytes32",
						"typeString": "bytes32"
					  }
					},
					"id": 175,
					"nodeType": "ExpressionStatement",
					"src": "2117:39:11"
				  }
				]
			  },
			  "id": 177,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [],
			  "name": "requestMultiVariable",
			  "nameLocation": "1658:20:11",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 118,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "1678:2:11"
			  },
			  "returnParameters": {
				"id": 119,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "1690:0:11"
			  },
			  "scope": 728,
			  "src": "1649:514:11",
			  "stateMutability": "nonpayable",
			  "virtual": false,
			  "visibility": "internal"
			},
			{
			  "body": {
				"id": 203,
				"nodeType": "Block",
				"src": "2306:130:11",
				"statements": [
				  {
					"eventCall": {
					  "arguments": [
						{
						  "id": 190,
						  "name": "requestId",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 179,
						  "src": "2343:9:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_bytes32",
							"typeString": "bytes32"
						  }
						},
						{
						  "id": 191,
						  "name": "_number1",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 181,
						  "src": "2354:8:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						},
						{
						  "id": 192,
						  "name": "_number2",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 183,
						  "src": "2364:8:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bytes32",
							"typeString": "bytes32"
						  },
						  {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  },
						  {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						],
						"id": 189,
						"name": "RequestFulfilled",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 39,
						"src": "2326:16:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
						  "typeString": "function (bytes32,uint256,uint256)"
						}
					  },
					  "id": 193,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "2326:47:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 194,
					"nodeType": "EmitStatement",
					"src": "2321:52:11"
				  },
				  {
					"expression": {
					  "id": 197,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"id": 195,
						"name": "number1",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 6,
						"src": "2383:7:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"id": 196,
						"name": "_number1",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 181,
						"src": "2393:8:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "src": "2383:18:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"id": 198,
					"nodeType": "ExpressionStatement",
					"src": "2383:18:11"
				  },
				  {
					"expression": {
					  "id": 201,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"id": 199,
						"name": "number2",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 8,
						"src": "2411:7:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"id": 200,
						"name": "_number2",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 183,
						"src": "2421:8:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "src": "2411:18:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"id": 202,
					"nodeType": "ExpressionStatement",
					"src": "2411:18:11"
				  }
				]
			  },
			  "functionSelector": "6b42e3b5",
			  "id": 204,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [
				{
				  "arguments": [
					{
					  "id": 186,
					  "name": "requestId",
					  "nodeType": "Identifier",
					  "overloadedDeclarations": [],
					  "referencedDeclaration": 179,
					  "src": "2296:9:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_bytes32",
						"typeString": "bytes32"
					  }
					}
				  ],
				  "id": 187,
				  "kind": "modifierInvocation",
				  "modifierName": {
					"id": 185,
					"name": "recordChainlinkFulfillment",
					"nameLocations": [
					  "2269:26:11"
					],
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 1301,
					"src": "2269:26:11"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "2269:37:11"
				}
			  ],
			  "name": "fulfillBytesAndUint",
			  "nameLocation": "2179:19:11",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 184,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 179,
					"mutability": "mutable",
					"name": "requestId",
					"nameLocation": "2207:9:11",
					"nodeType": "VariableDeclaration",
					"scope": 204,
					"src": "2199:17:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_bytes32",
					  "typeString": "bytes32"
					},
					"typeName": {
					  "id": 178,
					  "name": "bytes32",
					  "nodeType": "ElementaryTypeName",
					  "src": "2199:7:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_bytes32",
						"typeString": "bytes32"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 181,
					"mutability": "mutable",
					"name": "_number1",
					"nameLocation": "2226:8:11",
					"nodeType": "VariableDeclaration",
					"scope": 204,
					"src": "2218:16:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 180,
					  "name": "uint256",
					  "nodeType": "ElementaryTypeName",
					  "src": "2218:7:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 183,
					"mutability": "mutable",
					"name": "_number2",
					"nameLocation": "2244:8:11",
					"nodeType": "VariableDeclaration",
					"scope": 204,
					"src": "2236:16:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 182,
					  "name": "uint256",
					  "nodeType": "ElementaryTypeName",
					  "src": "2236:7:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "2198:55:11"
			  },
			  "returnParameters": {
				"id": 188,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "2306:0:11"
			  },
			  "scope": 728,
			  "src": "2170:266:11",
			  "stateMutability": "nonpayable",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 306,
				"nodeType": "Block",
				"src": "2523:582:11",
				"statements": [
				  {
					"expression": {
					  "arguments": [],
					  "expression": {
						"argumentTypes": [],
						"id": 207,
						"name": "requestMultiVariable",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 177,
						"src": "2534:20:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
						  "typeString": "function ()"
						}
					  },
					  "id": 208,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "2534:22:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 209,
					"nodeType": "ExpressionStatement",
					"src": "2534:22:11"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  },
						  "id": 217,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"commonType": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							},
							"id": 213,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"leftExpression": {
							  "id": 211,
							  "name": "number1",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 6,
							  "src": "2574:7:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							  }
							},
							"nodeType": "BinaryOperation",
							"operator": "==",
							"rightExpression": {
							  "hexValue": "31",
							  "id": 212,
							  "isConstant": false,
							  "isLValue": false,
							  "isPure": true,
							  "kind": "number",
							  "lValueRequested": false,
							  "nodeType": "Literal",
							  "src": "2585:1:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_rational_1_by_1",
								"typeString": "int_const 1"
							  },
							  "value": "1"
							},
							"src": "2574:12:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": "||",
						  "rightExpression": {
							"commonType": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							},
							"id": 216,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"leftExpression": {
							  "id": 214,
							  "name": "number2",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 8,
							  "src": "2590:7:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							  }
							},
							"nodeType": "BinaryOperation",
							"operator": "==",
							"rightExpression": {
							  "hexValue": "31",
							  "id": 215,
							  "isConstant": false,
							  "isLValue": false,
							  "isPure": true,
							  "kind": "number",
							  "lValueRequested": false,
							  "nodeType": "Literal",
							  "src": "2601:1:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_rational_1_by_1",
								"typeString": "int_const 1"
							  },
							  "value": "1"
							},
							"src": "2590:12:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							}
						  },
						  "src": "2574:28:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						],
						"id": 210,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  -18,
						  -18
						],
						"referencedDeclaration": -18,
						"src": "2566:7:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
						  "typeString": "function (bool) pure"
						}
					  },
					  "id": 218,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "2566:37:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 219,
					"nodeType": "ExpressionStatement",
					"src": "2566:37:11"
				  },
				  {
					"body": {
					  "id": 304,
					  "nodeType": "Block",
					  "src": "2651:447:11",
					  "statements": [
						{
						  "condition": {
							"commonType": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							},
							"id": 235,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"leftExpression": {
							  "expression": {
								"baseExpression": {
								  "id": 230,
								  "name": "bets",
								  "nodeType": "Identifier",
								  "overloadedDeclarations": [],
								  "referencedDeclaration": 26,
								  "src": "2678:4:11",
								  "typeDescriptions": {
									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$58_storage_$",
									"typeString": "mapping(uint256 => struct BetContract.Bet storage ref)"
								  }
								},
								"id": 232,
								"indexExpression": {
								  "id": 231,
								  "name": "i",
								  "nodeType": "Identifier",
								  "overloadedDeclarations": [],
								  "referencedDeclaration": 221,
								  "src": "2683:1:11",
								  "typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								  }
								},
								"isConstant": false,
								"isLValue": true,
								"isPure": false,
								"lValueRequested": false,
								"nodeType": "IndexAccess",
								"src": "2678:7:11",
								"typeDescriptions": {
								  "typeIdentifier": "t_struct$_Bet_$58_storage",
								  "typeString": "struct BetContract.Bet storage ref"
								}
							  },
							  "id": 233,
							  "isConstant": false,
							  "isLValue": true,
							  "isPure": false,
							  "lValueRequested": false,
							  "memberLocation": "2686:6:11",
							  "memberName": "gameId",
							  "nodeType": "MemberAccess",
							  "referencedDeclaration": 43,
							  "src": "2678:14:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							  }
							},
							"nodeType": "BinaryOperation",
							"operator": "==",
							"rightExpression": {
							  "id": 234,
							  "name": "currentGameId",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 10,
							  "src": "2696:13:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							  }
							},
							"src": "2678:31:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							}
						  },
						  "id": 303,
						  "nodeType": "IfStatement",
						  "src": "2674:414:11",
						  "trueBody": {
							"id": 302,
							"nodeType": "Block",
							"src": "2711:377:11",
							"statements": [
							  {
								"condition": {
								  "commonType": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								  },
								  "id": 258,
								  "isConstant": false,
								  "isLValue": false,
								  "isPure": false,
								  "lValueRequested": false,
								  "leftExpression": {
									"components": [
									  {
										"commonType": {
										  "typeIdentifier": "t_bool",
										  "typeString": "bool"
										},
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
										  "commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										  },
										  "id": 241,
										  "isConstant": false,
										  "isLValue": false,
										  "isPure": false,
										  "lValueRequested": false,
										  "leftExpression": {
											"expression": {
											  "baseExpression": {
												"id": 236,
												"name": "bets",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 26,
												"src": "2735:4:11",
												"typeDescriptions": {
												  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$58_storage_$",
												  "typeString": "mapping(uint256 => struct BetContract.Bet storage ref)"
												}
											  },
											  "id": 238,
											  "indexExpression": {
												"id": 237,
												"name": "i",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 221,
												"src": "2740:1:11",
												"typeDescriptions": {
												  "typeIdentifier": "t_uint256",
												  "typeString": "uint256"
												}
											  },
											  "isConstant": false,
											  "isLValue": true,
											  "isPure": false,
											  "lValueRequested": false,
											  "nodeType": "IndexAccess",
											  "src": "2735:7:11",
											  "typeDescriptions": {
												"typeIdentifier": "t_struct$_Bet_$58_storage",
												"typeString": "struct BetContract.Bet storage ref"
											  }
											},
											"id": 239,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "2743:10:11",
											"memberName": "conditions",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 45,
											"src": "2735:18:11",
											"typeDescriptions": {
											  "typeIdentifier": "t_uint256",
											  "typeString": "uint256"
											}
										  },
										  "nodeType": "BinaryOperation",
										  "operator": "==",
										  "rightExpression": {
											"hexValue": "30",
											"id": 240,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2757:1:11",
											"typeDescriptions": {
											  "typeIdentifier": "t_rational_0_by_1",
											  "typeString": "int_const 0"
											},
											"value": "0"
										  },
										  "src": "2735:23:11",
										  "typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										  }
										},
										"nodeType": "BinaryOperation",
										"operator": "&&",
										"rightExpression": {
										  "commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										  },
										  "id": 244,
										  "isConstant": false,
										  "isLValue": false,
										  "isPure": false,
										  "lValueRequested": false,
										  "leftExpression": {
											"id": 242,
											"name": "number2",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 8,
											"src": "2762:7:11",
											"typeDescriptions": {
											  "typeIdentifier": "t_uint256",
											  "typeString": "uint256"
											}
										  },
										  "nodeType": "BinaryOperation",
										  "operator": "==",
										  "rightExpression": {
											"hexValue": "30",
											"id": 243,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2773:1:11",
											"typeDescriptions": {
											  "typeIdentifier": "t_rational_0_by_1",
											  "typeString": "int_const 0"
											},
											"value": "0"
										  },
										  "src": "2762:12:11",
										  "typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										  }
										},
										"src": "2735:39:11",
										"typeDescriptions": {
										  "typeIdentifier": "t_bool",
										  "typeString": "bool"
										}
									  }
									],
									"id": 246,
									"isConstant": false,
									"isInlineArray": false,
									"isLValue": false,
									"isPure": false,
									"lValueRequested": false,
									"nodeType": "TupleExpression",
									"src": "2734:41:11",
									"typeDescriptions": {
									  "typeIdentifier": "t_bool",
									  "typeString": "bool"
									}
								  },
								  "nodeType": "BinaryOperation",
								  "operator": "||",
								  "rightExpression": {
									"components": [
									  {
										"commonType": {
										  "typeIdentifier": "t_bool",
										  "typeString": "bool"
										},
										"id": 256,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
										  "commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										  },
										  "id": 252,
										  "isConstant": false,
										  "isLValue": false,
										  "isPure": false,
										  "lValueRequested": false,
										  "leftExpression": {
											"expression": {
											  "baseExpression": {
												"id": 247,
												"name": "bets",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 26,
												"src": "2780:4:11",
												"typeDescriptions": {
												  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$58_storage_$",
												  "typeString": "mapping(uint256 => struct BetContract.Bet storage ref)"
												}
											  },
											  "id": 249,
											  "indexExpression": {
												"id": 248,
												"name": "i",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 221,
												"src": "2785:1:11",
												"typeDescriptions": {
												  "typeIdentifier": "t_uint256",
												  "typeString": "uint256"
												}
											  },
											  "isConstant": false,
											  "isLValue": true,
											  "isPure": false,
											  "lValueRequested": false,
											  "nodeType": "IndexAccess",
											  "src": "2780:7:11",
											  "typeDescriptions": {
												"typeIdentifier": "t_struct$_Bet_$58_storage",
												"typeString": "struct BetContract.Bet storage ref"
											  }
											},
											"id": 250,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "2788:10:11",
											"memberName": "conditions",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 45,
											"src": "2780:18:11",
											"typeDescriptions": {
											  "typeIdentifier": "t_uint256",
											  "typeString": "uint256"
											}
										  },
										  "nodeType": "BinaryOperation",
										  "operator": "==",
										  "rightExpression": {
											"hexValue": "31",
											"id": 251,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2802:1:11",
											"typeDescriptions": {
											  "typeIdentifier": "t_rational_1_by_1",
											  "typeString": "int_const 1"
											},
											"value": "1"
										  },
										  "src": "2780:23:11",
										  "typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										  }
										},
										"nodeType": "BinaryOperation",
										"operator": "&&",
										"rightExpression": {
										  "commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										  },
										  "id": 255,
										  "isConstant": false,
										  "isLValue": false,
										  "isPure": false,
										  "lValueRequested": false,
										  "leftExpression": {
											"id": 253,
											"name": "number2",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 8,
											"src": "2807:7:11",
											"typeDescriptions": {
											  "typeIdentifier": "t_uint256",
											  "typeString": "uint256"
											}
										  },
										  "nodeType": "BinaryOperation",
										  "operator": "==",
										  "rightExpression": {
											"hexValue": "31",
											"id": 254,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2818:1:11",
											"typeDescriptions": {
											  "typeIdentifier": "t_rational_1_by_1",
											  "typeString": "int_const 1"
											},
											"value": "1"
										  },
										  "src": "2807:12:11",
										  "typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										  }
										},
										"src": "2780:39:11",
										"typeDescriptions": {
										  "typeIdentifier": "t_bool",
										  "typeString": "bool"
										}
									  }
									],
									"id": 257,
									"isConstant": false,
									"isInlineArray": false,
									"isLValue": false,
									"isPure": false,
									"lValueRequested": false,
									"nodeType": "TupleExpression",
									"src": "2779:41:11",
									"typeDescriptions": {
									  "typeIdentifier": "t_bool",
									  "typeString": "bool"
									}
								  },
								  "src": "2734:86:11",
								  "typeDescriptions": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								  }
								},
								"id": 268,
								"nodeType": "IfStatement",
								"src": "2730:164:11",
								"trueBody": {
								  "id": 267,
								  "nodeType": "Block",
								  "src": "2821:73:11",
								  "statements": [
									{
									  "expression": {
										"arguments": [
										  {
											"id": 260,
											"name": "i",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 221,
											"src": "2853:1:11",
											"typeDescriptions": {
											  "typeIdentifier": "t_uint256",
											  "typeString": "uint256"
											}
										  },
										  {
											"expression": {
											  "baseExpression": {
												"id": 261,
												"name": "bets",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 26,
												"src": "2856:4:11",
												"typeDescriptions": {
												  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$58_storage_$",
												  "typeString": "mapping(uint256 => struct BetContract.Bet storage ref)"
												}
											  },
											  "id": 263,
											  "indexExpression": {
												"id": 262,
												"name": "i",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 221,
												"src": "2861:1:11",
												"typeDescriptions": {
												  "typeIdentifier": "t_uint256",
												  "typeString": "uint256"
												}
											  },
											  "isConstant": false,
											  "isLValue": true,
											  "isPure": false,
											  "lValueRequested": false,
											  "nodeType": "IndexAccess",
											  "src": "2856:7:11",
											  "typeDescriptions": {
												"typeIdentifier": "t_struct$_Bet_$58_storage",
												"typeString": "struct BetContract.Bet storage ref"
											  }
											},
											"id": 264,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "2864:10:11",
											"memberName": "challenger",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 49,
											"src": "2856:18:11",
											"typeDescriptions": {
											  "typeIdentifier": "t_address",
											  "typeString": "address"
											}
										  }
										],
										"expression": {
										  "argumentTypes": [
											{
											  "typeIdentifier": "t_uint256",
											  "typeString": "uint256"
											},
											{
											  "typeIdentifier": "t_address",
											  "typeString": "address"
											}
										  ],
										  "id": 259,
										  "name": "close_bet",
										  "nodeType": "Identifier",
										  "overloadedDeclarations": [],
										  "referencedDeclaration": 373,
										  "src": "2843:9:11",
										  "typeDescriptions": {
											"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
											"typeString": "function (uint256,address)"
										  }
										},
										"id": 265,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2843:32:11",
										"tryCall": false,
										"typeDescriptions": {
										  "typeIdentifier": "t_tuple$__$",
										  "typeString": "tuple()"
										}
									  },
									  "id": 266,
									  "nodeType": "ExpressionStatement",
									  "src": "2843:32:11"
									}
								  ]
								}
							  },
							  {
								"condition": {
								  "commonType": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								  },
								  "id": 291,
								  "isConstant": false,
								  "isLValue": false,
								  "isPure": false,
								  "lValueRequested": false,
								  "leftExpression": {
									"components": [
									  {
										"commonType": {
										  "typeIdentifier": "t_bool",
										  "typeString": "bool"
										},
										"id": 278,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
										  "commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										  },
										  "id": 274,
										  "isConstant": false,
										  "isLValue": false,
										  "isPure": false,
										  "lValueRequested": false,
										  "leftExpression": {
											"expression": {
											  "baseExpression": {
												"id": 269,
												"name": "bets",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 26,
												"src": "2917:4:11",
												"typeDescriptions": {
												  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$58_storage_$",
												  "typeString": "mapping(uint256 => struct BetContract.Bet storage ref)"
												}
											  },
											  "id": 271,
											  "indexExpression": {
												"id": 270,
												"name": "i",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 221,
												"src": "2922:1:11",
												"typeDescriptions": {
												  "typeIdentifier": "t_uint256",
												  "typeString": "uint256"
												}
											  },
											  "isConstant": false,
											  "isLValue": true,
											  "isPure": false,
											  "lValueRequested": false,
											  "nodeType": "IndexAccess",
											  "src": "2917:7:11",
											  "typeDescriptions": {
												"typeIdentifier": "t_struct$_Bet_$58_storage",
												"typeString": "struct BetContract.Bet storage ref"
											  }
											},
											"id": 272,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "2925:10:11",
											"memberName": "conditions",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 45,
											"src": "2917:18:11",
											"typeDescriptions": {
											  "typeIdentifier": "t_uint256",
											  "typeString": "uint256"
											}
										  },
										  "nodeType": "BinaryOperation",
										  "operator": "==",
										  "rightExpression": {
											"hexValue": "30",
											"id": 273,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2939:1:11",
											"typeDescriptions": {
											  "typeIdentifier": "t_rational_0_by_1",
											  "typeString": "int_const 0"
											},
											"value": "0"
										  },
										  "src": "2917:23:11",
										  "typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										  }
										},
										"nodeType": "BinaryOperation",
										"operator": "&&",
										"rightExpression": {
										  "commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										  },
										  "id": 277,
										  "isConstant": false,
										  "isLValue": false,
										  "isPure": false,
										  "lValueRequested": false,
										  "leftExpression": {
											"id": 275,
											"name": "number2",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 8,
											"src": "2944:7:11",
											"typeDescriptions": {
											  "typeIdentifier": "t_uint256",
											  "typeString": "uint256"
											}
										  },
										  "nodeType": "BinaryOperation",
										  "operator": "==",
										  "rightExpression": {
											"hexValue": "31",
											"id": 276,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2955:1:11",
											"typeDescriptions": {
											  "typeIdentifier": "t_rational_1_by_1",
											  "typeString": "int_const 1"
											},
											"value": "1"
										  },
										  "src": "2944:12:11",
										  "typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										  }
										},
										"src": "2917:39:11",
										"typeDescriptions": {
										  "typeIdentifier": "t_bool",
										  "typeString": "bool"
										}
									  }
									],
									"id": 279,
									"isConstant": false,
									"isInlineArray": false,
									"isLValue": false,
									"isPure": false,
									"lValueRequested": false,
									"nodeType": "TupleExpression",
									"src": "2916:41:11",
									"typeDescriptions": {
									  "typeIdentifier": "t_bool",
									  "typeString": "bool"
									}
								  },
								  "nodeType": "BinaryOperation",
								  "operator": "||",
								  "rightExpression": {
									"components": [
									  {
										"commonType": {
										  "typeIdentifier": "t_bool",
										  "typeString": "bool"
										},
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
										  "commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										  },
										  "id": 285,
										  "isConstant": false,
										  "isLValue": false,
										  "isPure": false,
										  "lValueRequested": false,
										  "leftExpression": {
											"expression": {
											  "baseExpression": {
												"id": 280,
												"name": "bets",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 26,
												"src": "2962:4:11",
												"typeDescriptions": {
												  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$58_storage_$",
												  "typeString": "mapping(uint256 => struct BetContract.Bet storage ref)"
												}
											  },
											  "id": 282,
											  "indexExpression": {
												"id": 281,
												"name": "i",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 221,
												"src": "2967:1:11",
												"typeDescriptions": {
												  "typeIdentifier": "t_uint256",
												  "typeString": "uint256"
												}
											  },
											  "isConstant": false,
											  "isLValue": true,
											  "isPure": false,
											  "lValueRequested": false,
											  "nodeType": "IndexAccess",
											  "src": "2962:7:11",
											  "typeDescriptions": {
												"typeIdentifier": "t_struct$_Bet_$58_storage",
												"typeString": "struct BetContract.Bet storage ref"
											  }
											},
											"id": 283,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "2970:10:11",
											"memberName": "conditions",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 45,
											"src": "2962:18:11",
											"typeDescriptions": {
											  "typeIdentifier": "t_uint256",
											  "typeString": "uint256"
											}
										  },
										  "nodeType": "BinaryOperation",
										  "operator": "==",
										  "rightExpression": {
											"hexValue": "31",
											"id": 284,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2984:1:11",
											"typeDescriptions": {
											  "typeIdentifier": "t_rational_1_by_1",
											  "typeString": "int_const 1"
											},
											"value": "1"
										  },
										  "src": "2962:23:11",
										  "typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										  }
										},
										"nodeType": "BinaryOperation",
										"operator": "&&",
										"rightExpression": {
										  "commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										  },
										  "id": 288,
										  "isConstant": false,
										  "isLValue": false,
										  "isPure": false,
										  "lValueRequested": false,
										  "leftExpression": {
											"id": 286,
											"name": "number2",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 8,
											"src": "2989:7:11",
											"typeDescriptions": {
											  "typeIdentifier": "t_uint256",
											  "typeString": "uint256"
											}
										  },
										  "nodeType": "BinaryOperation",
										  "operator": "==",
										  "rightExpression": {
											"hexValue": "30",
											"id": 287,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3000:1:11",
											"typeDescriptions": {
											  "typeIdentifier": "t_rational_0_by_1",
											  "typeString": "int_const 0"
											},
											"value": "0"
										  },
										  "src": "2989:12:11",
										  "typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										  }
										},
										"src": "2962:39:11",
										"typeDescriptions": {
										  "typeIdentifier": "t_bool",
										  "typeString": "bool"
										}
									  }
									],
									"id": 290,
									"isConstant": false,
									"isInlineArray": false,
									"isLValue": false,
									"isPure": false,
									"lValueRequested": false,
									"nodeType": "TupleExpression",
									"src": "2961:41:11",
									"typeDescriptions": {
									  "typeIdentifier": "t_bool",
									  "typeString": "bool"
									}
								  },
								  "src": "2916:86:11",
								  "typeDescriptions": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								  }
								},
								"id": 301,
								"nodeType": "IfStatement",
								"src": "2912:162:11",
								"trueBody": {
								  "id": 300,
								  "nodeType": "Block",
								  "src": "3003:71:11",
								  "statements": [
									{
									  "expression": {
										"arguments": [
										  {
											"id": 293,
											"name": "i",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 221,
											"src": "3035:1:11",
											"typeDescriptions": {
											  "typeIdentifier": "t_uint256",
											  "typeString": "uint256"
											}
										  },
										  {
											"expression": {
											  "baseExpression": {
												"id": 294,
												"name": "bets",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 26,
												"src": "3038:4:11",
												"typeDescriptions": {
												  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$58_storage_$",
												  "typeString": "mapping(uint256 => struct BetContract.Bet storage ref)"
												}
											  },
											  "id": 296,
											  "indexExpression": {
												"id": 295,
												"name": "i",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 221,
												"src": "3043:1:11",
												"typeDescriptions": {
												  "typeIdentifier": "t_uint256",
												  "typeString": "uint256"
												}
											  },
											  "isConstant": false,
											  "isLValue": true,
											  "isPure": false,
											  "lValueRequested": false,
											  "nodeType": "IndexAccess",
											  "src": "3038:7:11",
											  "typeDescriptions": {
												"typeIdentifier": "t_struct$_Bet_$58_storage",
												"typeString": "struct BetContract.Bet storage ref"
											  }
											},
											"id": 297,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "3046:8:11",
											"memberName": "accepter",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 51,
											"src": "3038:16:11",
											"typeDescriptions": {
											  "typeIdentifier": "t_address",
											  "typeString": "address"
											}
										  }
										],
										"expression": {
										  "argumentTypes": [
											{
											  "typeIdentifier": "t_uint256",
											  "typeString": "uint256"
											},
											{
											  "typeIdentifier": "t_address",
											  "typeString": "address"
											}
										  ],
										  "id": 292,
										  "name": "close_bet",
										  "nodeType": "Identifier",
										  "overloadedDeclarations": [],
										  "referencedDeclaration": 373,
										  "src": "3025:9:11",
										  "typeDescriptions": {
											"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
											"typeString": "function (uint256,address)"
										  }
										},
										"id": 298,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3025:30:11",
										"tryCall": false,
										"typeDescriptions": {
										  "typeIdentifier": "t_tuple$__$",
										  "typeString": "tuple()"
										}
									  },
									  "id": 299,
									  "nodeType": "ExpressionStatement",
									  "src": "3025:30:11"
									}
								  ]
								}
							  }
							]
						  }
						}
					  ]
					},
					"condition": {
					  "commonType": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  },
					  "id": 226,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftExpression": {
						"id": 224,
						"name": "i",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 221,
						"src": "2630:1:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "nodeType": "BinaryOperation",
					  "operator": "<=",
					  "rightExpression": {
						"id": 225,
						"name": "betCounter",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 13,
						"src": "2635:10:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "src": "2630:15:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_bool",
						"typeString": "bool"
					  }
					},
					"id": 305,
					"initializationExpression": {
					  "assignments": [
						221
					  ],
					  "declarations": [
						{
						  "constant": false,
						  "id": 221,
						  "mutability": "mutable",
						  "name": "i",
						  "nameLocation": "2623:1:11",
						  "nodeType": "VariableDeclaration",
						  "scope": 305,
						  "src": "2618:6:11",
						  "stateVariable": false,
						  "storageLocation": "default",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  },
						  "typeName": {
							"id": 220,
							"name": "uint",
							"nodeType": "ElementaryTypeName",
							"src": "2618:4:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  "visibility": "internal"
						}
					  ],
					  "id": 223,
					  "initialValue": {
						"hexValue": "31",
						"id": 222,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"kind": "number",
						"lValueRequested": false,
						"nodeType": "Literal",
						"src": "2627:1:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_rational_1_by_1",
						  "typeString": "int_const 1"
						},
						"value": "1"
					  },
					  "nodeType": "VariableDeclarationStatement",
					  "src": "2618:10:11"
					},
					"loopExpression": {
					  "expression": {
						"id": 228,
						"isConstant": false,
						"isLValue": false,
						"isPure": false,
						"lValueRequested": false,
						"nodeType": "UnaryOperation",
						"operator": "++",
						"prefix": false,
						"src": "2647:3:11",
						"subExpression": {
						  "id": 227,
						  "name": "i",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 221,
						  "src": "2647:1:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						},
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "id": 229,
					  "nodeType": "ExpressionStatement",
					  "src": "2647:3:11"
					},
					"nodeType": "ForStatement",
					"src": "2614:484:11"
				  }
				]
			  },
			  "functionSelector": "c738f5e3",
			  "id": 307,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [],
			  "name": "upkeep_setWinner",
			  "nameLocation": "2497:16:11",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 205,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "2513:2:11"
			  },
			  "returnParameters": {
				"id": 206,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "2523:0:11"
			  },
			  "scope": 728,
			  "src": "2488:617:11",
			  "stateMutability": "nonpayable",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 372,
				"nodeType": "Block",
				"src": "3207:377:11",
				"statements": [
				  {
					"condition": {
					  "commonType": {
						"typeIdentifier": "t_bool",
						"typeString": "bool"
					  },
					  "id": 326,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftExpression": {
						"commonType": {
						  "typeIdentifier": "t_bool",
						  "typeString": "bool"
						},
						"id": 319,
						"isConstant": false,
						"isLValue": false,
						"isPure": false,
						"lValueRequested": false,
						"leftExpression": {
						  "expression": {
							"baseExpression": {
							  "id": 314,
							  "name": "bets",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 26,
							  "src": "3222:4:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$58_storage_$",
								"typeString": "mapping(uint256 => struct BetContract.Bet storage ref)"
							  }
							},
							"id": 316,
							"indexExpression": {
							  "id": 315,
							  "name": "id",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 309,
							  "src": "3227:2:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							  }
							},
							"isConstant": false,
							"isLValue": true,
							"isPure": false,
							"lValueRequested": false,
							"nodeType": "IndexAccess",
							"src": "3222:8:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_struct$_Bet_$58_storage",
							  "typeString": "struct BetContract.Bet storage ref"
							}
						  },
						  "id": 317,
						  "isConstant": false,
						  "isLValue": true,
						  "isPure": false,
						  "lValueRequested": false,
						  "memberLocation": "3231:7:11",
						  "memberName": "isAlive",
						  "nodeType": "MemberAccess",
						  "referencedDeclaration": 55,
						  "src": "3222:16:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						},
						"nodeType": "BinaryOperation",
						"operator": "==",
						"rightExpression": {
						  "hexValue": "66616c7365",
						  "id": 318,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "kind": "bool",
						  "lValueRequested": false,
						  "nodeType": "Literal",
						  "src": "3242:5:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  },
						  "value": "false"
						},
						"src": "3222:25:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_bool",
						  "typeString": "bool"
						}
					  },
					  "nodeType": "BinaryOperation",
					  "operator": "||",
					  "rightExpression": {
						"commonType": {
						  "typeIdentifier": "t_bool",
						  "typeString": "bool"
						},
						"id": 325,
						"isConstant": false,
						"isLValue": false,
						"isPure": false,
						"lValueRequested": false,
						"leftExpression": {
						  "expression": {
							"baseExpression": {
							  "id": 320,
							  "name": "bets",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 26,
							  "src": "3251:4:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$58_storage_$",
								"typeString": "mapping(uint256 => struct BetContract.Bet storage ref)"
							  }
							},
							"id": 322,
							"indexExpression": {
							  "id": 321,
							  "name": "id",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 309,
							  "src": "3256:2:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							  }
							},
							"isConstant": false,
							"isLValue": true,
							"isPure": false,
							"lValueRequested": false,
							"nodeType": "IndexAccess",
							"src": "3251:8:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_struct$_Bet_$58_storage",
							  "typeString": "struct BetContract.Bet storage ref"
							}
						  },
						  "id": 323,
						  "isConstant": false,
						  "isLValue": true,
						  "isPure": false,
						  "lValueRequested": false,
						  "memberLocation": "3260:10:11",
						  "memberName": "isAccepted",
						  "nodeType": "MemberAccess",
						  "referencedDeclaration": 57,
						  "src": "3251:19:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						},
						"nodeType": "BinaryOperation",
						"operator": "==",
						"rightExpression": {
						  "hexValue": "66616c7365",
						  "id": 324,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "kind": "bool",
						  "lValueRequested": false,
						  "nodeType": "Literal",
						  "src": "3274:5:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  },
						  "value": "false"
						},
						"src": "3251:28:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_bool",
						  "typeString": "bool"
						}
					  },
					  "src": "3222:57:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_bool",
						"typeString": "bool"
					  }
					},
					"id": 329,
					"nodeType": "IfStatement",
					"src": "3218:94:11",
					"trueBody": {
					  "id": 328,
					  "nodeType": "Block",
					  "src": "3281:31:11",
					  "statements": [
						{
						  "functionReturnParameters": 313,
						  "id": 327,
						  "nodeType": "Return",
						  "src": "3295:7:11"
						}
					  ]
					}
				  },
				  {
					"expression": {
					  "id": 335,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"expression": {
						  "baseExpression": {
							"id": 330,
							"name": "bets",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 26,
							"src": "3330:4:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$58_storage_$",
							  "typeString": "mapping(uint256 => struct BetContract.Bet storage ref)"
							}
						  },
						  "id": 332,
						  "indexExpression": {
							"id": 331,
							"name": "id",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 309,
							"src": "3335:2:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  "isConstant": false,
						  "isLValue": true,
						  "isPure": false,
						  "lValueRequested": false,
						  "nodeType": "IndexAccess",
						  "src": "3330:8:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_Bet_$58_storage",
							"typeString": "struct BetContract.Bet storage ref"
						  }
						},
						"id": 333,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"memberLocation": "3339:6:11",
						"memberName": "winner",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 53,
						"src": "3330:15:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_address",
						  "typeString": "address"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"id": 334,
						"name": "_to",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 311,
						"src": "3348:3:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_address",
						  "typeString": "address"
						}
					  },
					  "src": "3330:21:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_address",
						"typeString": "address"
					  }
					},
					"id": 336,
					"nodeType": "ExpressionStatement",
					"src": "3330:21:11"
				  },
				  {
					"expression": {
					  "id": 342,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"expression": {
						  "baseExpression": {
							"id": 337,
							"name": "bets",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 26,
							"src": "3361:4:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$58_storage_$",
							  "typeString": "mapping(uint256 => struct BetContract.Bet storage ref)"
							}
						  },
						  "id": 339,
						  "indexExpression": {
							"id": 338,
							"name": "id",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 309,
							"src": "3366:2:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  "isConstant": false,
						  "isLValue": true,
						  "isPure": false,
						  "lValueRequested": false,
						  "nodeType": "IndexAccess",
						  "src": "3361:8:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_Bet_$58_storage",
							"typeString": "struct BetContract.Bet storage ref"
						  }
						},
						"id": 340,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"memberLocation": "3370:7:11",
						"memberName": "isAlive",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 55,
						"src": "3361:16:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_bool",
						  "typeString": "bool"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"hexValue": "66616c7365",
						"id": 341,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"kind": "bool",
						"lValueRequested": false,
						"nodeType": "Literal",
						"src": "3380:5:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_bool",
						  "typeString": "bool"
						},
						"value": "false"
					  },
					  "src": "3361:24:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_bool",
						"typeString": "bool"
					  }
					},
					"id": 343,
					"nodeType": "ExpressionStatement",
					"src": "3361:24:11"
				  },
				  {
					"assignments": [
					  345
					],
					"declarations": [
					  {
						"constant": false,
						"id": 345,
						"mutability": "mutable",
						"name": "amount",
						"nameLocation": "3412:6:11",
						"nodeType": "VariableDeclaration",
						"scope": 372,
						"src": "3404:14:11",
						"stateVariable": false,
						"storageLocation": "default",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						},
						"typeName": {
						  "id": 344,
						  "name": "uint256",
						  "nodeType": "ElementaryTypeName",
						  "src": "3404:7:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						},
						"visibility": "internal"
					  }
					],
					"id": 352,
					"initialValue": {
					  "commonType": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  },
					  "id": 351,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftExpression": {
						"expression": {
						  "baseExpression": {
							"id": 346,
							"name": "bets",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 26,
							"src": "3421:4:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$58_storage_$",
							  "typeString": "mapping(uint256 => struct BetContract.Bet storage ref)"
							}
						  },
						  "id": 348,
						  "indexExpression": {
							"id": 347,
							"name": "id",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 309,
							"src": "3426:2:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  "isConstant": false,
						  "isLValue": true,
						  "isPure": false,
						  "lValueRequested": false,
						  "nodeType": "IndexAccess",
						  "src": "3421:8:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_Bet_$58_storage",
							"typeString": "struct BetContract.Bet storage ref"
						  }
						},
						"id": 349,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": false,
						"memberLocation": "3430:5:11",
						"memberName": "price",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 47,
						"src": "3421:14:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "nodeType": "BinaryOperation",
					  "operator": "*",
					  "rightExpression": {
						"hexValue": "32",
						"id": 350,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"kind": "number",
						"lValueRequested": false,
						"nodeType": "Literal",
						"src": "3438:1:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_rational_2_by_1",
						  "typeString": "int_const 2"
						},
						"value": "2"
					  },
					  "src": "3421:18:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"nodeType": "VariableDeclarationStatement",
					"src": "3404:35:11"
				  },
				  {
					"assignments": [
					  354
					],
					"declarations": [
					  {
						"constant": false,
						"id": 354,
						"mutability": "mutable",
						"name": "to",
						"nameLocation": "3465:2:11",
						"nodeType": "VariableDeclaration",
						"scope": 372,
						"src": "3449:18:11",
						"stateVariable": false,
						"storageLocation": "default",
						"typeDescriptions": {
						  "typeIdentifier": "t_address_payable",
						  "typeString": "address payable"
						},
						"typeName": {
						  "id": 353,
						  "name": "address",
						  "nodeType": "ElementaryTypeName",
						  "src": "3449:15:11",
						  "stateMutability": "payable",
						  "typeDescriptions": {
							"typeIdentifier": "t_address_payable",
							"typeString": "address payable"
						  }
						},
						"visibility": "internal"
					  }
					],
					"id": 359,
					"initialValue": {
					  "arguments": [
						{
						  "id": 357,
						  "name": "_to",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 311,
						  "src": "3478:3:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  }
						],
						"id": 356,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"lValueRequested": false,
						"nodeType": "ElementaryTypeNameExpression",
						"src": "3470:8:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_type$_t_address_payable_$",
						  "typeString": "type(address payable)"
						},
						"typeName": {
						  "id": 355,
						  "name": "address",
						  "nodeType": "ElementaryTypeName",
						  "src": "3470:8:11",
						  "stateMutability": "payable",
						  "typeDescriptions": {}
						}
					  },
					  "id": 358,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "typeConversion",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "3470:12:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_address_payable",
						"typeString": "address payable"
					  }
					},
					"nodeType": "VariableDeclarationStatement",
					"src": "3449:33:11"
				  },
				  {
					"assignments": [
					  361
					],
					"declarations": [
					  {
						"constant": false,
						"id": 361,
						"mutability": "mutable",
						"name": "isSuccess",
						"nameLocation": "3498:9:11",
						"nodeType": "VariableDeclaration",
						"scope": 372,
						"src": "3493:14:11",
						"stateVariable": false,
						"storageLocation": "default",
						"typeDescriptions": {
						  "typeIdentifier": "t_bool",
						  "typeString": "bool"
						},
						"typeName": {
						  "id": 360,
						  "name": "bool",
						  "nodeType": "ElementaryTypeName",
						  "src": "3493:4:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						},
						"visibility": "internal"
					  }
					],
					"id": 366,
					"initialValue": {
					  "arguments": [
						{
						  "id": 364,
						  "name": "amount",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 345,
						  "src": "3518:6:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						],
						"expression": {
						  "id": 362,
						  "name": "to",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 354,
						  "src": "3510:2:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_address_payable",
							"typeString": "address payable"
						  }
						},
						"id": 363,
						"isConstant": false,
						"isLValue": false,
						"isPure": false,
						"lValueRequested": false,
						"memberLocation": "3513:4:11",
						"memberName": "send",
						"nodeType": "MemberAccess",
						"src": "3510:7:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
						  "typeString": "function (uint256) returns (bool)"
						}
					  },
					  "id": 365,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "3510:15:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_bool",
						"typeString": "bool"
					  }
					},
					"nodeType": "VariableDeclarationStatement",
					"src": "3493:32:11"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "id": 368,
						  "name": "isSuccess",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 361,
						  "src": "3543:9:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						},
						{
						  "hexValue": "5472616e73616374696f6e204661696c6564",
						  "id": 369,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "kind": "string",
						  "lValueRequested": false,
						  "nodeType": "Literal",
						  "src": "3554:20:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_stringliteral_f49bab5693f8c67a6b906bdcc8c0fbaa6df8951336f67051f176c0232fe9f578",
							"typeString": "literal_string \"Transaction Failed\""
						  },
						  "value": "Transaction Failed"
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  },
						  {
							"typeIdentifier": "t_stringliteral_f49bab5693f8c67a6b906bdcc8c0fbaa6df8951336f67051f176c0232fe9f578",
							"typeString": "literal_string \"Transaction Failed\""
						  }
						],
						"id": 367,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  -18,
						  -18
						],
						"referencedDeclaration": -18,
						"src": "3535:7:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
						  "typeString": "function (bool,string memory) pure"
						}
					  },
					  "id": 370,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "3535:40:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 371,
					"nodeType": "ExpressionStatement",
					"src": "3535:40:11"
				  }
				]
			  },
			  "id": 373,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [],
			  "name": "close_bet",
			  "nameLocation": "3165:9:11",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 312,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 309,
					"mutability": "mutable",
					"name": "id",
					"nameLocation": "3180:2:11",
					"nodeType": "VariableDeclaration",
					"scope": 373,
					"src": "3175:7:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 308,
					  "name": "uint",
					  "nodeType": "ElementaryTypeName",
					  "src": "3175:4:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 311,
					"mutability": "mutable",
					"name": "_to",
					"nameLocation": "3192:3:11",
					"nodeType": "VariableDeclaration",
					"scope": 373,
					"src": "3184:11:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_address",
					  "typeString": "address"
					},
					"typeName": {
					  "id": 310,
					  "name": "address",
					  "nodeType": "ElementaryTypeName",
					  "src": "3184:7:11",
					  "stateMutability": "nonpayable",
					  "typeDescriptions": {
						"typeIdentifier": "t_address",
						"typeString": "address"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "3174:22:11"
			  },
			  "returnParameters": {
				"id": 313,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "3207:0:11"
			  },
			  "scope": 728,
			  "src": "3156:428:11",
			  "stateMutability": "nonpayable",
			  "virtual": false,
			  "visibility": "internal"
			},
			{
			  "body": {
				"id": 429,
				"nodeType": "Block",
				"src": "3708:451:11",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  },
						  "id": 385,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"id": 383,
							"name": "_price",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 377,
							"src": "3727:6:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": ">=",
						  "rightExpression": {
							"hexValue": "31",
							"id": 384,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"kind": "number",
							"lValueRequested": false,
							"nodeType": "Literal",
							"src": "3737:1:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_rational_1_by_1",
							  "typeString": "int_const 1"
							},
							"value": "1"
						  },
						  "src": "3727:11:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						},
						{
						  "hexValue": "4d696e696d756d2070726963652069732031204d61746963",
						  "id": 386,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "kind": "string",
						  "lValueRequested": false,
						  "nodeType": "Literal",
						  "src": "3740:26:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_stringliteral_3a8275f2c11526e9601fe0f3d0925815d211ba0c819fe944ffdd3cb0d868d469",
							"typeString": "literal_string \"Minimum price is 1 Matic\""
						  },
						  "value": "Minimum price is 1 Matic"
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  },
						  {
							"typeIdentifier": "t_stringliteral_3a8275f2c11526e9601fe0f3d0925815d211ba0c819fe944ffdd3cb0d868d469",
							"typeString": "literal_string \"Minimum price is 1 Matic\""
						  }
						],
						"id": 382,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  -18,
						  -18
						],
						"referencedDeclaration": -18,
						"src": "3719:7:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
						  "typeString": "function (bool,string memory) pure"
						}
					  },
					  "id": 387,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "3719:48:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 388,
					"nodeType": "ExpressionStatement",
					"src": "3719:48:11"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  },
						  "id": 393,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"expression": {
							  "id": 390,
							  "name": "msg",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": -15,
							  "src": "3785:3:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_magic_message",
								"typeString": "msg"
							  }
							},
							"id": 391,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"memberLocation": "3789:5:11",
							"memberName": "value",
							"nodeType": "MemberAccess",
							"src": "3785:9:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": ">=",
						  "rightExpression": {
							"id": 392,
							"name": "_price",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 377,
							"src": "3798:6:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  "src": "3785:19:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						],
						"id": 389,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  -18,
						  -18
						],
						"referencedDeclaration": -18,
						"src": "3777:7:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
						  "typeString": "function (bool) pure"
						}
					  },
					  "id": 394,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "3777:28:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 395,
					"nodeType": "ExpressionStatement",
					"src": "3777:28:11"
				  },
				  {
					"expression": {
					  "id": 397,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "nodeType": "UnaryOperation",
					  "operator": "++",
					  "prefix": false,
					  "src": "3824:12:11",
					  "subExpression": {
						"id": 396,
						"name": "betCounter",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 13,
						"src": "3824:10:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"id": 398,
					"nodeType": "ExpressionStatement",
					"src": "3824:12:11"
				  },
				  {
					"expression": {
					  "id": 420,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"baseExpression": {
						  "id": 399,
						  "name": "bets",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 26,
						  "src": "3846:4:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$58_storage_$",
							"typeString": "mapping(uint256 => struct BetContract.Bet storage ref)"
						  }
						},
						"id": 401,
						"indexExpression": {
						  "id": 400,
						  "name": "betCounter",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 13,
						  "src": "3851:10:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						},
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"nodeType": "IndexAccess",
						"src": "3846:16:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_struct$_Bet_$58_storage",
						  "typeString": "struct BetContract.Bet storage ref"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"arguments": [
						  {
							"id": 403,
							"name": "betCounter",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 13,
							"src": "3883:10:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  {
							"id": 404,
							"name": "_gameId",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 379,
							"src": "3907:7:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  {
							"id": 405,
							"name": "_conditions",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 375,
							"src": "3928:11:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  {
							"id": 406,
							"name": "_price",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 377,
							"src": "3953:6:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  {
							"expression": {
							  "id": 407,
							  "name": "msg",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": -15,
							  "src": "3974:3:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_magic_message",
								"typeString": "msg"
							  }
							},
							"id": 408,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"memberLocation": "3978:6:11",
							"memberName": "sender",
							"nodeType": "MemberAccess",
							"src": "3974:10:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_address",
							  "typeString": "address"
							}
						  },
						  {
							"arguments": [
							  {
								"hexValue": "307830",
								"id": 411,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "4006:3:11",
								"typeDescriptions": {
								  "typeIdentifier": "t_rational_0_by_1",
								  "typeString": "int_const 0"
								},
								"value": "0x0"
							  }
							],
							"expression": {
							  "argumentTypes": [
								{
								  "typeIdentifier": "t_rational_0_by_1",
								  "typeString": "int_const 0"
								}
							  ],
							  "id": 410,
							  "isConstant": false,
							  "isLValue": false,
							  "isPure": true,
							  "lValueRequested": false,
							  "nodeType": "ElementaryTypeNameExpression",
							  "src": "3998:8:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_type$_t_address_payable_$",
								"typeString": "type(address payable)"
							  },
							  "typeName": {
								"id": 409,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "3998:8:11",
								"stateMutability": "payable",
								"typeDescriptions": {}
							  }
							},
							"id": 412,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"kind": "typeConversion",
							"lValueRequested": false,
							"nameLocations": [],
							"names": [],
							"nodeType": "FunctionCall",
							"src": "3998:12:11",
							"tryCall": false,
							"typeDescriptions": {
							  "typeIdentifier": "t_address_payable",
							  "typeString": "address payable"
							}
						  },
						  {
							"arguments": [
							  {
								"hexValue": "307830",
								"id": 415,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "4032:3:11",
								"typeDescriptions": {
								  "typeIdentifier": "t_rational_0_by_1",
								  "typeString": "int_const 0"
								},
								"value": "0x0"
							  }
							],
							"expression": {
							  "argumentTypes": [
								{
								  "typeIdentifier": "t_rational_0_by_1",
								  "typeString": "int_const 0"
								}
							  ],
							  "id": 414,
							  "isConstant": false,
							  "isLValue": false,
							  "isPure": true,
							  "lValueRequested": false,
							  "nodeType": "ElementaryTypeNameExpression",
							  "src": "4024:8:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_type$_t_address_payable_$",
								"typeString": "type(address payable)"
							  },
							  "typeName": {
								"id": 413,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "4024:8:11",
								"stateMutability": "payable",
								"typeDescriptions": {}
							  }
							},
							"id": 416,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"kind": "typeConversion",
							"lValueRequested": false,
							"nameLocations": [],
							"names": [],
							"nodeType": "FunctionCall",
							"src": "4024:12:11",
							"tryCall": false,
							"typeDescriptions": {
							  "typeIdentifier": "t_address_payable",
							  "typeString": "address payable"
							}
						  },
						  {
							"hexValue": "74727565",
							"id": 417,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"kind": "bool",
							"lValueRequested": false,
							"nodeType": "Literal",
							"src": "4058:4:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							},
							"value": "true"
						  },
						  {
							"hexValue": "66616c7365",
							"id": 418,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"kind": "bool",
							"lValueRequested": false,
							"nodeType": "Literal",
							"src": "4076:5:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							},
							"value": "false"
						  }
						],
						"expression": {
						  "argumentTypes": [
							{
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							},
							{
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							},
							{
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							},
							{
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							},
							{
							  "typeIdentifier": "t_address",
							  "typeString": "address"
							},
							{
							  "typeIdentifier": "t_address_payable",
							  "typeString": "address payable"
							},
							{
							  "typeIdentifier": "t_address_payable",
							  "typeString": "address payable"
							},
							{
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							},
							{
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							}
						  ],
						  "id": 402,
						  "name": "Bet",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 58,
						  "src": "3865:3:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_type$_t_struct$_Bet_$58_storage_ptr_$",
							"typeString": "type(struct BetContract.Bet storage pointer)"
						  }
						},
						"id": 419,
						"isConstant": false,
						"isLValue": false,
						"isPure": false,
						"kind": "structConstructorCall",
						"lValueRequested": false,
						"nameLocations": [],
						"names": [],
						"nodeType": "FunctionCall",
						"src": "3865:226:11",
						"tryCall": false,
						"typeDescriptions": {
						  "typeIdentifier": "t_struct$_Bet_$58_memory_ptr",
						  "typeString": "struct BetContract.Bet memory"
						}
					  },
					  "src": "3846:245:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_struct$_Bet_$58_storage",
						"typeString": "struct BetContract.Bet storage ref"
					  }
					},
					"id": 421,
					"nodeType": "ExpressionStatement",
					"src": "3846:245:11"
				  },
				  {
					"eventCall": {
					  "arguments": [
						{
						  "id": 423,
						  "name": "betCounter",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 13,
						  "src": "4121:10:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						},
						{
						  "expression": {
							"id": 424,
							"name": "msg",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": -15,
							"src": "4133:3:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_magic_message",
							  "typeString": "msg"
							}
						  },
						  "id": 425,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "memberLocation": "4137:6:11",
						  "memberName": "sender",
						  "nodeType": "MemberAccess",
						  "src": "4133:10:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  }
						},
						{
						  "id": 426,
						  "name": "_price",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 377,
						  "src": "4145:6:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  },
						  {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  },
						  {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						],
						"id": 422,
						"name": "LogPublishBet",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 66,
						"src": "4107:13:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
						  "typeString": "function (uint256,address,uint256)"
						}
					  },
					  "id": 427,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "4107:45:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 428,
					"nodeType": "EmitStatement",
					"src": "4102:50:11"
				  }
				]
			  },
			  "functionSelector": "ac53d35e",
			  "id": 430,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [],
			  "name": "publishBet",
			  "nameLocation": "3629:10:11",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 380,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 375,
					"mutability": "mutable",
					"name": "_conditions",
					"nameLocation": "3647:11:11",
					"nodeType": "VariableDeclaration",
					"scope": 430,
					"src": "3641:17:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 374,
					  "name": "uint",
					  "nodeType": "ElementaryTypeName",
					  "src": "3641:4:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 377,
					"mutability": "mutable",
					"name": "_price",
					"nameLocation": "3668:6:11",
					"nodeType": "VariableDeclaration",
					"scope": 430,
					"src": "3660:14:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 376,
					  "name": "uint256",
					  "nodeType": "ElementaryTypeName",
					  "src": "3660:7:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 379,
					"mutability": "mutable",
					"name": "_gameId",
					"nameLocation": "3684:7:11",
					"nodeType": "VariableDeclaration",
					"scope": 430,
					"src": "3676:15:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 378,
					  "name": "uint256",
					  "nodeType": "ElementaryTypeName",
					  "src": "3676:7:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "3639:53:11"
			  },
			  "returnParameters": {
				"id": 381,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "3708:0:11"
			  },
			  "scope": 728,
			  "src": "3620:539:11",
			  "stateMutability": "payable",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 507,
				"nodeType": "Block",
				"src": "4211:473:11",
				"statements": [
				  {
					"assignments": [
					  437
					],
					"declarations": [
					  {
						"constant": false,
						"id": 437,
						"mutability": "mutable",
						"name": "bet",
						"nameLocation": "4234:3:11",
						"nodeType": "VariableDeclaration",
						"scope": 507,
						"src": "4222:15:11",
						"stateVariable": false,
						"storageLocation": "storage",
						"typeDescriptions": {
						  "typeIdentifier": "t_struct$_Bet_$58_storage_ptr",
						  "typeString": "struct BetContract.Bet"
						},
						"typeName": {
						  "id": 436,
						  "nodeType": "UserDefinedTypeName",
						  "pathNode": {
							"id": 435,
							"name": "Bet",
							"nameLocations": [
							  "4222:3:11"
							],
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 58,
							"src": "4222:3:11"
						  },
						  "referencedDeclaration": 58,
						  "src": "4222:3:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_Bet_$58_storage_ptr",
							"typeString": "struct BetContract.Bet"
						  }
						},
						"visibility": "internal"
					  }
					],
					"id": 441,
					"initialValue": {
					  "baseExpression": {
						"id": 438,
						"name": "bets",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 26,
						"src": "4240:4:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$58_storage_$",
						  "typeString": "mapping(uint256 => struct BetContract.Bet storage ref)"
						}
					  },
					  "id": 440,
					  "indexExpression": {
						"id": 439,
						"name": "_id",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 432,
						"src": "4245:3:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "isConstant": false,
					  "isLValue": true,
					  "isPure": false,
					  "lValueRequested": false,
					  "nodeType": "IndexAccess",
					  "src": "4240:9:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_struct$_Bet_$58_storage",
						"typeString": "struct BetContract.Bet storage ref"
					  }
					},
					"nodeType": "VariableDeclarationStatement",
					"src": "4222:27:11"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  },
						  "id": 446,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"expression": {
							  "id": 443,
							  "name": "bet",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 437,
							  "src": "4268:3:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_struct$_Bet_$58_storage_ptr",
								"typeString": "struct BetContract.Bet storage pointer"
							  }
							},
							"id": 444,
							"isConstant": false,
							"isLValue": true,
							"isPure": false,
							"lValueRequested": false,
							"memberLocation": "4272:7:11",
							"memberName": "isAlive",
							"nodeType": "MemberAccess",
							"referencedDeclaration": 55,
							"src": "4268:11:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": "==",
						  "rightExpression": {
							"hexValue": "74727565",
							"id": 445,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"kind": "bool",
							"lValueRequested": false,
							"nodeType": "Literal",
							"src": "4283:4:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							},
							"value": "true"
						  },
						  "src": "4268:19:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						},
						{
						  "hexValue": "54686520626574207761732063616e63656c6564",
						  "id": 447,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "kind": "string",
						  "lValueRequested": false,
						  "nodeType": "Literal",
						  "src": "4289:22:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_stringliteral_71c9be73e4baa5c35b672d14fee3a5f6b8173e945bb668acae191850fa134b5f",
							"typeString": "literal_string \"The bet was canceled\""
						  },
						  "value": "The bet was canceled"
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  },
						  {
							"typeIdentifier": "t_stringliteral_71c9be73e4baa5c35b672d14fee3a5f6b8173e945bb668acae191850fa134b5f",
							"typeString": "literal_string \"The bet was canceled\""
						  }
						],
						"id": 442,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  -18,
						  -18
						],
						"referencedDeclaration": -18,
						"src": "4260:7:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
						  "typeString": "function (bool,string memory) pure"
						}
					  },
					  "id": 448,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "4260:52:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 449,
					"nodeType": "ExpressionStatement",
					"src": "4260:52:11"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  },
						  "id": 453,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"id": 451,
							"name": "betCounter",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 13,
							"src": "4330:10:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": ">",
						  "rightExpression": {
							"hexValue": "30",
							"id": 452,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"kind": "number",
							"lValueRequested": false,
							"nodeType": "Literal",
							"src": "4343:1:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_rational_0_by_1",
							  "typeString": "int_const 0"
							},
							"value": "0"
						  },
						  "src": "4330:14:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						},
						{
						  "hexValue": "426574206973206e6f74207075626c6973686564",
						  "id": 454,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "kind": "string",
						  "lValueRequested": false,
						  "nodeType": "Literal",
						  "src": "4346:22:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_stringliteral_22a4d11fb163bb3f1045d292473f69dd3c403e23f9d00cefc84840c0f2ea8f12",
							"typeString": "literal_string \"Bet is not published\""
						  },
						  "value": "Bet is not published"
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  },
						  {
							"typeIdentifier": "t_stringliteral_22a4d11fb163bb3f1045d292473f69dd3c403e23f9d00cefc84840c0f2ea8f12",
							"typeString": "literal_string \"Bet is not published\""
						  }
						],
						"id": 450,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  -18,
						  -18
						],
						"referencedDeclaration": -18,
						"src": "4322:7:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
						  "typeString": "function (bool,string memory) pure"
						}
					  },
					  "id": 455,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "4322:47:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 456,
					"nodeType": "ExpressionStatement",
					"src": "4322:47:11"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  },
						  "id": 464,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"commonType": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							},
							"id": 460,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"leftExpression": {
							  "id": 458,
							  "name": "_id",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 432,
							  "src": "4387:3:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							  }
							},
							"nodeType": "BinaryOperation",
							"operator": ">",
							"rightExpression": {
							  "hexValue": "30",
							  "id": 459,
							  "isConstant": false,
							  "isLValue": false,
							  "isPure": true,
							  "kind": "number",
							  "lValueRequested": false,
							  "nodeType": "Literal",
							  "src": "4393:1:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_rational_0_by_1",
								"typeString": "int_const 0"
							  },
							  "value": "0"
							},
							"src": "4387:7:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": "&&",
						  "rightExpression": {
							"commonType": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							},
							"id": 463,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"leftExpression": {
							  "id": 461,
							  "name": "_id",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 432,
							  "src": "4398:3:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							  }
							},
							"nodeType": "BinaryOperation",
							"operator": "<=",
							"rightExpression": {
							  "id": 462,
							  "name": "betCounter",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 13,
							  "src": "4405:10:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							  }
							},
							"src": "4398:17:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							}
						  },
						  "src": "4387:28:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						},
						{
						  "hexValue": "426574206973206e6f74207075626c6973686564",
						  "id": 465,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "kind": "string",
						  "lValueRequested": false,
						  "nodeType": "Literal",
						  "src": "4417:22:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_stringliteral_22a4d11fb163bb3f1045d292473f69dd3c403e23f9d00cefc84840c0f2ea8f12",
							"typeString": "literal_string \"Bet is not published\""
						  },
						  "value": "Bet is not published"
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  },
						  {
							"typeIdentifier": "t_stringliteral_22a4d11fb163bb3f1045d292473f69dd3c403e23f9d00cefc84840c0f2ea8f12",
							"typeString": "literal_string \"Bet is not published\""
						  }
						],
						"id": 457,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  -18,
						  -18
						],
						"referencedDeclaration": -18,
						"src": "4379:7:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
						  "typeString": "function (bool,string memory) pure"
						}
					  },
					  "id": 466,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "4379:61:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 467,
					"nodeType": "ExpressionStatement",
					"src": "4379:61:11"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  },
						  "id": 473,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"expression": {
							  "id": 469,
							  "name": "msg",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": -15,
							  "src": "4458:3:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_magic_message",
								"typeString": "msg"
							  }
							},
							"id": 470,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"memberLocation": "4462:6:11",
							"memberName": "sender",
							"nodeType": "MemberAccess",
							"src": "4458:10:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_address",
							  "typeString": "address"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": "!=",
						  "rightExpression": {
							"expression": {
							  "id": 471,
							  "name": "bet",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 437,
							  "src": "4472:3:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_struct$_Bet_$58_storage_ptr",
								"typeString": "struct BetContract.Bet storage pointer"
							  }
							},
							"id": 472,
							"isConstant": false,
							"isLValue": true,
							"isPure": false,
							"lValueRequested": false,
							"memberLocation": "4476:10:11",
							"memberName": "challenger",
							"nodeType": "MemberAccess",
							"referencedDeclaration": 49,
							"src": "4472:14:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_address",
							  "typeString": "address"
							}
						  },
						  "src": "4458:28:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						],
						"id": 468,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  -18,
						  -18
						],
						"referencedDeclaration": -18,
						"src": "4450:7:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
						  "typeString": "function (bool) pure"
						}
					  },
					  "id": 474,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "4450:37:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 475,
					"nodeType": "ExpressionStatement",
					"src": "4450:37:11"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  },
						  "id": 481,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"expression": {
							  "id": 477,
							  "name": "msg",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": -15,
							  "src": "4505:3:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_magic_message",
								"typeString": "msg"
							  }
							},
							"id": 478,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"memberLocation": "4509:5:11",
							"memberName": "value",
							"nodeType": "MemberAccess",
							"src": "4505:9:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": ">=",
						  "rightExpression": {
							"expression": {
							  "id": 479,
							  "name": "bet",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 437,
							  "src": "4518:3:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_struct$_Bet_$58_storage_ptr",
								"typeString": "struct BetContract.Bet storage pointer"
							  }
							},
							"id": 480,
							"isConstant": false,
							"isLValue": true,
							"isPure": false,
							"lValueRequested": false,
							"memberLocation": "4522:5:11",
							"memberName": "price",
							"nodeType": "MemberAccess",
							"referencedDeclaration": 47,
							"src": "4518:9:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  "src": "4505:22:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						],
						"id": 476,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  -18,
						  -18
						],
						"referencedDeclaration": -18,
						"src": "4497:7:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
						  "typeString": "function (bool) pure"
						}
					  },
					  "id": 482,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "4497:31:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 483,
					"nodeType": "ExpressionStatement",
					"src": "4497:31:11"
				  },
				  {
					"expression": {
					  "id": 489,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"expression": {
						  "id": 484,
						  "name": "bet",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 437,
						  "src": "4547:3:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_Bet_$58_storage_ptr",
							"typeString": "struct BetContract.Bet storage pointer"
						  }
						},
						"id": 486,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"memberLocation": "4551:8:11",
						"memberName": "accepter",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 51,
						"src": "4547:12:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_address",
						  "typeString": "address"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"expression": {
						  "id": 487,
						  "name": "msg",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": -15,
						  "src": "4562:3:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_magic_message",
							"typeString": "msg"
						  }
						},
						"id": 488,
						"isConstant": false,
						"isLValue": false,
						"isPure": false,
						"lValueRequested": false,
						"memberLocation": "4566:6:11",
						"memberName": "sender",
						"nodeType": "MemberAccess",
						"src": "4562:10:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_address",
						  "typeString": "address"
						}
					  },
					  "src": "4547:25:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_address",
						"typeString": "address"
					  }
					},
					"id": 490,
					"nodeType": "ExpressionStatement",
					"src": "4547:25:11"
				  },
				  {
					"expression": {
					  "id": 495,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"expression": {
						  "id": 491,
						  "name": "bet",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 437,
						  "src": "4582:3:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_Bet_$58_storage_ptr",
							"typeString": "struct BetContract.Bet storage pointer"
						  }
						},
						"id": 493,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"memberLocation": "4586:10:11",
						"memberName": "isAccepted",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 57,
						"src": "4582:14:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_bool",
						  "typeString": "bool"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"hexValue": "74727565",
						"id": 494,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"kind": "bool",
						"lValueRequested": false,
						"nodeType": "Literal",
						"src": "4599:4:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_bool",
						  "typeString": "bool"
						},
						"value": "true"
					  },
					  "src": "4582:21:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_bool",
						"typeString": "bool"
					  }
					},
					"id": 496,
					"nodeType": "ExpressionStatement",
					"src": "4582:21:11"
				  },
				  {
					"eventCall": {
					  "arguments": [
						{
						  "id": 498,
						  "name": "_id",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 432,
						  "src": "4631:3:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						},
						{
						  "expression": {
							"id": 499,
							"name": "bet",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 437,
							"src": "4636:3:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_struct$_Bet_$58_storage_ptr",
							  "typeString": "struct BetContract.Bet storage pointer"
							}
						  },
						  "id": 500,
						  "isConstant": false,
						  "isLValue": true,
						  "isPure": false,
						  "lValueRequested": false,
						  "memberLocation": "4640:10:11",
						  "memberName": "challenger",
						  "nodeType": "MemberAccess",
						  "referencedDeclaration": 49,
						  "src": "4636:14:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  }
						},
						{
						  "expression": {
							"id": 501,
							"name": "bet",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 437,
							"src": "4652:3:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_struct$_Bet_$58_storage_ptr",
							  "typeString": "struct BetContract.Bet storage pointer"
							}
						  },
						  "id": 502,
						  "isConstant": false,
						  "isLValue": true,
						  "isPure": false,
						  "lValueRequested": false,
						  "memberLocation": "4656:8:11",
						  "memberName": "accepter",
						  "nodeType": "MemberAccess",
						  "referencedDeclaration": 51,
						  "src": "4652:12:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  }
						},
						{
						  "expression": {
							"id": 503,
							"name": "bet",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 437,
							"src": "4666:3:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_struct$_Bet_$58_storage_ptr",
							  "typeString": "struct BetContract.Bet storage pointer"
							}
						  },
						  "id": 504,
						  "isConstant": false,
						  "isLValue": true,
						  "isPure": false,
						  "lValueRequested": false,
						  "memberLocation": "4670:5:11",
						  "memberName": "price",
						  "nodeType": "MemberAccess",
						  "referencedDeclaration": 47,
						  "src": "4666:9:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  },
						  {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  },
						  {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  },
						  {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						],
						"id": 497,
						"name": "LogAcceptBet",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 76,
						"src": "4618:12:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
						  "typeString": "function (uint256,address,address,uint256)"
						}
					  },
					  "id": 505,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "4618:58:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 506,
					"nodeType": "EmitStatement",
					"src": "4613:63:11"
				  }
				]
			  },
			  "functionSelector": "6c0c27e1",
			  "id": 508,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [],
			  "name": "acceptBet",
			  "nameLocation": "4175:9:11",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 433,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 432,
					"mutability": "mutable",
					"name": "_id",
					"nameLocation": "4190:3:11",
					"nodeType": "VariableDeclaration",
					"scope": 508,
					"src": "4185:8:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 431,
					  "name": "uint",
					  "nodeType": "ElementaryTypeName",
					  "src": "4185:4:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "4184:11:11"
			  },
			  "returnParameters": {
				"id": 434,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "4211:0:11"
			  },
			  "scope": 728,
			  "src": "4166:518:11",
			  "stateMutability": "payable",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 578,
				"nodeType": "Block",
				"src": "4787:448:11",
				"statements": [
				  {
					"assignments": [
					  515
					],
					"declarations": [
					  {
						"constant": false,
						"id": 515,
						"mutability": "mutable",
						"name": "bet",
						"nameLocation": "4810:3:11",
						"nodeType": "VariableDeclaration",
						"scope": 578,
						"src": "4798:15:11",
						"stateVariable": false,
						"storageLocation": "storage",
						"typeDescriptions": {
						  "typeIdentifier": "t_struct$_Bet_$58_storage_ptr",
						  "typeString": "struct BetContract.Bet"
						},
						"typeName": {
						  "id": 514,
						  "nodeType": "UserDefinedTypeName",
						  "pathNode": {
							"id": 513,
							"name": "Bet",
							"nameLocations": [
							  "4798:3:11"
							],
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 58,
							"src": "4798:3:11"
						  },
						  "referencedDeclaration": 58,
						  "src": "4798:3:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_Bet_$58_storage_ptr",
							"typeString": "struct BetContract.Bet"
						  }
						},
						"visibility": "internal"
					  }
					],
					"id": 519,
					"initialValue": {
					  "baseExpression": {
						"id": 516,
						"name": "bets",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 26,
						"src": "4816:4:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$58_storage_$",
						  "typeString": "mapping(uint256 => struct BetContract.Bet storage ref)"
						}
					  },
					  "id": 518,
					  "indexExpression": {
						"id": 517,
						"name": "_id",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 510,
						"src": "4821:3:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "isConstant": false,
					  "isLValue": true,
					  "isPure": false,
					  "lValueRequested": false,
					  "nodeType": "IndexAccess",
					  "src": "4816:9:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_struct$_Bet_$58_storage",
						"typeString": "struct BetContract.Bet storage ref"
					  }
					},
					"nodeType": "VariableDeclarationStatement",
					"src": "4798:27:11"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  },
						  "id": 524,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"expression": {
							  "id": 521,
							  "name": "bet",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 515,
							  "src": "4844:3:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_struct$_Bet_$58_storage_ptr",
								"typeString": "struct BetContract.Bet storage pointer"
							  }
							},
							"id": 522,
							"isConstant": false,
							"isLValue": true,
							"isPure": false,
							"lValueRequested": false,
							"memberLocation": "4848:7:11",
							"memberName": "isAlive",
							"nodeType": "MemberAccess",
							"referencedDeclaration": 55,
							"src": "4844:11:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": "==",
						  "rightExpression": {
							"hexValue": "74727565",
							"id": 523,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"kind": "bool",
							"lValueRequested": false,
							"nodeType": "Literal",
							"src": "4859:4:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							},
							"value": "true"
						  },
						  "src": "4844:19:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						},
						{
						  "hexValue": "54686520626574207761732063616e63656c6564",
						  "id": 525,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "kind": "string",
						  "lValueRequested": false,
						  "nodeType": "Literal",
						  "src": "4865:22:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_stringliteral_71c9be73e4baa5c35b672d14fee3a5f6b8173e945bb668acae191850fa134b5f",
							"typeString": "literal_string \"The bet was canceled\""
						  },
						  "value": "The bet was canceled"
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  },
						  {
							"typeIdentifier": "t_stringliteral_71c9be73e4baa5c35b672d14fee3a5f6b8173e945bb668acae191850fa134b5f",
							"typeString": "literal_string \"The bet was canceled\""
						  }
						],
						"id": 520,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  -18,
						  -18
						],
						"referencedDeclaration": -18,
						"src": "4836:7:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
						  "typeString": "function (bool,string memory) pure"
						}
					  },
					  "id": 526,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "4836:52:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 527,
					"nodeType": "ExpressionStatement",
					"src": "4836:52:11"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  },
						  "id": 535,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"commonType": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							},
							"id": 531,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"leftExpression": {
							  "id": 529,
							  "name": "betCounter",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 13,
							  "src": "4906:10:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							  }
							},
							"nodeType": "BinaryOperation",
							"operator": ">=",
							"rightExpression": {
							  "id": 530,
							  "name": "_id",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 510,
							  "src": "4920:3:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							  }
							},
							"src": "4906:17:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": "&&",
						  "rightExpression": {
							"commonType": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							},
							"id": 534,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"leftExpression": {
							  "id": 532,
							  "name": "_id",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 510,
							  "src": "4927:3:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							  }
							},
							"nodeType": "BinaryOperation",
							"operator": ">",
							"rightExpression": {
							  "hexValue": "30",
							  "id": 533,
							  "isConstant": false,
							  "isLValue": false,
							  "isPure": true,
							  "kind": "number",
							  "lValueRequested": false,
							  "nodeType": "Literal",
							  "src": "4933:1:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_rational_0_by_1",
								"typeString": "int_const 0"
							  },
							  "value": "0"
							},
							"src": "4927:7:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							}
						  },
						  "src": "4906:28:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						},
						{
						  "hexValue": "426574206973206e6f74207075626c6973686564",
						  "id": 536,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "kind": "string",
						  "lValueRequested": false,
						  "nodeType": "Literal",
						  "src": "4936:22:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_stringliteral_22a4d11fb163bb3f1045d292473f69dd3c403e23f9d00cefc84840c0f2ea8f12",
							"typeString": "literal_string \"Bet is not published\""
						  },
						  "value": "Bet is not published"
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  },
						  {
							"typeIdentifier": "t_stringliteral_22a4d11fb163bb3f1045d292473f69dd3c403e23f9d00cefc84840c0f2ea8f12",
							"typeString": "literal_string \"Bet is not published\""
						  }
						],
						"id": 528,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  -18,
						  -18
						],
						"referencedDeclaration": -18,
						"src": "4898:7:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
						  "typeString": "function (bool,string memory) pure"
						}
					  },
					  "id": 537,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "4898:61:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 538,
					"nodeType": "ExpressionStatement",
					"src": "4898:61:11"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  },
						  "id": 544,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"expression": {
							  "id": 540,
							  "name": "msg",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": -15,
							  "src": "4977:3:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_magic_message",
								"typeString": "msg"
							  }
							},
							"id": 541,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"memberLocation": "4981:6:11",
							"memberName": "sender",
							"nodeType": "MemberAccess",
							"src": "4977:10:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_address",
							  "typeString": "address"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": "==",
						  "rightExpression": {
							"expression": {
							  "id": 542,
							  "name": "bet",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 515,
							  "src": "4991:3:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_struct$_Bet_$58_storage_ptr",
								"typeString": "struct BetContract.Bet storage pointer"
							  }
							},
							"id": 543,
							"isConstant": false,
							"isLValue": true,
							"isPure": false,
							"lValueRequested": false,
							"memberLocation": "4995:10:11",
							"memberName": "challenger",
							"nodeType": "MemberAccess",
							"referencedDeclaration": 49,
							"src": "4991:14:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_address",
							  "typeString": "address"
							}
						  },
						  "src": "4977:28:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						],
						"id": 539,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  -18,
						  -18
						],
						"referencedDeclaration": -18,
						"src": "4969:7:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
						  "typeString": "function (bool) pure"
						}
					  },
					  "id": 545,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "4969:37:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 546,
					"nodeType": "ExpressionStatement",
					"src": "4969:37:11"
				  },
				  {
					"expression": {
					  "id": 551,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"expression": {
						  "id": 547,
						  "name": "bet",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 515,
						  "src": "5017:3:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_Bet_$58_storage_ptr",
							"typeString": "struct BetContract.Bet storage pointer"
						  }
						},
						"id": 549,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"memberLocation": "5021:7:11",
						"memberName": "isAlive",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 55,
						"src": "5017:11:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_bool",
						  "typeString": "bool"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"hexValue": "66616c7365",
						"id": 550,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"kind": "bool",
						"lValueRequested": false,
						"nodeType": "Literal",
						"src": "5031:5:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_bool",
						  "typeString": "bool"
						},
						"value": "false"
					  },
					  "src": "5017:19:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_bool",
						"typeString": "bool"
					  }
					},
					"id": 552,
					"nodeType": "ExpressionStatement",
					"src": "5017:19:11"
				  },
				  {
					"assignments": [
					  554
					],
					"declarations": [
					  {
						"constant": false,
						"id": 554,
						"mutability": "mutable",
						"name": "amount",
						"nameLocation": "5054:6:11",
						"nodeType": "VariableDeclaration",
						"scope": 578,
						"src": "5046:14:11",
						"stateVariable": false,
						"storageLocation": "default",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						},
						"typeName": {
						  "id": 553,
						  "name": "uint256",
						  "nodeType": "ElementaryTypeName",
						  "src": "5046:7:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						},
						"visibility": "internal"
					  }
					],
					"id": 557,
					"initialValue": {
					  "expression": {
						"id": 555,
						"name": "bet",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 515,
						"src": "5063:3:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_struct$_Bet_$58_storage_ptr",
						  "typeString": "struct BetContract.Bet storage pointer"
						}
					  },
					  "id": 556,
					  "isConstant": false,
					  "isLValue": true,
					  "isPure": false,
					  "lValueRequested": false,
					  "memberLocation": "5067:5:11",
					  "memberName": "price",
					  "nodeType": "MemberAccess",
					  "referencedDeclaration": 47,
					  "src": "5063:9:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"nodeType": "VariableDeclarationStatement",
					"src": "5046:26:11"
				  },
				  {
					"assignments": [
					  559
					],
					"declarations": [
					  {
						"constant": false,
						"id": 559,
						"mutability": "mutable",
						"name": "to",
						"nameLocation": "5098:2:11",
						"nodeType": "VariableDeclaration",
						"scope": 578,
						"src": "5082:18:11",
						"stateVariable": false,
						"storageLocation": "default",
						"typeDescriptions": {
						  "typeIdentifier": "t_address_payable",
						  "typeString": "address payable"
						},
						"typeName": {
						  "id": 558,
						  "name": "address",
						  "nodeType": "ElementaryTypeName",
						  "src": "5082:15:11",
						  "stateMutability": "payable",
						  "typeDescriptions": {
							"typeIdentifier": "t_address_payable",
							"typeString": "address payable"
						  }
						},
						"visibility": "internal"
					  }
					],
					"id": 565,
					"initialValue": {
					  "arguments": [
						{
						  "expression": {
							"id": 562,
							"name": "bet",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 515,
							"src": "5111:3:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_struct$_Bet_$58_storage_ptr",
							  "typeString": "struct BetContract.Bet storage pointer"
							}
						  },
						  "id": 563,
						  "isConstant": false,
						  "isLValue": true,
						  "isPure": false,
						  "lValueRequested": false,
						  "memberLocation": "5115:10:11",
						  "memberName": "challenger",
						  "nodeType": "MemberAccess",
						  "referencedDeclaration": 49,
						  "src": "5111:14:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  }
						],
						"id": 561,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"lValueRequested": false,
						"nodeType": "ElementaryTypeNameExpression",
						"src": "5103:8:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_type$_t_address_payable_$",
						  "typeString": "type(address payable)"
						},
						"typeName": {
						  "id": 560,
						  "name": "address",
						  "nodeType": "ElementaryTypeName",
						  "src": "5103:8:11",
						  "stateMutability": "payable",
						  "typeDescriptions": {}
						}
					  },
					  "id": 564,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "typeConversion",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "5103:23:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_address_payable",
						"typeString": "address payable"
					  }
					},
					"nodeType": "VariableDeclarationStatement",
					"src": "5082:44:11"
				  },
				  {
					"assignments": [
					  567
					],
					"declarations": [
					  {
						"constant": false,
						"id": 567,
						"mutability": "mutable",
						"name": "isSuccess",
						"nameLocation": "5142:9:11",
						"nodeType": "VariableDeclaration",
						"scope": 578,
						"src": "5137:14:11",
						"stateVariable": false,
						"storageLocation": "default",
						"typeDescriptions": {
						  "typeIdentifier": "t_bool",
						  "typeString": "bool"
						},
						"typeName": {
						  "id": 566,
						  "name": "bool",
						  "nodeType": "ElementaryTypeName",
						  "src": "5137:4:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						},
						"visibility": "internal"
					  }
					],
					"id": 572,
					"initialValue": {
					  "arguments": [
						{
						  "id": 570,
						  "name": "amount",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 554,
						  "src": "5162:6:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						],
						"expression": {
						  "id": 568,
						  "name": "to",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 559,
						  "src": "5154:2:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_address_payable",
							"typeString": "address payable"
						  }
						},
						"id": 569,
						"isConstant": false,
						"isLValue": false,
						"isPure": false,
						"lValueRequested": false,
						"memberLocation": "5157:4:11",
						"memberName": "send",
						"nodeType": "MemberAccess",
						"src": "5154:7:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
						  "typeString": "function (uint256) returns (bool)"
						}
					  },
					  "id": 571,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "5154:15:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_bool",
						"typeString": "bool"
					  }
					},
					"nodeType": "VariableDeclarationStatement",
					"src": "5137:32:11"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "id": 574,
						  "name": "isSuccess",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 567,
						  "src": "5187:9:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						},
						{
						  "hexValue": "5472616e73616374696f6e204661696c6564",
						  "id": 575,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "kind": "string",
						  "lValueRequested": false,
						  "nodeType": "Literal",
						  "src": "5198:20:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_stringliteral_f49bab5693f8c67a6b906bdcc8c0fbaa6df8951336f67051f176c0232fe9f578",
							"typeString": "literal_string \"Transaction Failed\""
						  },
						  "value": "Transaction Failed"
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  },
						  {
							"typeIdentifier": "t_stringliteral_f49bab5693f8c67a6b906bdcc8c0fbaa6df8951336f67051f176c0232fe9f578",
							"typeString": "literal_string \"Transaction Failed\""
						  }
						],
						"id": 573,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  -18,
						  -18
						],
						"referencedDeclaration": -18,
						"src": "5179:7:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
						  "typeString": "function (bool,string memory) pure"
						}
					  },
					  "id": 576,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "5179:40:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 577,
					"nodeType": "ExpressionStatement",
					"src": "5179:40:11"
				  }
				]
			  },
			  "functionSelector": "357401f5",
			  "id": 579,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [],
			  "name": "cancelBet",
			  "nameLocation": "4752:9:11",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 511,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 510,
					"mutability": "mutable",
					"name": "_id",
					"nameLocation": "4767:3:11",
					"nodeType": "VariableDeclaration",
					"scope": 579,
					"src": "4762:8:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 509,
					  "name": "uint",
					  "nodeType": "ElementaryTypeName",
					  "src": "4762:4:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "4761:10:11"
			  },
			  "returnParameters": {
				"id": 512,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "4787:0:11"
			  },
			  "scope": 728,
			  "src": "4743:492:11",
			  "stateMutability": "payable",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 586,
				"nodeType": "Block",
				"src": "5296:34:11",
				"statements": [
				  {
					"expression": {
					  "id": 584,
					  "name": "betCounter",
					  "nodeType": "Identifier",
					  "overloadedDeclarations": [],
					  "referencedDeclaration": 13,
					  "src": "5313:10:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"functionReturnParameters": 583,
					"id": 585,
					"nodeType": "Return",
					"src": "5306:17:11"
				  }
				]
			  },
			  "functionSelector": "f222d0b9",
			  "id": 587,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [],
			  "name": "getNumberOfBets",
			  "nameLocation": "5251:15:11",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 580,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "5266:2:11"
			  },
			  "returnParameters": {
				"id": 583,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 582,
					"mutability": "mutable",
					"name": "",
					"nameLocation": "-1:-1:-1",
					"nodeType": "VariableDeclaration",
					"scope": 587,
					"src": "5290:4:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 581,
					  "name": "uint",
					  "nodeType": "ElementaryTypeName",
					  "src": "5290:4:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "5289:6:11"
			  },
			  "scope": 728,
			  "src": "5242:88:11",
			  "stateMutability": "view",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 628,
				"nodeType": "Block",
				"src": "5399:285:11",
				"statements": [
				  {
					"assignments": [
					  593
					],
					"declarations": [
					  {
						"constant": false,
						"id": 593,
						"mutability": "mutable",
						"name": "numberOfAvailableBets",
						"nameLocation": "5423:21:11",
						"nodeType": "VariableDeclaration",
						"scope": 628,
						"src": "5418:26:11",
						"stateVariable": false,
						"storageLocation": "default",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						},
						"typeName": {
						  "id": 592,
						  "name": "uint",
						  "nodeType": "ElementaryTypeName",
						  "src": "5418:4:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						},
						"visibility": "internal"
					  }
					],
					"id": 595,
					"initialValue": {
					  "hexValue": "30",
					  "id": 594,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": true,
					  "kind": "number",
					  "lValueRequested": false,
					  "nodeType": "Literal",
					  "src": "5447:1:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_rational_0_by_1",
						"typeString": "int_const 0"
					  },
					  "value": "0"
					},
					"nodeType": "VariableDeclarationStatement",
					"src": "5418:30:11"
				  },
				  {
					"body": {
					  "id": 624,
					  "nodeType": "Block",
					  "src": "5498:141:11",
					  "statements": [
						{
						  "condition": {
							"commonType": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							},
							"id": 618,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"leftExpression": {
							  "commonType": {
								"typeIdentifier": "t_bool",
								"typeString": "bool"
							  },
							  "id": 611,
							  "isConstant": false,
							  "isLValue": false,
							  "isPure": false,
							  "lValueRequested": false,
							  "leftExpression": {
								"expression": {
								  "baseExpression": {
									"id": 606,
									"name": "bets",
									"nodeType": "Identifier",
									"overloadedDeclarations": [],
									"referencedDeclaration": 26,
									"src": "5516:4:11",
									"typeDescriptions": {
									  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$58_storage_$",
									  "typeString": "mapping(uint256 => struct BetContract.Bet storage ref)"
									}
								  },
								  "id": 608,
								  "indexExpression": {
									"id": 607,
									"name": "i",
									"nodeType": "Identifier",
									"overloadedDeclarations": [],
									"referencedDeclaration": 597,
									"src": "5521:1:11",
									"typeDescriptions": {
									  "typeIdentifier": "t_uint256",
									  "typeString": "uint256"
									}
								  },
								  "isConstant": false,
								  "isLValue": true,
								  "isPure": false,
								  "lValueRequested": false,
								  "nodeType": "IndexAccess",
								  "src": "5516:7:11",
								  "typeDescriptions": {
									"typeIdentifier": "t_struct$_Bet_$58_storage",
									"typeString": "struct BetContract.Bet storage ref"
								  }
								},
								"id": 609,
								"isConstant": false,
								"isLValue": true,
								"isPure": false,
								"lValueRequested": false,
								"memberLocation": "5524:10:11",
								"memberName": "isAccepted",
								"nodeType": "MemberAccess",
								"referencedDeclaration": 57,
								"src": "5516:18:11",
								"typeDescriptions": {
								  "typeIdentifier": "t_bool",
								  "typeString": "bool"
								}
							  },
							  "nodeType": "BinaryOperation",
							  "operator": "==",
							  "rightExpression": {
								"hexValue": "66616c7365",
								"id": 610,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "bool",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "5538:5:11",
								"typeDescriptions": {
								  "typeIdentifier": "t_bool",
								  "typeString": "bool"
								},
								"value": "false"
							  },
							  "src": "5516:27:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_bool",
								"typeString": "bool"
							  }
							},
							"nodeType": "BinaryOperation",
							"operator": "&&",
							"rightExpression": {
							  "commonType": {
								"typeIdentifier": "t_bool",
								"typeString": "bool"
							  },
							  "id": 617,
							  "isConstant": false,
							  "isLValue": false,
							  "isPure": false,
							  "lValueRequested": false,
							  "leftExpression": {
								"expression": {
								  "baseExpression": {
									"id": 612,
									"name": "bets",
									"nodeType": "Identifier",
									"overloadedDeclarations": [],
									"referencedDeclaration": 26,
									"src": "5547:4:11",
									"typeDescriptions": {
									  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$58_storage_$",
									  "typeString": "mapping(uint256 => struct BetContract.Bet storage ref)"
									}
								  },
								  "id": 614,
								  "indexExpression": {
									"id": 613,
									"name": "i",
									"nodeType": "Identifier",
									"overloadedDeclarations": [],
									"referencedDeclaration": 597,
									"src": "5552:1:11",
									"typeDescriptions": {
									  "typeIdentifier": "t_uint256",
									  "typeString": "uint256"
									}
								  },
								  "isConstant": false,
								  "isLValue": true,
								  "isPure": false,
								  "lValueRequested": false,
								  "nodeType": "IndexAccess",
								  "src": "5547:7:11",
								  "typeDescriptions": {
									"typeIdentifier": "t_struct$_Bet_$58_storage",
									"typeString": "struct BetContract.Bet storage ref"
								  }
								},
								"id": 615,
								"isConstant": false,
								"isLValue": true,
								"isPure": false,
								"lValueRequested": false,
								"memberLocation": "5555:7:11",
								"memberName": "isAlive",
								"nodeType": "MemberAccess",
								"referencedDeclaration": 55,
								"src": "5547:15:11",
								"typeDescriptions": {
								  "typeIdentifier": "t_bool",
								  "typeString": "bool"
								}
							  },
							  "nodeType": "BinaryOperation",
							  "operator": "==",
							  "rightExpression": {
								"hexValue": "74727565",
								"id": 616,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "bool",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "5566:4:11",
								"typeDescriptions": {
								  "typeIdentifier": "t_bool",
								  "typeString": "bool"
								},
								"value": "true"
							  },
							  "src": "5547:23:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_bool",
								"typeString": "bool"
							  }
							},
							"src": "5516:54:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							}
						  },
						  "id": 623,
						  "nodeType": "IfStatement",
						  "src": "5513:116:11",
						  "trueBody": {
							"id": 622,
							"nodeType": "Block",
							"src": "5572:57:11",
							"statements": [
							  {
								"expression": {
								  "id": 620,
								  "isConstant": false,
								  "isLValue": false,
								  "isPure": false,
								  "lValueRequested": false,
								  "nodeType": "UnaryOperation",
								  "operator": "++",
								  "prefix": false,
								  "src": "5591:23:11",
								  "subExpression": {
									"id": 619,
									"name": "numberOfAvailableBets",
									"nodeType": "Identifier",
									"overloadedDeclarations": [],
									"referencedDeclaration": 593,
									"src": "5591:21:11",
									"typeDescriptions": {
									  "typeIdentifier": "t_uint256",
									  "typeString": "uint256"
									}
								  },
								  "typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								  }
								},
								"id": 621,
								"nodeType": "ExpressionStatement",
								"src": "5591:23:11"
							  }
							]
						  }
						}
					  ]
					},
					"condition": {
					  "commonType": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  },
					  "id": 602,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftExpression": {
						"id": 600,
						"name": "i",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 597,
						"src": "5475:1:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "nodeType": "BinaryOperation",
					  "operator": "<=",
					  "rightExpression": {
						"id": 601,
						"name": "betCounter",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 13,
						"src": "5481:10:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "src": "5475:16:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_bool",
						"typeString": "bool"
					  }
					},
					"id": 625,
					"initializationExpression": {
					  "assignments": [
						597
					  ],
					  "declarations": [
						{
						  "constant": false,
						  "id": 597,
						  "mutability": "mutable",
						  "name": "i",
						  "nameLocation": "5468:1:11",
						  "nodeType": "VariableDeclaration",
						  "scope": 625,
						  "src": "5463:6:11",
						  "stateVariable": false,
						  "storageLocation": "default",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  },
						  "typeName": {
							"id": 596,
							"name": "uint",
							"nodeType": "ElementaryTypeName",
							"src": "5463:4:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  "visibility": "internal"
						}
					  ],
					  "id": 599,
					  "initialValue": {
						"hexValue": "31",
						"id": 598,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"kind": "number",
						"lValueRequested": false,
						"nodeType": "Literal",
						"src": "5472:1:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_rational_1_by_1",
						  "typeString": "int_const 1"
						},
						"value": "1"
					  },
					  "nodeType": "VariableDeclarationStatement",
					  "src": "5463:10:11"
					},
					"loopExpression": {
					  "expression": {
						"id": 604,
						"isConstant": false,
						"isLValue": false,
						"isPure": false,
						"lValueRequested": false,
						"nodeType": "UnaryOperation",
						"operator": "++",
						"prefix": false,
						"src": "5494:3:11",
						"subExpression": {
						  "id": 603,
						  "name": "i",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 597,
						  "src": "5494:1:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						},
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "id": 605,
					  "nodeType": "ExpressionStatement",
					  "src": "5494:3:11"
					},
					"nodeType": "ForStatement",
					"src": "5459:180:11"
				  },
				  {
					"expression": {
					  "id": 626,
					  "name": "numberOfAvailableBets",
					  "nodeType": "Identifier",
					  "overloadedDeclarations": [],
					  "referencedDeclaration": 593,
					  "src": "5656:21:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"functionReturnParameters": 591,
					"id": 627,
					"nodeType": "Return",
					"src": "5649:28:11"
				  }
				]
			  },
			  "functionSelector": "bc21ca0e",
			  "id": 629,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [],
			  "name": "getNumberOfAvailableBets",
			  "nameLocation": "5346:24:11",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 588,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "5370:2:11"
			  },
			  "returnParameters": {
				"id": 591,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 590,
					"mutability": "mutable",
					"name": "",
					"nameLocation": "-1:-1:-1",
					"nodeType": "VariableDeclaration",
					"scope": 629,
					"src": "5393:4:11",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 589,
					  "name": "uint",
					  "nodeType": "ElementaryTypeName",
					  "src": "5393:4:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "5392:6:11"
			  },
			  "scope": 728,
			  "src": "5337:347:11",
			  "stateMutability": "view",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 726,
				"nodeType": "Block",
				"src": "5754:748:11",
				"statements": [
				  {
					"assignments": [
					  640
					],
					"declarations": [
					  {
						"constant": false,
						"id": 640,
						"mutability": "mutable",
						"name": "betIds",
						"nameLocation": "5779:6:11",
						"nodeType": "VariableDeclaration",
						"scope": 726,
						"src": "5765:20:11",
						"stateVariable": false,
						"storageLocation": "memory",
						"typeDescriptions": {
						  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
						  "typeString": "uint256[]"
						},
						"typeName": {
						  "baseType": {
							"id": 638,
							"name": "uint",
							"nodeType": "ElementaryTypeName",
							"src": "5765:4:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  "id": 639,
						  "nodeType": "ArrayTypeName",
						  "src": "5765:6:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
							"typeString": "uint256[]"
						  }
						},
						"visibility": "internal"
					  }
					],
					"id": 646,
					"initialValue": {
					  "arguments": [
						{
						  "id": 644,
						  "name": "betCounter",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 13,
						  "src": "5799:10:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						],
						"id": 643,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"lValueRequested": false,
						"nodeType": "NewExpression",
						"src": "5788:10:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
						  "typeString": "function (uint256) pure returns (uint256[] memory)"
						},
						"typeName": {
						  "baseType": {
							"id": 641,
							"name": "uint",
							"nodeType": "ElementaryTypeName",
							"src": "5792:4:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  "id": 642,
						  "nodeType": "ArrayTypeName",
						  "src": "5792:6:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
							"typeString": "uint256[]"
						  }
						}
					  },
					  "id": 645,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "5788:22:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
						"typeString": "uint256[] memory"
					  }
					},
					"nodeType": "VariableDeclarationStatement",
					"src": "5765:45:11"
				  },
				  {
					"assignments": [
					  648
					],
					"declarations": [
					  {
						"constant": false,
						"id": 648,
						"mutability": "mutable",
						"name": "numberOfAvailableBets",
						"nameLocation": "5825:21:11",
						"nodeType": "VariableDeclaration",
						"scope": 726,
						"src": "5820:26:11",
						"stateVariable": false,
						"storageLocation": "default",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						},
						"typeName": {
						  "id": 647,
						  "name": "uint",
						  "nodeType": "ElementaryTypeName",
						  "src": "5820:4:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						},
						"visibility": "internal"
					  }
					],
					"id": 650,
					"initialValue": {
					  "hexValue": "30",
					  "id": 649,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": true,
					  "kind": "number",
					  "lValueRequested": false,
					  "nodeType": "Literal",
					  "src": "5849:1:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_rational_0_by_1",
						"typeString": "int_const 0"
					  },
					  "value": "0"
					},
					"nodeType": "VariableDeclarationStatement",
					"src": "5820:30:11"
				  },
				  {
					"body": {
					  "id": 688,
					  "nodeType": "Block",
					  "src": "5900:258:11",
					  "statements": [
						{
						  "condition": {
							"commonType": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							},
							"id": 673,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"leftExpression": {
							  "commonType": {
								"typeIdentifier": "t_bool",
								"typeString": "bool"
							  },
							  "id": 666,
							  "isConstant": false,
							  "isLValue": false,
							  "isPure": false,
							  "lValueRequested": false,
							  "leftExpression": {
								"expression": {
								  "baseExpression": {
									"id": 661,
									"name": "bets",
									"nodeType": "Identifier",
									"overloadedDeclarations": [],
									"referencedDeclaration": 26,
									"src": "5975:4:11",
									"typeDescriptions": {
									  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$58_storage_$",
									  "typeString": "mapping(uint256 => struct BetContract.Bet storage ref)"
									}
								  },
								  "id": 663,
								  "indexExpression": {
									"id": 662,
									"name": "i",
									"nodeType": "Identifier",
									"overloadedDeclarations": [],
									"referencedDeclaration": 652,
									"src": "5980:1:11",
									"typeDescriptions": {
									  "typeIdentifier": "t_uint256",
									  "typeString": "uint256"
									}
								  },
								  "isConstant": false,
								  "isLValue": true,
								  "isPure": false,
								  "lValueRequested": false,
								  "nodeType": "IndexAccess",
								  "src": "5975:7:11",
								  "typeDescriptions": {
									"typeIdentifier": "t_struct$_Bet_$58_storage",
									"typeString": "struct BetContract.Bet storage ref"
								  }
								},
								"id": 664,
								"isConstant": false,
								"isLValue": true,
								"isPure": false,
								"lValueRequested": false,
								"memberLocation": "5983:10:11",
								"memberName": "isAccepted",
								"nodeType": "MemberAccess",
								"referencedDeclaration": 57,
								"src": "5975:18:11",
								"typeDescriptions": {
								  "typeIdentifier": "t_bool",
								  "typeString": "bool"
								}
							  },
							  "nodeType": "BinaryOperation",
							  "operator": "==",
							  "rightExpression": {
								"hexValue": "66616c7365",
								"id": 665,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "bool",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "5997:5:11",
								"typeDescriptions": {
								  "typeIdentifier": "t_bool",
								  "typeString": "bool"
								},
								"value": "false"
							  },
							  "src": "5975:27:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_bool",
								"typeString": "bool"
							  }
							},
							"nodeType": "BinaryOperation",
							"operator": "&&",
							"rightExpression": {
							  "commonType": {
								"typeIdentifier": "t_bool",
								"typeString": "bool"
							  },
							  "id": 672,
							  "isConstant": false,
							  "isLValue": false,
							  "isPure": false,
							  "lValueRequested": false,
							  "leftExpression": {
								"expression": {
								  "baseExpression": {
									"id": 667,
									"name": "bets",
									"nodeType": "Identifier",
									"overloadedDeclarations": [],
									"referencedDeclaration": 26,
									"src": "6006:4:11",
									"typeDescriptions": {
									  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$58_storage_$",
									  "typeString": "mapping(uint256 => struct BetContract.Bet storage ref)"
									}
								  },
								  "id": 669,
								  "indexExpression": {
									"id": 668,
									"name": "i",
									"nodeType": "Identifier",
									"overloadedDeclarations": [],
									"referencedDeclaration": 652,
									"src": "6011:1:11",
									"typeDescriptions": {
									  "typeIdentifier": "t_uint256",
									  "typeString": "uint256"
									}
								  },
								  "isConstant": false,
								  "isLValue": true,
								  "isPure": false,
								  "lValueRequested": false,
								  "nodeType": "IndexAccess",
								  "src": "6006:7:11",
								  "typeDescriptions": {
									"typeIdentifier": "t_struct$_Bet_$58_storage",
									"typeString": "struct BetContract.Bet storage ref"
								  }
								},
								"id": 670,
								"isConstant": false,
								"isLValue": true,
								"isPure": false,
								"lValueRequested": false,
								"memberLocation": "6014:7:11",
								"memberName": "isAlive",
								"nodeType": "MemberAccess",
								"referencedDeclaration": 55,
								"src": "6006:15:11",
								"typeDescriptions": {
								  "typeIdentifier": "t_bool",
								  "typeString": "bool"
								}
							  },
							  "nodeType": "BinaryOperation",
							  "operator": "==",
							  "rightExpression": {
								"hexValue": "74727565",
								"id": 671,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "bool",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "6025:4:11",
								"typeDescriptions": {
								  "typeIdentifier": "t_bool",
								  "typeString": "bool"
								},
								"value": "true"
							  },
							  "src": "6006:23:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_bool",
								"typeString": "bool"
							  }
							},
							"src": "5975:54:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							}
						  },
						  "id": 687,
						  "nodeType": "IfStatement",
						  "src": "5972:176:11",
						  "trueBody": {
							"id": 686,
							"nodeType": "Block",
							"src": "6031:117:11",
							"statements": [
							  {
								"expression": {
								  "id": 681,
								  "isConstant": false,
								  "isLValue": false,
								  "isPure": false,
								  "lValueRequested": false,
								  "leftHandSide": {
									"baseExpression": {
									  "id": 674,
									  "name": "betIds",
									  "nodeType": "Identifier",
									  "overloadedDeclarations": [],
									  "referencedDeclaration": 640,
									  "src": "6050:6:11",
									  "typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
										"typeString": "uint256[] memory"
									  }
									},
									"id": 676,
									"indexExpression": {
									  "id": 675,
									  "name": "numberOfAvailableBets",
									  "nodeType": "Identifier",
									  "overloadedDeclarations": [],
									  "referencedDeclaration": 648,
									  "src": "6057:21:11",
									  "typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									  }
									},
									"isConstant": false,
									"isLValue": true,
									"isPure": false,
									"lValueRequested": true,
									"nodeType": "IndexAccess",
									"src": "6050:29:11",
									"typeDescriptions": {
									  "typeIdentifier": "t_uint256",
									  "typeString": "uint256"
									}
								  },
								  "nodeType": "Assignment",
								  "operator": "=",
								  "rightHandSide": {
									"expression": {
									  "baseExpression": {
										"id": 677,
										"name": "bets",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 26,
										"src": "6082:4:11",
										"typeDescriptions": {
										  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$58_storage_$",
										  "typeString": "mapping(uint256 => struct BetContract.Bet storage ref)"
										}
									  },
									  "id": 679,
									  "indexExpression": {
										"id": 678,
										"name": "i",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 652,
										"src": "6087:1:11",
										"typeDescriptions": {
										  "typeIdentifier": "t_uint256",
										  "typeString": "uint256"
										}
									  },
									  "isConstant": false,
									  "isLValue": true,
									  "isPure": false,
									  "lValueRequested": false,
									  "nodeType": "IndexAccess",
									  "src": "6082:7:11",
									  "typeDescriptions": {
										"typeIdentifier": "t_struct$_Bet_$58_storage",
										"typeString": "struct BetContract.Bet storage ref"
									  }
									},
									"id": 680,
									"isConstant": false,
									"isLValue": true,
									"isPure": false,
									"lValueRequested": false,
									"memberLocation": "6090:2:11",
									"memberName": "id",
									"nodeType": "MemberAccess",
									"referencedDeclaration": 41,
									"src": "6082:10:11",
									"typeDescriptions": {
									  "typeIdentifier": "t_uint256",
									  "typeString": "uint256"
									}
								  },
								  "src": "6050:42:11",
								  "typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								  }
								},
								"id": 682,
								"nodeType": "ExpressionStatement",
								"src": "6050:42:11"
							  },
							  {
								"expression": {
								  "id": 684,
								  "isConstant": false,
								  "isLValue": false,
								  "isPure": false,
								  "lValueRequested": false,
								  "nodeType": "UnaryOperation",
								  "operator": "++",
								  "prefix": false,
								  "src": "6110:23:11",
								  "subExpression": {
									"id": 683,
									"name": "numberOfAvailableBets",
									"nodeType": "Identifier",
									"overloadedDeclarations": [],
									"referencedDeclaration": 648,
									"src": "6110:21:11",
									"typeDescriptions": {
									  "typeIdentifier": "t_uint256",
									  "typeString": "uint256"
									}
								  },
								  "typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								  }
								},
								"id": 685,
								"nodeType": "ExpressionStatement",
								"src": "6110:23:11"
							  }
							]
						  }
						}
					  ]
					},
					"condition": {
					  "commonType": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  },
					  "id": 657,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftExpression": {
						"id": 655,
						"name": "i",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 652,
						"src": "5877:1:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "nodeType": "BinaryOperation",
					  "operator": "<=",
					  "rightExpression": {
						"id": 656,
						"name": "betCounter",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 13,
						"src": "5883:10:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "src": "5877:16:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_bool",
						"typeString": "bool"
					  }
					},
					"id": 689,
					"initializationExpression": {
					  "assignments": [
						652
					  ],
					  "declarations": [
						{
						  "constant": false,
						  "id": 652,
						  "mutability": "mutable",
						  "name": "i",
						  "nameLocation": "5870:1:11",
						  "nodeType": "VariableDeclaration",
						  "scope": 689,
						  "src": "5865:6:11",
						  "stateVariable": false,
						  "storageLocation": "default",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  },
						  "typeName": {
							"id": 651,
							"name": "uint",
							"nodeType": "ElementaryTypeName",
							"src": "5865:4:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  "visibility": "internal"
						}
					  ],
					  "id": 654,
					  "initialValue": {
						"hexValue": "31",
						"id": 653,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"kind": "number",
						"lValueRequested": false,
						"nodeType": "Literal",
						"src": "5874:1:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_rational_1_by_1",
						  "typeString": "int_const 1"
						},
						"value": "1"
					  },
					  "nodeType": "VariableDeclarationStatement",
					  "src": "5865:10:11"
					},
					"loopExpression": {
					  "expression": {
						"id": 659,
						"isConstant": false,
						"isLValue": false,
						"isPure": false,
						"lValueRequested": false,
						"nodeType": "UnaryOperation",
						"operator": "++",
						"prefix": false,
						"src": "5896:3:11",
						"subExpression": {
						  "id": 658,
						  "name": "i",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 652,
						  "src": "5896:1:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						},
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "id": 660,
					  "nodeType": "ExpressionStatement",
					  "src": "5896:3:11"
					},
					"nodeType": "ForStatement",
					"src": "5861:297:11"
				  },
				  {
					"assignments": [
					  694
					],
					"declarations": [
					  {
						"constant": false,
						"id": 694,
						"mutability": "mutable",
						"name": "availableBets",
						"nameLocation": "6189:13:11",
						"nodeType": "VariableDeclaration",
						"scope": 726,
						"src": "6176:26:11",
						"stateVariable": false,
						"storageLocation": "memory",
						"typeDescriptions": {
						  "typeIdentifier": "t_array$_t_struct$_Bet_$58_memory_ptr_$dyn_memory_ptr",
						  "typeString": "struct BetContract.Bet[]"
						},
						"typeName": {
						  "baseType": {
							"id": 692,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
							  "id": 691,
							  "name": "Bet",
							  "nameLocations": [
								"6176:3:11"
							  ],
							  "nodeType": "IdentifierPath",
							  "referencedDeclaration": 58,
							  "src": "6176:3:11"
							},
							"referencedDeclaration": 58,
							"src": "6176:3:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_struct$_Bet_$58_storage_ptr",
							  "typeString": "struct BetContract.Bet"
							}
						  },
						  "id": 693,
						  "nodeType": "ArrayTypeName",
						  "src": "6176:5:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_array$_t_struct$_Bet_$58_storage_$dyn_storage_ptr",
							"typeString": "struct BetContract.Bet[]"
						  }
						},
						"visibility": "internal"
					  }
					],
					"id": 701,
					"initialValue": {
					  "arguments": [
						{
						  "id": 699,
						  "name": "numberOfAvailableBets",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 648,
						  "src": "6215:21:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						],
						"id": 698,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"lValueRequested": false,
						"nodeType": "NewExpression",
						"src": "6205:9:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Bet_$58_memory_ptr_$dyn_memory_ptr_$",
						  "typeString": "function (uint256) pure returns (struct BetContract.Bet memory[] memory)"
						},
						"typeName": {
						  "baseType": {
							"id": 696,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
							  "id": 695,
							  "name": "Bet",
							  "nameLocations": [
								"6209:3:11"
							  ],
							  "nodeType": "IdentifierPath",
							  "referencedDeclaration": 58,
							  "src": "6209:3:11"
							},
							"referencedDeclaration": 58,
							"src": "6209:3:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_struct$_Bet_$58_storage_ptr",
							  "typeString": "struct BetContract.Bet"
							}
						  },
						  "id": 697,
						  "nodeType": "ArrayTypeName",
						  "src": "6209:5:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_array$_t_struct$_Bet_$58_storage_$dyn_storage_ptr",
							"typeString": "struct BetContract.Bet[]"
						  }
						}
					  },
					  "id": 700,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "nameLocations": [],
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "6205:32:11",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_array$_t_struct$_Bet_$58_memory_ptr_$dyn_memory_ptr",
						"typeString": "struct BetContract.Bet memory[] memory"
					  }
					},
					"nodeType": "VariableDeclarationStatement",
					"src": "6176:61:11"
				  },
				  {
					"body": {
					  "id": 722,
					  "nodeType": "Block",
					  "src": "6392:59:11",
					  "statements": [
						{
						  "expression": {
							"id": 720,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"leftHandSide": {
							  "baseExpression": {
								"id": 712,
								"name": "availableBets",
								"nodeType": "Identifier",
								"overloadedDeclarations": [],
								"referencedDeclaration": 694,
								"src": "6406:13:11",
								"typeDescriptions": {
								  "typeIdentifier": "t_array$_t_struct$_Bet_$58_memory_ptr_$dyn_memory_ptr",
								  "typeString": "struct BetContract.Bet memory[] memory"
								}
							  },
							  "id": 714,
							  "indexExpression": {
								"id": 713,
								"name": "j",
								"nodeType": "Identifier",
								"overloadedDeclarations": [],
								"referencedDeclaration": 703,
								"src": "6420:1:11",
								"typeDescriptions": {
								  "typeIdentifier": "t_uint256",
								  "typeString": "uint256"
								}
							  },
							  "isConstant": false,
							  "isLValue": true,
							  "isPure": false,
							  "lValueRequested": true,
							  "nodeType": "IndexAccess",
							  "src": "6406:16:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_struct$_Bet_$58_memory_ptr",
								"typeString": "struct BetContract.Bet memory"
							  }
							},
							"nodeType": "Assignment",
							"operator": "=",
							"rightHandSide": {
							  "baseExpression": {
								"id": 715,
								"name": "bets",
								"nodeType": "Identifier",
								"overloadedDeclarations": [],
								"referencedDeclaration": 26,
								"src": "6425:4:11",
								"typeDescriptions": {
								  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$58_storage_$",
								  "typeString": "mapping(uint256 => struct BetContract.Bet storage ref)"
								}
							  },
							  "id": 719,
							  "indexExpression": {
								"baseExpression": {
								  "id": 716,
								  "name": "betIds",
								  "nodeType": "Identifier",
								  "overloadedDeclarations": [],
								  "referencedDeclaration": 640,
								  "src": "6430:6:11",
								  "typeDescriptions": {
									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
									"typeString": "uint256[] memory"
								  }
								},
								"id": 718,
								"indexExpression": {
								  "id": 717,
								  "name": "j",
								  "nodeType": "Identifier",
								  "overloadedDeclarations": [],
								  "referencedDeclaration": 703,
								  "src": "6437:1:11",
								  "typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								  }
								},
								"isConstant": false,
								"isLValue": true,
								"isPure": false,
								"lValueRequested": false,
								"nodeType": "IndexAccess",
								"src": "6430:9:11",
								"typeDescriptions": {
								  "typeIdentifier": "t_uint256",
								  "typeString": "uint256"
								}
							  },
							  "isConstant": false,
							  "isLValue": true,
							  "isPure": false,
							  "lValueRequested": false,
							  "nodeType": "IndexAccess",
							  "src": "6425:15:11",
							  "typeDescriptions": {
								"typeIdentifier": "t_struct$_Bet_$58_storage",
								"typeString": "struct BetContract.Bet storage ref"
							  }
							},
							"src": "6406:34:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_struct$_Bet_$58_memory_ptr",
							  "typeString": "struct BetContract.Bet memory"
							}
						  },
						  "id": 721,
						  "nodeType": "ExpressionStatement",
						  "src": "6406:34:11"
						}
					  ]
					},
					"condition": {
					  "commonType": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  },
					  "id": 708,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftExpression": {
						"id": 706,
						"name": "j",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 703,
						"src": "6360:1:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "nodeType": "BinaryOperation",
					  "operator": "<",
					  "rightExpression": {
						"id": 707,
						"name": "numberOfAvailableBets",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 648,
						"src": "6364:21:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "src": "6360:25:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_bool",
						"typeString": "bool"
					  }
					},
					"id": 723,
					"initializationExpression": {
					  "assignments": [
						703
					  ],
					  "declarations": [
						{
						  "constant": false,
						  "id": 703,
						  "mutability": "mutable",
						  "name": "j",
						  "nameLocation": "6353:1:11",
						  "nodeType": "VariableDeclaration",
						  "scope": 723,
						  "src": "6348:6:11",
						  "stateVariable": false,
						  "storageLocation": "default",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  },
						  "typeName": {
							"id": 702,
							"name": "uint",
							"nodeType": "ElementaryTypeName",
							"src": "6348:4:11",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  "visibility": "internal"
						}
					  ],
					  "id": 705,
					  "initialValue": {
						"hexValue": "30",
						"id": 704,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"kind": "number",
						"lValueRequested": false,
						"nodeType": "Literal",
						"src": "6357:1:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_rational_0_by_1",
						  "typeString": "int_const 0"
						},
						"value": "0"
					  },
					  "nodeType": "VariableDeclarationStatement",
					  "src": "6348:10:11"
					},
					"loopExpression": {
					  "expression": {
						"id": 710,
						"isConstant": false,
						"isLValue": false,
						"isPure": false,
						"lValueRequested": false,
						"nodeType": "UnaryOperation",
						"operator": "++",
						"prefix": false,
						"src": "6387:3:11",
						"subExpression": {
						  "id": 709,
						  "name": "j",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 703,
						  "src": "6387:1:11",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						},
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "id": 711,
					  "nodeType": "ExpressionStatement",
					  "src": "6387:3:11"
					},
					"nodeType": "ForStatement",
					"src": "6344:107:11"
				  },
				  {
					"expression": {
					  "id": 724,
					  "name": "availableBets",
					  "nodeType": "Identifier",
					  "overloadedDeclarations": [],
					  "referencedDeclaration": 694,
					  "src": "6476:13:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_array$_t_struct$_Bet_$58_memory_ptr_$dyn_memory_ptr",
						"typeString": "struct BetContract.Bet memory[] memory"
					  }
					},
					"functionReturnParameters": 635,
					"id": 725,
					"nodeType": "Return",
					"src": "6469:20:11"
				  }
				]
			  },
			  "functionSelector": "9a7b8918",
			  "id": 727,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [],
			  "name": "getAvailableBets",
			  "nameLocation": "5700:16:11",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 630,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "5716:2:11"
			  },
			  "returnParameters": {
				"id": 635,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 634,
					"mutability": "mutable",
					"name": "",
					"nameLocation": "-1:-1:-1",
					"nodeType": "VariableDeclaration",
					"scope": 727,
					"src": "5740:12:11",
					"stateVariable": false,
					"storageLocation": "memory",
					"typeDescriptions": {
					  "typeIdentifier": "t_array$_t_struct$_Bet_$58_memory_ptr_$dyn_memory_ptr",
					  "typeString": "struct BetContract.Bet[]"
					},
					"typeName": {
					  "baseType": {
						"id": 632,
						"nodeType": "UserDefinedTypeName",
						"pathNode": {
						  "id": 631,
						  "name": "Bet",
						  "nameLocations": [
							"5740:3:11"
						  ],
						  "nodeType": "IdentifierPath",
						  "referencedDeclaration": 58,
						  "src": "5740:3:11"
						},
						"referencedDeclaration": 58,
						"src": "5740:3:11",
						"typeDescriptions": {
						  "typeIdentifier": "t_struct$_Bet_$58_storage_ptr",
						  "typeString": "struct BetContract.Bet"
						}
					  },
					  "id": 633,
					  "nodeType": "ArrayTypeName",
					  "src": "5740:5:11",
					  "typeDescriptions": {
						"typeIdentifier": "t_array$_t_struct$_Bet_$58_storage_$dyn_storage_ptr",
						"typeString": "struct BetContract.Bet[]"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "5739:14:11"
			  },
			  "scope": 728,
			  "src": "5691:811:11",
			  "stateMutability": "view",
			  "virtual": false,
			  "visibility": "public"
			}
		  ],
		  "scope": 729,
		  "src": "120:6389:11",
		  "usedErrors": []
		}
	  ],
	  "src": "32:6478:11"
	},
	"bytecode": "",
	"bytecodeSha1": "7b202e825c24423a3744b8250e467a28b9fa8af4",
	"compiler": {
	  "evm_version": "istanbul",
	  "optimizer": {
		"enabled": true,
		"runs": 200
	  },
	  "version": "0.8.17+commit.8df45f5f"
	},
	"contractName": "BetContract",
	"coverageMap": {
	  "branches": {
		"0": {},
		"1": {
		  "ChainlinkClient._rawRequest": {
			"129": [
			  6952,
			  7014,
			  true
			]
		  }
		},
		"11": {
		  "BetContract.acceptBet": {
			"93": [
			  4268,
			  4287,
			  true
			],
			"94": [
			  4330,
			  4344,
			  true
			],
			"95": [
			  4387,
			  4394,
			  false
			],
			"96": [
			  4398,
			  4415,
			  true
			],
			"97": [
			  4458,
			  4486,
			  true
			],
			"98": [
			  4505,
			  4527,
			  true
			]
		  },
		  "BetContract.cancelBet": {
			"88": [
			  4844,
			  4863,
			  true
			],
			"89": [
			  4906,
			  4923,
			  false
			],
			"90": [
			  4927,
			  4934,
			  true
			],
			"91": [
			  4977,
			  5005,
			  true
			],
			"92": [
			  5187,
			  5196,
			  true
			]
		  },
		  "BetContract.close_bet": {
			"116": [
			  3222,
			  3247,
			  true
			],
			"117": [
			  3251,
			  3279,
			  false
			],
			"118": [
			  3543,
			  3552,
			  true
			]
		  },
		  "BetContract.getAvailableBets": {
			"99": [
			  5975,
			  6002,
			  false
			],
			"100": [
			  6006,
			  6029,
			  false
			]
		  },
		  "BetContract.getNumberOfAvailableBets": {
			"103": [
			  5516,
			  5543,
			  false
			],
			"104": [
			  5547,
			  5570,
			  false
			]
		  },
		  "BetContract.publishBet": {
			"101": [
			  3727,
			  3738,
			  true
			],
			"102": [
			  3785,
			  3804,
			  true
			]
		  },
		  "BetContract.upkeep_setWinner": {
			"105": [
			  2574,
			  2586,
			  true
			],
			"106": [
			  2590,
			  2602,
			  true
			],
			"107": [
			  2678,
			  2709,
			  false
			],
			"108": [
			  2735,
			  2758,
			  false
			],
			"109": [
			  2762,
			  2774,
			  true
			],
			"110": [
			  2780,
			  2803,
			  false
			],
			"111": [
			  2807,
			  2819,
			  false
			],
			"112": [
			  2917,
			  2940,
			  false
			],
			"113": [
			  2944,
			  2956,
			  true
			],
			"114": [
			  2962,
			  2985,
			  false
			],
			"115": [
			  2989,
			  3001,
			  false
			]
		  }
		},
		"8": {
		  "BufferChainlink.init": {
			"119": [
			  1100,
			  1118,
			  false
			]
		  },
		  "BufferChainlink.max": {
			"124": [
			  2037,
			  2042,
			  false
			]
		  },
		  "BufferChainlink.write": {
			"120": [
			  2896,
			  2914,
			  true
			],
			"121": [
			  2926,
			  2950,
			  false
			]
		  },
		  "BufferChainlink.writeInt": {
			"123": [
			  9118,
			  9142,
			  false
			]
		  },
		  "BufferChainlink.writeUint8": {
			"122": [
			  5276,
			  5295,
			  false
			]
		  }
		},
		"9": {
		  "CBORChainlink.encodeFixedNumeric": {
			"125": [
			  794,
			  805,
			  false
			],
			"126": [
			  876,
			  889,
			  false
			],
			"127": [
			  988,
			  1003,
			  false
			],
			"128": [
			  1102,
			  1121,
			  false
			]
		  }
		}
	  },
	  "statements": {
		"0": {
		  "Chainlink.add": {
			"46": [
			  2061,
			  2087
			],
			"47": [
			  2093,
			  2121
			]
		  },
		  "Chainlink.initialize": {
			"49": [
			  1161,
			  1210
			],
			"50": [
			  1216,
			  1231
			],
			"51": [
			  1237,
			  1272
			],
			"52": [
			  1278,
			  1316
			]
		  }
		},
		"1": {
		  "ChainlinkClient._rawRequest": {
			"69": [
			  6796,
			  6848
			],
			"70": [
			  6854,
			  6898
			],
			"71": [
			  6904,
			  6938
			],
			"72": [
			  6944,
			  7054
			]
		  },
		  "ChainlinkClient.buildChainlinkRequest": {
			"45": [
			  2058,
			  2128
			]
		  },
		  "ChainlinkClient.sendOperatorRequest": {
			"48": [
			  4913,
			  4974
			]
		  },
		  "ChainlinkClient.sendOperatorRequestTo": {
			"55": [
			  5746,
			  5772
			],
			"56": [
			  6210,
			  6275
			]
		  }
		},
		"11": {
		  "BetContract.acceptBet": {
			"9": [
			  4260,
			  4312
			],
			"10": [
			  4322,
			  4369
			],
			"11": [
			  4379,
			  4440
			],
			"12": [
			  4450,
			  4487
			],
			"13": [
			  4497,
			  4528
			],
			"14": [
			  4547,
			  4572
			],
			"15": [
			  4582,
			  4603
			],
			"16": [
			  4613,
			  4676
			]
		  },
		  "BetContract.cancelBet": {
			"1": [
			  4836,
			  4888
			],
			"2": [
			  4898,
			  4959
			],
			"3": [
			  4969,
			  5006
			],
			"4": [
			  5017,
			  5036
			],
			"5": [
			  5179,
			  5219
			]
		  },
		  "BetContract.close_bet": {
			"42": [
			  3330,
			  3351
			],
			"43": [
			  3361,
			  3385
			],
			"44": [
			  3535,
			  3575
			]
		  },
		  "BetContract.fulfillBytesAndUint": {
			"6": [
			  2321,
			  2373
			],
			"7": [
			  2383,
			  2401
			],
			"8": [
			  2411,
			  2429
			]
		  },
		  "BetContract.getAvailableBets": {
			"17": [
			  6050,
			  6092
			],
			"18": [
			  6110,
			  6133
			],
			"19": [
			  5896,
			  5899
			],
			"20": [
			  6406,
			  6440
			],
			"21": [
			  6387,
			  6390
			],
			"22": [
			  6469,
			  6489
			]
		  },
		  "BetContract.getNumberOfAvailableBets": {
			"28": [
			  5591,
			  5614
			],
			"29": [
			  5494,
			  5497
			],
			"30": [
			  5649,
			  5677
			]
		  },
		  "BetContract.getNumberOfBets": {
			"0": [
			  5306,
			  5323
			]
		  },
		  "BetContract.publishBet": {
			"23": [
			  3719,
			  3767
			],
			"24": [
			  3777,
			  3805
			],
			"25": [
			  3824,
			  3836
			],
			"26": [
			  3846,
			  4091
			],
			"27": [
			  4102,
			  4152
			]
		  },
		  "BetContract.requestMultiVariable": {
			"36": [
			  1828,
			  1959
			],
			"37": [
			  1969,
			  1995
			],
			"38": [
			  2005,
			  2031
			],
			"39": [
			  2041,
			  2069
			],
			"40": [
			  2079,
			  2107
			],
			"41": [
			  2117,
			  2156
			]
		  },
		  "BetContract.upkeep_setWinner": {
			"31": [
			  2534,
			  2556
			],
			"32": [
			  2566,
			  2603
			],
			"33": [
			  2843,
			  2875
			],
			"34": [
			  3025,
			  3055
			],
			"35": [
			  2647,
			  2650
			]
		  }
		},
		"8": {
		  "BufferChainlink.append": {
			"68": [
			  4790,
			  4842
			]
		  },
		  "BufferChainlink.appendInt": {
			"74": [
			  10019,
			  10066
			]
		  },
		  "BufferChainlink.appendUint8": {
			"73": [
			  6136,
			  6180
			]
		  },
		  "BufferChainlink.init": {
			"57": [
			  1128,
			  1160
			],
			"58": [
			  1214,
			  1237
			]
		  },
		  "BufferChainlink.max": {
			"85": [
			  2052,
			  2060
			]
		  },
		  "BufferChainlink.resize": {
			"86": [
			  1908,
			  1927
			],
			"87": [
			  1933,
			  1952
			]
		  },
		  "BufferChainlink.write": {
			"75": [
			  2888,
			  2915
			],
			"76": [
			  2960,
			  3005
			],
			"77": [
			  3639,
			  3649
			],
			"78": [
			  3657,
			  3666
			],
			"79": [
			  3562,
			  3571
			],
			"80": [
			  3940,
			  3950
			]
		  },
		  "BufferChainlink.writeInt": {
			"83": [
			  9152,
			  9180
			],
			"84": [
			  9634,
			  9644
			]
		  },
		  "BufferChainlink.writeUint8": {
			"81": [
			  5305,
			  5334
			],
			"82": [
			  5772,
			  5782
			]
		  }
		},
		"9": {
		  "CBORChainlink.encodeFixedNumeric": {
			"59": [
			  815,
			  859
			],
			"60": [
			  899,
			  940
			],
			"61": [
			  948,
			  971
			],
			"62": [
			  1013,
			  1054
			],
			"63": [
			  1062,
			  1085
			],
			"64": [
			  1131,
			  1172
			],
			"65": [
			  1180,
			  1203
			],
			"66": [
			  1224,
			  1265
			],
			"67": [
			  1273,
			  1296
			]
		  },
		  "CBORChainlink.encodeString": {
			"53": [
			  2875,
			  2946
			],
			"54": [
			  2952,
			  2976
			]
		  }
		}
	  }
	},
	"dependencies": [
	  "smartcontractkit/chainlink-brownie-contracts@0.6.0/BufferChainlink",
	  "smartcontractkit/chainlink-brownie-contracts@0.6.0/CBORChainlink",
	  "smartcontractkit/chainlink-brownie-contracts@0.6.0/Chainlink",
	  "smartcontractkit/chainlink-brownie-contracts@0.6.0/ChainlinkClient"
	],
	"deployedBytecode": "6080604052600436106100915760003560e01c80639a7b8918116100595780639a7b89181461022c578063ac53d35e1461024e578063bc21ca0e14610261578063c738f5e314610284578063f222d0b91461029957600080fd5b806322af00fa14610096578063357401f5146101695780636b42e3b51461017e5780636c0c27e11461019e5780638f17aa89146101b1575b600080fd5b3480156100a257600080fd5b506101116100b1366004611599565b600c60205260009081526040902080546001820154600283015460038401546004850154600586015460069096015494959394929391926001600160a01b039182169282169181169060ff600160a01b8204811691600160a81b90041689565b60408051998a5260208a01989098529688019590955260608701939093526001600160a01b039182166080870152811660a08601521660c0840152151560e08301521515610100820152610120015b60405180910390f35b61017c610177366004611599565b6102ae565b005b34801561018a57600080fd5b5061017c6101993660046115b2565b6103ed565b61017c6101ac366004611599565b6104f1565b3480156101bd57600080fd5b506101116101cc3660046115de565b600d60205260009081526040902080546001820154600283015460038401546004850154600586015460069096015494959394929391926001600160a01b039182169282169181169060ff600160a01b8204811691600160a81b90041689565b34801561023857600080fd5b50610241610652565b604051610160919061160e565b61017c61025c3660046115b2565b6108d3565b34801561026d57600080fd5b50610276610a68565b604051908152602001610160565b34801561029057600080fd5b5061017c610ae8565b3480156102a557600080fd5b50600954610276565b6000818152600c602052604090206006810154600160a01b900460ff1615156001146103185760405162461bcd60e51b8152602060048201526014602482015273151a194818995d081dd85cc818d85b98d95b195960621b60448201526064015b60405180910390fd5b816009541015801561032a5750600082115b6103465760405162461bcd60e51b815260040161030f906116bd565b60048101546001600160a01b0316331461035f57600080fd5b60068101805460ff60a01b19169055600381015460048201546040516001600160a01b0390911690600090829084156108fc0290859084818181858888f193505050509050806103e65760405162461bcd60e51b8152602060048201526012602482015271151c985b9cd858dd1a5bdb8811985a5b195960721b604482015260640161030f565b5050505050565b60008381526005602052604090205483906001600160a01b031633146104665760405162461bcd60e51b815260206004820152602860248201527f536f75726365206d75737420626520746865206f7261636c65206f6620746865604482015267081c995c5d595cdd60c21b606482015260840161030f565b60008181526005602052604080822080546001600160a01b03191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a2604080518481526020810184905285917f29d1fd44cc39a4213a364818c158187934866b333b04a59815cdf69b58c809c0910160405180910390a25060069190915560075550565b6000818152600c602052604090206006810154600160a01b900460ff1615156001146105565760405162461bcd60e51b8152602060048201526014602482015273151a194818995d081dd85cc818d85b98d95b195960621b604482015260640161030f565b6000600954116105785760405162461bcd60e51b815260040161030f906116bd565b60008211801561058a57506009548211155b6105a65760405162461bcd60e51b815260040161030f906116bd565b60048101546001600160a01b031633036105bf57600080fd5b80600301543410156105d057600080fd5b6005810180546001600160a01b0319163390811790915560068201805460ff60a81b1916600160a81b179055600482015460038301546040516001600160a01b03929092169185917f05394edf3dc91f34510ad8b3c082c8a370ad8ee677a618697d8605ceeb76957b9161064691815260200190565b60405180910390a45050565b6060600060095467ffffffffffffffff811115610671576106716116eb565b60405190808252806020026020018201604052801561069a578160200160208202803683370190505b509050600060015b6009548111610744576000818152600c6020526040902060060154600160a81b900460ff161580156106f157506000818152600c6020526040902060060154600160a01b900460ff1615156001145b15610732576000818152600c6020526040902054835184908490811061071957610719611701565b60209081029190910101528161072e8161172d565b9250505b8061073c8161172d565b9150506106a2565b5060008167ffffffffffffffff811115610760576107606116eb565b6040519080825280602002602001820160405280156107d757816020015b604080516101208101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c0820181905260e08201819052610100820152825260001990920191018161077e5790505b50905060005b828110156108cb57600c60008583815181106107fb576107fb611701565b6020908102919091018101518252818101929092526040908101600020815161012081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546001600160a01b0390811660808401526005820154811660a084015260069091015490811660c083015260ff600160a01b82048116151560e0840152600160a81b90910416151561010082015282518390839081106108ad576108ad611701565b602002602001018190525080806108c39061172d565b9150506107dd565b509392505050565b60018210156109245760405162461bcd60e51b815260206004820152601860248201527f4d696e696d756d2070726963652069732031204d617469630000000000000000604482015260640161030f565b8134101561093157600080fd5b600980549060006109418361172d565b90915550506040805161012081018252600980548083526020808401868152848601898152606086018981523360808801818152600060a08a0181815260c08b01828152600160e08d018181526101008e018581529b8552600c909a528d84209c518d559751978c0197909755945160028b0155925160038a0155516004890180546001600160a01b039283166001600160a01b031991821617909155935160058a0180549183169190951617909355925160069097018054945195511515600160a81b0260ff60a81b19961515600160a01b026001600160a81b0319909616989093169790971793909317939093169290921790935590549251859391927f8ac3a030abe983d724dc055182198435d38e966970592f8ab4015e6b0eacb62a91a4505050565b60008060015b6009548111610ae2576000818152600c6020526040902060060154600160a81b900460ff16158015610abd57506000818152600c6020526040902060060154600160a01b900460ff1615156001145b15610ad05781610acc8161172d565b9250505b80610ada8161172d565b915050610a6e565b50919050565b610af0610c2d565b60065460011480610b0357506007546001145b610b0c57600080fd5b60015b6009548111610c2a576008546000828152600c602052604090206001015403610c18576000818152600c6020526040902060020154158015610b515750600754155b80610b7a57506000818152600c60205260409020600201546001148015610b7a57506007546001145b15610ba5576000818152600c6020526040902060040154610ba59082906001600160a01b0316610dd9565b6000818152600c6020526040902060020154158015610bc657506007546001145b80610bed57506000818152600c60205260409020600201546001148015610bed5750600754155b15610c18576000818152600c6020526040902060050154610c189082906001600160a01b0316610dd9565b80610c228161172d565b915050610b0f565b50565b6000610c43600a5430636b42e3b560e01b610ecd565b9050610c856040518060400160405280600381526020016219d95d60ea1b8152506040518060a001604052806071815260200161197a60719139839190610ef2565b610cd560405180604001604052806005815260200164706174683160d81b81525060405180604001604052806006815260200165302c4e616d6560d01b81525083610ef29092919063ffffffff16565b610d25604051806040016040528060058152602001643830ba341960d91b81525060405180604001604052806006815260200165302c57696e7360d01b81525083610ef29092919063ffffffff16565b610d7760405180604001604052806005815260200164706174683360d81b81525060405180604001604052806008815260200167302c4c6f7373657360c01b81525083610ef29092919063ffffffff16565b610dc9604051806040016040528060058152602001641c185d1a0d60da1b815250604051806040016040528060088152602001670c0b11d85b59525160c21b81525083610ef29092919063ffffffff16565b610dd581600b54610f15565b5050565b6000828152600c6020526040902060060154600160a01b900460ff161580610e1a57506000828152600c6020526040902060060154600160a81b900460ff16155b15610e23575050565b6000828152600c602052604081206006810180546001600160a81b0319166001600160a01b03851617905560030154610e5d906002611746565b60405190915082906000906001600160a01b0383169084156108fc0290859084818181858888f193505050509050806103e65760405162461bcd60e51b8152602060048201526012602482015271151c985b9cd858dd1a5bdb8811985a5b195960721b604482015260640161030f565b610ed561155e565b610edd61155e565b610ee981868686610f38565b95945050505050565b6080830151610f019083610f7e565b6080830151610f109082610f7e565b505050565b600354600090610f2f906001600160a01b03168484610f95565b90505b92915050565b610f4061155e565b610f508560800151610100611026565b50508284526001600160a01b03821660208501526001600160e01b031981166040850152835b949350505050565b610f8b826003835161108b565b610f1082826111a0565b600454600090610fa681600161175d565b60045583516040808601516080870151519151600093633c6d41b960e01b93610fdc9386938493928991600291906024016117b6565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152905061101c868386846111c7565b9695505050505050565b60408051808201909152606081526000602082015261104660208361180b565b1561106e5761105660208361180b565b61106190602061182d565b61106b908361175d565b91505b506020828101829052604080518085526000815290920101905290565b60178167ffffffffffffffff16116110b6576110b08360e0600585901b168317611325565b50505050565b60ff8167ffffffffffffffff16116110f4576110dd836018611fe0600586901b1617611325565b506110b08367ffffffffffffffff8316600161134a565b61ffff8167ffffffffffffffff16116111335761111c836019611fe0600586901b1617611325565b506110b08367ffffffffffffffff8316600261134a565b63ffffffff8167ffffffffffffffff16116111745761115d83601a611fe0600586901b1617611325565b506110b08367ffffffffffffffff8316600461134a565b61118983601b611fe0600586901b1617611325565b506110b08367ffffffffffffffff8316600861134a565b604080518082019091526060815260006020820152610f2f83846000015151848551611370565b6040516bffffffffffffffffffffffff193060601b1660208201526034810184905260009060540160408051808303601f1901815282825280516020918201206000818152600590925291812080546001600160a01b0319166001600160a01b038a1617905590925082917fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af99190a2600254604051630200057560e51b81526001600160a01b0390911690634000aea09061128a90889087908790600401611840565b6020604051808303816000875af11580156112a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112cd9190611867565b610f765760405162461bcd60e51b815260206004820152602360248201527f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261604482015262636c6560e81b606482015260840161030f565b604080518082019091526060815260006020820152610f2f838460000151518461145a565b604080518082019091526060815260006020820152610f768485600001515185856114b5565b604080518082019091526060815260006020820152825182111561139357600080fd5b60208501516113a2838661175d565b11156113d5576113d5856113c5876020015187866113c0919061175d565b611536565b6113d0906002611746565b611547565b6000808651805187602083010193508088870111156113f45787860182525b505050602084015b60208410611434578051825261141360208361175d565b915061142060208261175d565b905061142d60208561182d565b93506113fc565b51815160001960208690036101000a019081169019919091161790525083949350505050565b6040805180820190915260608152600060208201528360200151831061148f5761148f84856020015160026113d09190611746565b83518051602085830101848153508085036114ab576001810182525b5093949350505050565b60408051808201909152606081526000602082015260208501516114d9858461175d565b11156114ed576114ed856113c5868561175d565b600060016114fd8461010061196d565b611507919061182d565b905085518386820101858319825116178152508051848701111561152b5783860181525b509495945050505050565b600081831115610ae2575081610f32565b81516115538383611026565b506110b083826111a0565b6040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b6000602082840312156115ab57600080fd5b5035919050565b6000806000606084860312156115c757600080fd5b505081359360208301359350604090920135919050565b6000602082840312156115f057600080fd5b81356001600160a01b038116811461160757600080fd5b9392505050565b602080825282518282018190526000919060409081850190868401855b828110156116b05781518051855286810151878601528581015186860152606080820151908601526080808201516001600160a01b039081169187019190915260a08083015182169087015260c0808301519091169086015260e08082015115159086015261010090810151151590850152610120909301929085019060010161162b565b5091979650505050505050565b60208082526014908201527310995d081a5cc81b9bdd081c1d589b1a5cda195960621b604082015260600190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161173f5761173f611717565b5060010190565b8082028115828204841417610f3257610f32611717565b80820180821115610f3257610f32611717565b6000815180845260005b818110156117965760208185018101518683018201520161177a565b506000602082860101526020601f19601f83011685010191505092915050565b60018060a01b038816815286602082015285604082015263ffffffff60e01b851660608201528360808201528260a082015260e060c082015260006117fe60e0830184611770565b9998505050505050505050565b60008261182857634e487b7160e01b600052601260045260246000fd5b500690565b81810381811115610f3257610f32611717565b60018060a01b0384168152826020820152606060408201526000610ee96060830184611770565b60006020828403121561187957600080fd5b8151801515811461160757600080fd5b600181815b808511156118c45781600019048211156118aa576118aa611717565b808516156118b757918102915b93841c939080029061188e565b509250929050565b6000826118db57506001610f32565b816118e857506000610f32565b81600181146118fe576002811461190857611924565b6001915050610f32565b60ff84111561191957611919611717565b50506001821b610f32565b5060208310610133831016604e8410600b8410161715611947575081810a610f32565b6119518383611889565b806000190482111561196557611965611717565b029392505050565b6000610f2f83836118cc56fe68747470733a2f2f6170692e73706f727473646174612e696f2f76332f6e62612f73636f7265732f6a736f6e2f5465616d47616d6553746174734279536561736f6e2f323032332f31312f313f6b65793d3736633262353661636532383435633539653834663330623861383861643336a2646970667358221220618c20aec41fcaf084f96140ba2521568b2f2ec3d36d0d6987acffd67ebf67cd64736f6c63430008110033",
	"deployedSourceMap": "120:6389:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;392:33;;;;;;;;;;-1:-1:-1;392:33:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;392:33:11;;;;;;;;;;;-1:-1:-1;;;392:33:11;;;;;-1:-1:-1;;;392:33:11;;;;;;;;;763:25:12;;;819:2;804:18;;797:34;;;;847:18;;;840:34;;;;905:2;890:18;;883:34;;;;-1:-1:-1;;;;;992:15:12;;;986:3;971:19;;964:44;1045:15;;944:3;1024:19;;1017:44;1098:15;1092:3;1077:19;;1070:44;1158:14;1151:22;1145:3;1130:19;;1123:51;1218:14;1211:22;1205:3;1190:19;;1183:51;750:3;735:19;392:33:11;;;;;;;;4743:492;;;;;;:::i;:::-;;:::i;:::-;;2170:266;;;;;;;;;;-1:-1:-1;2170:266:11;;;;;:::i;:::-;;:::i;4166:518::-;;;;;;:::i;:::-;;:::i;431:44::-;;;;;;;;;;-1:-1:-1;431:44:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;431:44:11;;;;;;;;;;;-1:-1:-1;;;431:44:11;;;;;-1:-1:-1;;;431:44:11;;;;;5691:811;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3620:539::-;;;;;;:::i;:::-;;:::i;5337:347::-;;;;;;;;;;;;;:::i;:::-;;;3929:25:12;;;3917:2;3902:18;5337:347:11;3783:177:12;2488:617:11;;;;;;;;;;;;;:::i;5242:88::-;;;;;;;;;;-1:-1:-1;5313:10:11;;5242:88;;4743:492;4798:15;4816:9;;;:4;:9;;;;;4844:11;;;;-1:-1:-1;;;4844:11:11;;;;:19;;4859:4;4844:19;4836:52;;;;-1:-1:-1;;;4836:52:11;;4167:2:12;4836:52:11;;;4149:21:12;4206:2;4186:18;;;4179:30;-1:-1:-1;;;4225:18:12;;;4218:50;4285:18;;4836:52:11;;;;;;;;;4920:3;4906:10;;:17;;:28;;;;;4933:1;4927:3;:7;4906:28;4898:61;;;;-1:-1:-1;;;4898:61:11;;;;;;;:::i;:::-;4991:14;;;;-1:-1:-1;;;;;4991:14:11;4977:10;:28;4969:37;;;;;;5017:11;;;:19;;-1:-1:-1;;;;5017:19:11;;;5063:9;;;;5111:14;;;;5154:15;;-1:-1:-1;;;;;5111:14:11;;;;5031:5;;5111:14;;5154:15;;;;;5063:9;;5031:5;5154:15;5031:5;5154:15;5063:9;5111:14;5154:15;;;;;;;5137:32;;5187:9;5179:40;;;;-1:-1:-1;;;5179:40:11;;4865:2:12;5179:40:11;;;4847:21:12;4904:2;4884:18;;;4877:30;-1:-1:-1;;;4923:18:12;;;4916:48;4981:18;;5179:40:11;4663:342:12;5179:40:11;4787:448;;;;4743:492;:::o;2170:266::-;11663:28:1;;;;:17;:28;;;;;;;;-1:-1:-1;;;;;11663:28:1;11649:10;:42;11641:95;;;;-1:-1:-1;;;11641:95:1;;5212:2:12;11641:95:1;;;5194:21:12;5251:2;5231:18;;;5224:30;5290:34;5270:18;;;5263:62;-1:-1:-1;;;5341:18:12;;;5334:38;5389:19;;11641:95:1;5010:404:12;11641:95:1;11749:28;;;;:17;:28;;;;;;11742:35;;-1:-1:-1;;;;;;11742:35:1;;;11788:29;11767:9;;11788:29;;;2326:47:11::1;::::0;;5593:25:12;;;5649:2;5634:18;;5627:34;;;2343:9:11;;2326:47:::1;::::0;5566:18:12;2326:47:11::1;;;;;;;-1:-1:-1::0;2383:7:11::1;:18:::0;;;;2411:7:::1;:18:::0;-1:-1:-1;2170:266:11:o;4166:518::-;4222:15;4240:9;;;:4;:9;;;;;4268:11;;;;-1:-1:-1;;;4268:11:11;;;;:19;;4283:4;4268:19;4260:52;;;;-1:-1:-1;;;4260:52:11;;4167:2:12;4260:52:11;;;4149:21:12;4206:2;4186:18;;;4179:30;-1:-1:-1;;;4225:18:12;;;4218:50;4285:18;;4260:52:11;3965:344:12;4260:52:11;4343:1;4330:10;;:14;4322:47;;;;-1:-1:-1;;;4322:47:11;;;;;;;:::i;:::-;4393:1;4387:3;:7;:28;;;;;4405:10;;4398:3;:17;;4387:28;4379:61;;;;-1:-1:-1;;;4379:61:11;;;;;;;:::i;:::-;4472:14;;;;-1:-1:-1;;;;;4472:14:11;4458:10;:28;4450:37;;;;;;4518:3;:9;;;4505;:22;;4497:31;;;;;;4547:12;;;:25;;-1:-1:-1;;;;;;4547:25:11;4562:10;4547:25;;;;;;4582:14;;;:21;;-1:-1:-1;;;;4582:21:11;-1:-1:-1;;;4582:21:11;;;4636:14;;;;4666:9;;;;4618:58;;-1:-1:-1;;;;;4636:14:11;;;;;4631:3;;4618:58;;;;3929:25:12;;3917:2;3902:18;;3783:177;4618:58:11;;;;;;;;4211:473;4166:518;:::o;5691:811::-;5740:12;5765:20;5799:10;;5788:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5788:22:11;-1:-1:-1;5765:45:11;-1:-1:-1;5820:26:11;5874:1;5861:297;5883:10;;5877:1;:16;5861:297;;5975:7;;;;:4;:7;;;;;:18;;;-1:-1:-1;;;5975:18:11;;;;:27;;;:54;;-1:-1:-1;6006:7:11;;;;:4;:7;;;;;:15;;;-1:-1:-1;;;6006:15:11;;;;:23;;6025:4;6006:23;5975:54;5972:176;;;6082:7;;;;:4;:7;;;;;:10;6050:29;;:6;;6057:21;;6050:29;;;;;;:::i;:::-;;;;;;;;;;:42;6110:23;;;;:::i;:::-;;;;5972:176;5896:3;;;;:::i;:::-;;;;5861:297;;;;6176:26;6215:21;6205:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6205:32:11;;-1:-1:-1;;6205:32:11;;;;;;;;;;;;6176:61;;6348:6;6344:107;6364:21;6360:1;:25;6344:107;;;6425:4;:15;6430:6;6437:1;6430:9;;;;;;;;:::i;:::-;;;;;;;;;;;;6425:15;;;;;;;;;;;;;-1:-1:-1;6425:15:11;6406:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6406:34:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6406:34:11;;;;;;;;;;-1:-1:-1;;;6406:34:11;;;;;;;;;;:16;;:13;;6420:1;;6406:16;;;;;;:::i;:::-;;;;;;:34;;;;6387:3;;;;;:::i;:::-;;;;6344:107;;;-1:-1:-1;6476:13:11;5691:811;-1:-1:-1;;;5691:811:11:o;3620:539::-;3737:1;3727:6;:11;;3719:48;;;;-1:-1:-1;;;3719:48:11;;6410:2:12;3719:48:11;;;6392:21:12;6449:2;6429:18;;;6422:30;6488:26;6468:18;;;6461:54;6532:18;;3719:48:11;6208:348:12;3719:48:11;3798:6;3785:9;:19;;3777:28;;;;;;3824:10;:12;;;:10;:12;;;:::i;:::-;;;;-1:-1:-1;;3865:226:11;;;;;;;;3883:10;;;3865:226;;;;;;;;;;;;;;;;;;;;;;3974:10;3865:226;;;;;;-1:-1:-1;3865:226:11;;;;;;;;;;;;4058:4;3865:226;;;;;;;;;;;;3846:16;;;:4;:16;;;;;;:245;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3846:245:11;;;-1:-1:-1;;;;;;3846:245:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3846:245:11;-1:-1:-1;;;;3846:245:11;;;-1:-1:-1;;;3846:245:11;-1:-1:-1;;;;;;3846:245:11;;;;;;;;;;;;;;;;;;;;;;;;;;4121:10;;4107:45;;3953:6;;3974:10;;4107:45;;;3620:539;;;:::o;5337:347::-;5393:4;;5472:1;5459:180;5481:10;;5475:1;:16;5459:180;;5516:7;;;;:4;:7;;;;;:18;;;-1:-1:-1;;;5516:18:11;;;;:27;;;:54;;-1:-1:-1;5547:7:11;;;;:4;:7;;;;;:15;;;-1:-1:-1;;;5547:15:11;;;;:23;;5566:4;5547:23;5516:54;5513:116;;;5591:23;;;;:::i;:::-;;;;5513:116;5494:3;;;;:::i;:::-;;;;5459:180;;;-1:-1:-1;5656:21:11;5337:347;-1:-1:-1;5337:347:11:o;2488:617::-;2534:22;:20;:22::i;:::-;2574:7;;2585:1;2574:12;:28;;;;2590:7;;2601:1;2590:12;2574:28;2566:37;;;;;;2627:1;2614:484;2635:10;;2630:1;:15;2614:484;;2696:13;;2678:7;;;;:4;:7;;;;;:14;;;:31;2674:414;;2735:7;;;;:4;:7;;;;;:18;;;:23;:39;;;;-1:-1:-1;2762:7:11;;:12;2735:39;2734:86;;;-1:-1:-1;2780:7:11;;;;:4;:7;;;;;:18;;;2802:1;2780:23;:39;;;;;2807:7;;2818:1;2807:12;2780:39;2730:164;;;2856:7;;;;:4;:7;;;;;:18;;;2843:32;;2853:1;;-1:-1:-1;;;;;2856:18:11;2843:9;:32::i;:::-;2917:7;;;;:4;:7;;;;;:18;;;:23;:39;;;;;2944:7;;2955:1;2944:12;2917:39;2916:86;;;-1:-1:-1;2962:7:11;;;;:4;:7;;;;;:18;;;2984:1;2962:23;:39;;;;-1:-1:-1;2989:7:11;;:12;2962:39;2912:162;;;3038:7;;;;:4;:7;;;;;:16;;;3025:30;;3035:1;;-1:-1:-1;;;;;3038:16:11;3025:9;:30::i;:::-;2647:3;;;;:::i;:::-;;;;2614:484;;;;2488:617::o;1649:514::-;1701:28;1732:86;1754:13;;1777:4;1784:33;;;1732:21;:86::i;:::-;1701:117;;1828:131;;;;;;;;;;;;;;-1:-1:-1;;;1828:131:11;;;;;;;;;;;;;;;;;;;;:3;;:131;:7;:131::i;:::-;1969:26;;;;;;;;;;;;;;-1:-1:-1;;;1969:26:11;;;;;;;;;;;;;;;;-1:-1:-1;;;1969:26:11;;;:3;:7;;:26;;;;;:::i;:::-;2005;;;;;;;;;;;;;;-1:-1:-1;;;2005:26:11;;;;;;;;;;;;;;;;-1:-1:-1;;;2005:26:11;;;:3;:7;;:26;;;;;:::i;:::-;2041:28;;;;;;;;;;;;;;-1:-1:-1;;;2041:28:11;;;;;;;;;;;;;;;;-1:-1:-1;;;2041:28:11;;;:3;:7;;:28;;;;;:::i;:::-;2079;;;;;;;;;;;;;;-1:-1:-1;;;2079:28:11;;;;;;;;;;;;;;;;-1:-1:-1;;;2079:28:11;;;:3;:7;;:28;;;;;:::i;:::-;2117:39;2137:3;2142:13;;2117:19;:39::i;:::-;;1690:473;1649:514::o;3156:428::-;3222:8;;;;:4;:8;;;;;:16;;;-1:-1:-1;;;3222:16:11;;;;:25;;:57;;-1:-1:-1;3251:8:11;;;;:4;:8;;;;;:19;;;-1:-1:-1;;;3251:19:11;;;;:28;3222:57;3218:94;;;3156:428;;:::o;3218:94::-;3330:8;;;;:4;:8;;;;;:15;;;:21;;-1:-1:-1;;;;;;3361:24:11;-1:-1:-1;;;;;3330:21:11;;3361:24;;;3421:14;;;:18;;3438:1;3421:18;:::i;:::-;3510:15;;3404:35;;-1:-1:-1;3478:3:11;;3449:18;;-1:-1:-1;;;;;3510:7:11;;;:15;;;;;3404:35;;3449:18;3510:15;3449:18;3510:15;3404:35;3510:7;:15;;;;;;;3493:32;;3543:9;3535:40;;;;-1:-1:-1;;;3535:40:11;;4865:2:12;3535:40:11;;;4847:21:12;4904:2;4884:18;;;4877:30;-1:-1:-1;;;4923:18:12;;;4916:48;4981:18;;3535:40:11;4663:342:12;1850:283:1;1992:24;;:::i;:::-;2024:28;;:::i;:::-;2065:63;:3;2080:6;2088:12;2102:25;2065:14;:63::i;:::-;2058:70;1850:283;-1:-1:-1;;;;;1850:283:1:o;1951:175:0:-;2061:8;;;;:26;;2083:3;2061:21;:26::i;:::-;2093:8;;;;:28;;2115:5;2093:21;:28::i;:::-;1951:175;;;:::o;4804::1:-;4950:8;;4898:7;;4920:54;;-1:-1:-1;;;;;4950:8:1;4961:3;4966:7;4920:21;:54::i;:::-;4913:61;;4804:175;;;;;:::o;987:351:0:-;1129:24;;:::i;:::-;1161:49;1182:4;:8;;;361:3;1161:20;:49::i;:::-;-1:-1:-1;;1216:15:0;;;-1:-1:-1;;;;;1237:35:0;;:20;;;:35;-1:-1:-1;;;;;;1278:38:0;;:23;;;:38;1216:4;987:351;;;;;;;:::o;2777:204:9:-;2875:71;2894:3;383:1;2931:5;2925:19;2875:18;:71::i;:::-;2952:24;:3;2969:5;2952:10;:24::i;5550:730:1:-;5726:14;;5685:17;;5763:9;5726:14;5771:1;5763:9;:::i;:::-;5746:14;:26;6101:6;;6115:22;;;;;6187:7;;;;:11;5808:396;;5778:27;;-1:-1:-1;;;5838:42:1;5808:396;;5778:27;;;;6101:6;6145:5;;891:1;;6187:11;5808:396;;;:::i;:::-;;;;-1:-1:-1;;5808:396:1;;;;;;;;;;;;;;-1:-1:-1;;;;;5808:396:1;-1:-1:-1;;;;;;5808:396:1;;;;;;;;;;;-1:-1:-1;6217:58:1;6229:13;6244:5;6251:7;5808:396;6217:11;:58::i;:::-;6210:65;5550:730;-1:-1:-1;;;;;;5550:730:1:o;1001:399:8:-;-1:-1:-1;;;;;;;;;;;;;;;;;1100:13:8;1111:2;1100:8;:13;:::i;:::-;:18;1096:71;;1146:13;1157:2;1146:8;:13;:::i;:::-;1140:20;;:2;:20;:::i;:::-;1128:32;;;;:::i;:::-;;;1096:71;-1:-1:-1;1214:12:8;;;;:23;;;1277:4;1271:11;;1289:16;;;-1:-1:-1;1312:14:8;;1354:18;;;1346:27;1333:41;;1214:12;1001:399::o;682:625:9:-;803:2;794:5;:11;;;791:512;;815:44;:3;837:20;847:1;838:10;;;837:20;;;815:15;:44::i;:::-;;1951:175:0;;;:::o;791:512:9:-;885:4;876:5;:13;;;872:431;;899:41;:3;936:2;922:10;931:1;922:10;;;;921:17;899:15;:41::i;:::-;-1:-1:-1;948:23:9;:3;:23;;;969:1;948:13;:23::i;872:431::-;997:6;988:5;:15;;;984:319;;1013:41;:3;1050:2;1036:10;1045:1;1036:10;;;;1035:17;1013:15;:41::i;:::-;-1:-1:-1;1062:23:9;:3;:23;;;1083:1;1062:13;:23::i;984:319::-;1111:10;1102:5;:19;;;1098:205;;1131:41;:3;1168:2;1154:10;1163:1;1154:10;;;;1153:17;1131:15;:41::i;:::-;-1:-1:-1;1180:23:9;:3;:23;;;1201:1;1180:13;:23::i;1098:205::-;1224:41;:3;1261:2;1247:10;1256:1;1247:10;;;;1246:17;1224:15;:41::i;:::-;-1:-1:-1;1273:23:9;:3;:23;;;1294:1;1273:13;:23::i;4692:155:8:-;-1:-1:-1;;;;;;;;;;;;;;;;;4797:45:8;4803:3;4808;:7;;;:14;4824:4;4830;:11;4797:5;:45::i;6629:430:1:-;6818:29;;-1:-1:-1;;6835:4:1;8543:2:12;8539:15;8535:53;6818:29:1;;;8523:66:12;8605:12;;;8598:28;;;6771:17:1;;8642:12:12;;6818:29:1;;;;;;-1:-1:-1;;6818:29:1;;;;;;6808:40;;6818:29;6808:40;;;;6854:28;;;;:17;:28;;;;;;:44;;-1:-1:-1;;;;;;6854:44:1;-1:-1:-1;;;;;6854:44:1;;;;;6808:40;;-1:-1:-1;6808:40:1;;6909:29;;6854:28;6909:29;6952:6;;:62;;-1:-1:-1;;;6952:62:1;;-1:-1:-1;;;;;6952:6:1;;;;:22;;:62;;6975:13;;6990:7;;6999:14;;6952:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6944:110;;;;-1:-1:-1;;;6944:110:1;;9539:2:12;6944:110:1;;;9521:21:12;9578:2;9558:18;;;9551:30;9617:34;9597:18;;;9590:62;-1:-1:-1;;;9668:18:12;;;9661:33;9711:19;;6944:110:1;9337:399:12;6040:145:8;-1:-1:-1;;;;;;;;;;;;;;;;;6143:37:8;6154:3;6159;:7;;;:14;6175:4;6143:10;:37::i;9894:177::-;-1:-1:-1;;;;;;;;;;;;;;;;;10026:40:8;10035:3;10040;:7;;;:14;10056:4;10062:3;10026:8;:40::i;2745:1210::-;-1:-1:-1;;;;;;;;;;;;;;;;;2903:4:8;:11;2896:3;:18;;2888:27;;;;;;2938:12;;;;2926:9;2932:3;2926;:9;:::i;:::-;:24;2922:90;;;2960:45;2967:3;2972:28;2976:3;:12;;;2996:3;2990;:9;;;;:::i;:::-;2972:3;:28::i;:::-;:32;;3003:1;2972:32;:::i;:::-;2960:6;:45::i;:::-;3018:12;3036:11;3133:3;3127:10;3204:6;3198:13;3320:3;3315:2;3307:6;3303:15;3299:25;3291:33;;3404:6;3398:3;3393;3389:13;3386:25;3383:76;;;3446:3;3441;3437:13;3429:6;3422:29;3383:76;-1:-1:-1;;;3483:2:8;3473:13;;3544:129;3558:2;3551:3;:9;3544:129;;3613:10;;3600:24;;3639:10;3647:2;3607:4;3639:10;:::i;:::-;;-1:-1:-1;3657:9:8;3664:2;3657:9;;:::i;:::-;;-1:-1:-1;3562:9:8;3569:2;3562:9;;:::i;:::-;;;3544:129;;;3807:10;3858:11;;-1:-1:-1;;3747:2:8;:8;;;3741:3;:15;3740:21;3854:22;;;3819:9;;3803:26;;;;3898:21;3885:35;;-1:-1:-1;3947:3:8;2745:1210;;;;;;:::o;5148:639::-;-1:-1:-1;;;;;;;;;;;;;;;;;5283:3:8;:12;;;5276:3;:19;5272:69;;5305:29;5312:3;5317;:12;;;5332:1;5317:16;;;;:::i;5305:29::-;5427:3;5421:10;5498:6;5492:13;5610:2;5604:3;5596:6;5592:16;5588:25;5634:4;5628;5620:19;;5705:6;5700:3;5697:15;5694:67;;5750:1;5742:6;5738:14;5730:6;5723:30;5694:67;-1:-1:-1;5779:3:8;;5148:639;-1:-1:-1;;;;5148:639:8:o;8974:675::-;-1:-1:-1;;;;;;;;;;;;;;;;;9130:12:8;;;;9118:9;9124:3;9118;:9;:::i;:::-;:24;9114:73;;;9152:28;9159:3;9165:9;9171:3;9165;:9;:::i;9152:28::-;9193:12;9221:1;9209:8;9214:3;9209;:8;:::i;:::-;9208:14;;;;:::i;:::-;9193:29;;9308:3;9302:10;9423:3;9417;9409:6;9405:16;9401:26;9479:4;9471;9467:9;9460:4;9454:11;9450:27;9447:37;9441:4;9434:51;;9567:6;9561:13;9555:3;9550;9546:13;9543:32;9540:83;;;9610:3;9605;9601:13;9593:6;9586:29;9540:83;-1:-1:-1;9641:3:8;;8974:675;-1:-1:-1;;;;;8974:675:8:o;1961:124::-;2018:7;2041:1;2037;:5;2033:34;;;-1:-1:-1;2059:1:8;2052:8;;1801:156;1895:7;;1908:19;1895:3;1918:8;1908:4;:19::i;:::-;;1933;1940:3;1945:6;1933;:19::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:180:12:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:12;;14:180;-1:-1:-1;14:180:12:o;1245:316::-;1322:6;1330;1338;1391:2;1379:9;1370:7;1366:23;1362:32;1359:52;;;1407:1;1404;1397:12;1359:52;-1:-1:-1;;1430:23:12;;;1500:2;1485:18;;1472:32;;-1:-1:-1;1551:2:12;1536:18;;;1523:32;;1245:316;-1:-1:-1;1245:316:12:o;1566:286::-;1625:6;1678:2;1666:9;1657:7;1653:23;1649:32;1646:52;;;1694:1;1691;1684:12;1646:52;1720:23;;-1:-1:-1;;;;;1772:31:12;;1762:42;;1752:70;;1818:1;1815;1808:12;1752:70;1841:5;1566:286;-1:-1:-1;;;1566:286:12:o;1857:1600::-;2066:2;2118:21;;;2188:13;;2091:18;;;2210:22;;;2037:4;;2066:2;2251;;2269:18;;;;2310:15;;;2037:4;2353:1078;2367:6;2364:1;2361:13;2353:1078;;;2426:13;;2464:9;;2452:22;;2514:11;;;2508:18;2494:12;;;2487:40;2567:11;;;2561:18;2547:12;;;2540:40;2603:4;2647:11;;;2641:18;2627:12;;;2620:40;2683:4;2726:11;;;2720:18;-1:-1:-1;;;;;2814:21:12;;;2800:12;;;2793:43;;;;2769:3;2907:11;;;2901:18;2897:27;;2883:12;;;2876:49;2948:4;2993:11;;;2987:18;265:31;;;3053:12;;;253:44;3089:4;3134:11;;;3128:18;378:13;371:21;3191:12;;;359:34;3228:6;3275:12;;;3269:19;378:13;371:21;3333:13;;;359:34;3376:6;3367:16;;;;3406:15;;;;2389:1;2382:9;2353:1078;;;-1:-1:-1;3448:3:12;;1857:1600;-1:-1:-1;;;;;;;1857:1600:12:o;4314:344::-;4516:2;4498:21;;;4555:2;4535:18;;;4528:30;-1:-1:-1;;;4589:2:12;4574:18;;4567:50;4649:2;4634:18;;4314:344::o;5672:127::-;5733:10;5728:3;5724:20;5721:1;5714:31;5764:4;5761:1;5754:15;5788:4;5785:1;5778:15;5804:127;5865:10;5860:3;5856:20;5853:1;5846:31;5896:4;5893:1;5886:15;5920:4;5917:1;5910:15;5936:127;5997:10;5992:3;5988:20;5985:1;5978:31;6028:4;6025:1;6018:15;6052:4;6049:1;6042:15;6068:135;6107:3;6128:17;;;6125:43;;6148:18;;:::i;:::-;-1:-1:-1;6195:1:12;6184:13;;6068:135::o;6561:168::-;6634:9;;;6665;;6682:15;;;6676:22;;6662:37;6652:71;;6703:18;;:::i;6734:125::-;6799:9;;;6820:10;;;6817:36;;;6833:18;;:::i;6864:422::-;6905:3;6943:5;6937:12;6970:6;6965:3;6958:19;6995:1;7005:162;7019:6;7016:1;7013:13;7005:162;;;7081:4;7137:13;;;7133:22;;7127:29;7109:11;;;7105:20;;7098:59;7034:12;7005:162;;;7009:3;7212:1;7205:4;7196:6;7191:3;7187:16;7183:27;7176:38;7275:4;7268:2;7264:7;7259:2;7251:6;7247:15;7243:29;7238:3;7234:39;7230:50;7223:57;;;6864:422;;;;:::o;7291:699::-;7633:1;7629;7624:3;7620:11;7616:19;7608:6;7604:32;7593:9;7586:51;7673:6;7668:2;7657:9;7653:18;7646:34;7716:6;7711:2;7700:9;7696:18;7689:34;7780:10;7775:3;7771:20;7763:6;7759:33;7754:2;7743:9;7739:18;7732:61;7830:6;7824:3;7813:9;7809:19;7802:35;7874:6;7868:3;7857:9;7853:19;7846:35;7918:3;7912;7901:9;7897:19;7890:32;7567:4;7939:45;7979:3;7968:9;7964:19;7956:6;7939:45;:::i;:::-;7931:53;7291:699;-1:-1:-1;;;;;;;;;7291:699:12:o;7995:209::-;8027:1;8053;8043:132;;8097:10;8092:3;8088:20;8085:1;8078:31;8132:4;8129:1;8122:15;8160:4;8157:1;8150:15;8043:132;-1:-1:-1;8189:9:12;;7995:209::o;8209:128::-;8276:9;;;8297:11;;;8294:37;;;8311:18;;:::i;8665:385::-;8897:1;8893;8888:3;8884:11;8880:19;8872:6;8868:32;8857:9;8850:51;8937:6;8932:2;8921:9;8917:18;8910:34;8980:2;8975;8964:9;8960:18;8953:30;8831:4;9000:44;9040:2;9029:9;9025:18;9017:6;9000:44;:::i;9055:277::-;9122:6;9175:2;9163:9;9154:7;9150:23;9146:32;9143:52;;;9191:1;9188;9181:12;9143:52;9223:9;9217:16;9276:5;9269:13;9262:21;9255:5;9252:32;9242:60;;9298:1;9295;9288:12;9741:422;9830:1;9873:5;9830:1;9887:270;9908:7;9898:8;9895:21;9887:270;;;9967:4;9963:1;9959:6;9955:17;9949:4;9946:27;9943:53;;;9976:18;;:::i;:::-;10026:7;10016:8;10012:22;10009:55;;;10046:16;;;;10009:55;10125:22;;;;10085:15;;;;9887:270;;;9891:3;9741:422;;;;;:::o;10168:806::-;10217:5;10247:8;10237:80;;-1:-1:-1;10288:1:12;10302:5;;10237:80;10336:4;10326:76;;-1:-1:-1;10373:1:12;10387:5;;10326:76;10418:4;10436:1;10431:59;;;;10504:1;10499:130;;;;10411:218;;10431:59;10461:1;10452:10;;10475:5;;;10499:130;10536:3;10526:8;10523:17;10520:43;;;10543:18;;:::i;:::-;-1:-1:-1;;10599:1:12;10585:16;;10614:5;;10411:218;;10713:2;10703:8;10700:16;10694:3;10688:4;10685:13;10681:36;10675:2;10665:8;10662:16;10657:2;10651:4;10648:12;10644:35;10641:77;10638:159;;;-1:-1:-1;10750:19:12;;;10782:5;;10638:159;10829:34;10854:8;10848:4;10829:34;:::i;:::-;10899:6;10895:1;10891:6;10887:19;10878:7;10875:32;10872:58;;;10910:18;;:::i;:::-;10948:20;;10168:806;-1:-1:-1;;;10168:806:12:o;10979:131::-;11039:5;11068:36;11095:8;11089:4;11068:36;:::i",
	"language": "Solidity",
	"natspec": {
	  "kind": "dev",
	  "methods": {},
	  "version": 1
	},
	"offset": [
	  120,
	  6509
	],
	"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A7B8918 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9A7B8918 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xAC53D35E EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xBC21CA0E EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xC738F5E3 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xF222D0B9 EQ PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x22AF00FA EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x357401F5 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x6B42E3B5 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x6C0C27E1 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x8F17AA89 EQ PUSH2 0x1B1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x111 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1599 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP3 AND SWAP2 DUP2 AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV AND DUP10 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE SWAP7 DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP8 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 DUP8 ADD MSTORE DUP2 AND PUSH1 0xA0 DUP7 ADD MSTORE AND PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x1599 JUMP JUMPDEST PUSH2 0x2AE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x15B2 JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH2 0x17C PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1599 JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x111 PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP3 AND SWAP2 DUP2 AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV AND DUP10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x652 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x160E JUMP JUMPDEST PUSH2 0x17C PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x15B2 JUMP JUMPDEST PUSH2 0x8D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x160 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH2 0xAE8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x276 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x318 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151A194818995D081DD85CC818D85B98D95B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x9 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x32A JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x346 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30F SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 DUP2 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 DUP5 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP SWAP1 POP DUP1 PUSH2 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151C985B9CD858DD1A5BDB8811985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F75726365206D75737420626520746865206F7261636C65206F6620746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x81C995C5D595CDD PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP3 SWAP2 PUSH32 0x7CC135E0CEBB02C3480AE5D74D377283180A2601F8F644EDF7987B009316C63A SWAP2 LOG2 PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP6 SWAP2 PUSH32 0x29D1FD44CC39A4213A364818C158187934866B333B04A59815CDF69B58C809C0 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x6 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x7 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x556 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151A194818995D081DD85CC818D85B98D95B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD GT PUSH2 0x578 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30F SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x58A JUMPI POP PUSH1 0x9 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30F SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x5BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD CALLVALUE LT ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP6 SWAP2 PUSH32 0x5394EDF3DC91F34510AD8B3C082C8A370AD8EE677A618697D8605CEEB76957B SWAP2 PUSH2 0x646 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x9 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x671 JUMPI PUSH2 0x671 PUSH2 0x16EB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x69A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 JUMPDEST PUSH1 0x9 SLOAD DUP2 GT PUSH2 0x744 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x6F1 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ JUMPDEST ISZERO PUSH2 0x732 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x719 JUMPI PUSH2 0x719 PUSH2 0x1701 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP2 PUSH2 0x72E DUP2 PUSH2 0x172D JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x73C DUP2 PUSH2 0x172D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6A2 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x760 JUMPI PUSH2 0x760 PUSH2 0x16EB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7D7 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD MSTORE DUP3 MSTORE PUSH1 0x0 NOT SWAP1 SWAP3 ADD SWAP2 ADD DUP2 PUSH2 0x77E JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x8CB JUMPI PUSH1 0xC PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7FB JUMPI PUSH2 0x7FB PUSH2 0x1701 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 KECCAK256 DUP2 MLOAD PUSH2 0x120 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD DUP2 AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 SWAP1 SWAP2 ADD SLOAD SWAP1 DUP2 AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x8AD JUMPI PUSH2 0x8AD PUSH2 0x1701 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x8C3 SWAP1 PUSH2 0x172D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7DD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 LT ISZERO PUSH2 0x924 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E696D756D2070726963652069732031204D617469630000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30F JUMP JUMPDEST DUP2 CALLVALUE LT ISZERO PUSH2 0x931 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x941 DUP4 PUSH2 0x172D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x9 DUP1 SLOAD DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP7 DUP2 MSTORE DUP5 DUP7 ADD DUP10 DUP2 MSTORE PUSH1 0x60 DUP7 ADD DUP10 DUP2 MSTORE CALLER PUSH1 0x80 DUP9 ADD DUP2 DUP2 MSTORE PUSH1 0x0 PUSH1 0xA0 DUP11 ADD DUP2 DUP2 MSTORE PUSH1 0xC0 DUP12 ADD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0xE0 DUP14 ADD DUP2 DUP2 MSTORE PUSH2 0x100 DUP15 ADD DUP6 DUP2 MSTORE SWAP12 DUP6 MSTORE PUSH1 0xC SWAP1 SWAP11 MSTORE DUP14 DUP5 KECCAK256 SWAP13 MLOAD DUP14 SSTORE SWAP8 MLOAD SWAP8 DUP13 ADD SWAP8 SWAP1 SWAP8 SSTORE SWAP5 MLOAD PUSH1 0x2 DUP12 ADD SSTORE SWAP3 MLOAD PUSH1 0x3 DUP11 ADD SSTORE MLOAD PUSH1 0x4 DUP10 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE SWAP4 MLOAD PUSH1 0x5 DUP11 ADD DUP1 SLOAD SWAP2 DUP4 AND SWAP2 SWAP1 SWAP6 AND OR SWAP1 SWAP4 SSTORE SWAP3 MLOAD PUSH1 0x6 SWAP1 SWAP8 ADD DUP1 SLOAD SWAP5 MLOAD SWAP6 MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP7 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP7 AND SWAP9 SWAP1 SWAP4 AND SWAP8 SWAP1 SWAP8 OR SWAP4 SWAP1 SWAP4 OR SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP4 SSTORE SWAP1 SLOAD SWAP3 MLOAD DUP6 SWAP4 SWAP2 SWAP3 PUSH32 0x8AC3A030ABE983D724DC055182198435D38E966970592F8AB4015E6B0EACB62A SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 JUMPDEST PUSH1 0x9 SLOAD DUP2 GT PUSH2 0xAE2 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xABD JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ JUMPDEST ISZERO PUSH2 0xAD0 JUMPI DUP2 PUSH2 0xACC DUP2 PUSH2 0x172D JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0xADA DUP2 PUSH2 0x172D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA6E JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF0 PUSH2 0xC2D JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 EQ DUP1 PUSH2 0xB03 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 EQ JUMPDEST PUSH2 0xB0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x9 SLOAD DUP2 GT PUSH2 0xC2A JUMPI PUSH1 0x8 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0xC18 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD ISZERO DUP1 ISZERO PUSH2 0xB51 JUMPI POP PUSH1 0x7 SLOAD ISZERO JUMPDEST DUP1 PUSH2 0xB7A JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xB7A JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 EQ JUMPDEST ISZERO PUSH2 0xBA5 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0xBA5 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD ISZERO DUP1 ISZERO PUSH2 0xBC6 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 EQ JUMPDEST DUP1 PUSH2 0xBED JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xBED JUMPI POP PUSH1 0x7 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0xC18 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0xC18 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDD9 JUMP JUMPDEST DUP1 PUSH2 0xC22 DUP2 PUSH2 0x172D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB0F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC43 PUSH1 0xA SLOAD ADDRESS PUSH4 0x6B42E3B5 PUSH1 0xE0 SHL PUSH2 0xECD JUMP JUMPDEST SWAP1 POP PUSH2 0xC85 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x19D95D PUSH1 0xEA SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x71 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197A PUSH1 0x71 SWAP2 CODECOPY DUP4 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH2 0xCD5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x7061746831 PUSH1 0xD8 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x302C4E616D65 PUSH1 0xD0 SHL DUP2 MSTORE POP DUP4 PUSH2 0xEF2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD25 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x3830BA3419 PUSH1 0xD9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x302C57696E73 PUSH1 0xD0 SHL DUP2 MSTORE POP DUP4 PUSH2 0xEF2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD77 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x7061746833 PUSH1 0xD8 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x302C4C6F73736573 PUSH1 0xC0 SHL DUP2 MSTORE POP DUP4 PUSH2 0xEF2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xDC9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x1C185D1A0D PUSH1 0xDA SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0xC0B11D85B595251 PUSH1 0xC2 SHL DUP2 MSTORE POP DUP4 PUSH2 0xEF2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xDD5 DUP2 PUSH1 0xB SLOAD PUSH2 0xF15 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0xE1A JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xE23 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE PUSH1 0x3 ADD SLOAD PUSH2 0xE5D SWAP1 PUSH1 0x2 PUSH2 0x1746 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 DUP5 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP SWAP1 POP DUP1 PUSH2 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151C985B9CD858DD1A5BDB8811985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30F JUMP JUMPDEST PUSH2 0xED5 PUSH2 0x155E JUMP JUMPDEST PUSH2 0xEDD PUSH2 0x155E JUMP JUMPDEST PUSH2 0xEE9 DUP2 DUP7 DUP7 DUP7 PUSH2 0xF38 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xF01 SWAP1 DUP4 PUSH2 0xF7E JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xF10 SWAP1 DUP3 PUSH2 0xF7E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xF2F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH2 0xF95 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF40 PUSH2 0x155E JUMP JUMPDEST PUSH2 0xF50 DUP6 PUSH1 0x80 ADD MLOAD PUSH2 0x100 PUSH2 0x1026 JUMP JUMPDEST POP POP DUP3 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x40 DUP6 ADD MSTORE DUP4 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xF8B DUP3 PUSH1 0x3 DUP4 MLOAD PUSH2 0x108B JUMP JUMPDEST PUSH2 0xF10 DUP3 DUP3 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xFA6 DUP2 PUSH1 0x1 PUSH2 0x175D JUMP JUMPDEST PUSH1 0x4 SSTORE DUP4 MLOAD PUSH1 0x40 DUP1 DUP7 ADD MLOAD PUSH1 0x80 DUP8 ADD MLOAD MLOAD SWAP2 MLOAD PUSH1 0x0 SWAP4 PUSH4 0x3C6D41B9 PUSH1 0xE0 SHL SWAP4 PUSH2 0xFDC SWAP4 DUP7 SWAP4 DUP5 SWAP4 SWAP3 DUP10 SWAP2 PUSH1 0x2 SWAP2 SWAP1 PUSH1 0x24 ADD PUSH2 0x17B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP1 POP PUSH2 0x101C DUP7 DUP4 DUP7 DUP5 PUSH2 0x11C7 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1046 PUSH1 0x20 DUP4 PUSH2 0x180B JUMP JUMPDEST ISZERO PUSH2 0x106E JUMPI PUSH2 0x1056 PUSH1 0x20 DUP4 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x1061 SWAP1 PUSH1 0x20 PUSH2 0x182D JUMP JUMPDEST PUSH2 0x106B SWAP1 DUP4 PUSH2 0x175D JUMP JUMPDEST SWAP2 POP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP6 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 SWAP3 ADD ADD SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x17 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x10B6 JUMPI PUSH2 0x10B0 DUP4 PUSH1 0xE0 PUSH1 0x5 DUP6 SWAP1 SHL AND DUP4 OR PUSH2 0x1325 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xFF DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x10F4 JUMPI PUSH2 0x10DD DUP4 PUSH1 0x18 PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x1325 JUMP JUMPDEST POP PUSH2 0x10B0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x1 PUSH2 0x134A JUMP JUMPDEST PUSH2 0xFFFF DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x1133 JUMPI PUSH2 0x111C DUP4 PUSH1 0x19 PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x1325 JUMP JUMPDEST POP PUSH2 0x10B0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x2 PUSH2 0x134A JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x1174 JUMPI PUSH2 0x115D DUP4 PUSH1 0x1A PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x1325 JUMP JUMPDEST POP PUSH2 0x10B0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x4 PUSH2 0x134A JUMP JUMPDEST PUSH2 0x1189 DUP4 PUSH1 0x1B PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x1325 JUMP JUMPDEST POP PUSH2 0x10B0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x8 PUSH2 0x134A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xF2F DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 DUP6 MLOAD PUSH2 0x1370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT ADDRESS PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP2 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND OR SWAP1 SSTORE SWAP1 SWAP3 POP DUP3 SWAP2 PUSH32 0xB5E6E01E79F91267DC17B4E6314D5D4D03593D2CEEE0FBB452B750BD70EA5AF9 SWAP2 SWAP1 LOG2 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2000575 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x4000AEA0 SWAP1 PUSH2 0x128A SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12CD SWAP2 SWAP1 PUSH2 0x1867 JUMP JUMPDEST PUSH2 0xF76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x756E61626C6520746F207472616E73666572416E6443616C6C20746F206F7261 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x636C65 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xF2F DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 PUSH2 0x145A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xF76 DUP5 DUP6 PUSH1 0x0 ADD MLOAD MLOAD DUP6 DUP6 PUSH2 0x14B5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP3 MLOAD DUP3 GT ISZERO PUSH2 0x1393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x13A2 DUP4 DUP7 PUSH2 0x175D JUMP JUMPDEST GT ISZERO PUSH2 0x13D5 JUMPI PUSH2 0x13D5 DUP6 PUSH2 0x13C5 DUP8 PUSH1 0x20 ADD MLOAD DUP8 DUP7 PUSH2 0x13C0 SWAP2 SWAP1 PUSH2 0x175D JUMP JUMPDEST PUSH2 0x1536 JUMP JUMPDEST PUSH2 0x13D0 SWAP1 PUSH1 0x2 PUSH2 0x1746 JUMP JUMPDEST PUSH2 0x1547 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 MLOAD DUP1 MLOAD DUP8 PUSH1 0x20 DUP4 ADD ADD SWAP4 POP DUP1 DUP9 DUP8 ADD GT ISZERO PUSH2 0x13F4 JUMPI DUP8 DUP7 ADD DUP3 MSTORE JUMPDEST POP POP POP PUSH1 0x20 DUP5 ADD JUMPDEST PUSH1 0x20 DUP5 LT PUSH2 0x1434 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH2 0x1413 PUSH1 0x20 DUP4 PUSH2 0x175D JUMP JUMPDEST SWAP2 POP PUSH2 0x1420 PUSH1 0x20 DUP3 PUSH2 0x175D JUMP JUMPDEST SWAP1 POP PUSH2 0x142D PUSH1 0x20 DUP6 PUSH2 0x182D JUMP JUMPDEST SWAP4 POP PUSH2 0x13FC JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x0 NOT PUSH1 0x20 DUP7 SWAP1 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 AND SWAP1 NOT SWAP2 SWAP1 SWAP2 AND OR SWAP1 MSTORE POP DUP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x20 ADD MLOAD DUP4 LT PUSH2 0x148F JUMPI PUSH2 0x148F DUP5 DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x2 PUSH2 0x13D0 SWAP2 SWAP1 PUSH2 0x1746 JUMP JUMPDEST DUP4 MLOAD DUP1 MLOAD PUSH1 0x20 DUP6 DUP4 ADD ADD DUP5 DUP2 MSTORE8 POP DUP1 DUP6 SUB PUSH2 0x14AB JUMPI PUSH1 0x1 DUP2 ADD DUP3 MSTORE JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x14D9 DUP6 DUP5 PUSH2 0x175D JUMP JUMPDEST GT ISZERO PUSH2 0x14ED JUMPI PUSH2 0x14ED DUP6 PUSH2 0x13C5 DUP7 DUP6 PUSH2 0x175D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x14FD DUP5 PUSH2 0x100 PUSH2 0x196D JUMP JUMPDEST PUSH2 0x1507 SWAP2 SWAP1 PUSH2 0x182D JUMP JUMPDEST SWAP1 POP DUP6 MLOAD DUP4 DUP7 DUP3 ADD ADD DUP6 DUP4 NOT DUP3 MLOAD AND OR DUP2 MSTORE POP DUP1 MLOAD DUP5 DUP8 ADD GT ISZERO PUSH2 0x152B JUMPI DUP4 DUP7 ADD DUP2 MSTORE JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0xAE2 JUMPI POP DUP2 PUSH2 0xF32 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x1553 DUP4 DUP4 PUSH2 0x1026 JUMP JUMPDEST POP PUSH2 0x10B0 DUP4 DUP3 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP3 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE DUP5 MSTORE DUP4 ADD MSTORE SWAP1 PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x16B0 JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP8 ADD MSTORE PUSH1 0xC0 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP7 ADD MSTORE PUSH1 0xE0 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH2 0x100 SWAP1 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH2 0x120 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x162B JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x10995D081A5CC81B9BDD081C1D589B1A5CDA1959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x173F JUMPI PUSH2 0x173F PUSH2 0x1717 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xF32 JUMPI PUSH2 0xF32 PUSH2 0x1717 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xF32 JUMPI PUSH2 0xF32 PUSH2 0x1717 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1796 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x177A JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 AND DUP2 MSTORE DUP7 PUSH1 0x20 DUP3 ADD MSTORE DUP6 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP6 AND PUSH1 0x60 DUP3 ADD MSTORE DUP4 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xE0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x17FE PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x1770 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1828 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xF32 JUMPI PUSH2 0xF32 PUSH2 0x1717 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xEE9 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1770 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x18C4 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x18AA JUMPI PUSH2 0x18AA PUSH2 0x1717 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x18B7 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x188E JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18DB JUMPI POP PUSH1 0x1 PUSH2 0xF32 JUMP JUMPDEST DUP2 PUSH2 0x18E8 JUMPI POP PUSH1 0x0 PUSH2 0xF32 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x18FE JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1908 JUMPI PUSH2 0x1924 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xF32 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1919 JUMPI PUSH2 0x1919 PUSH2 0x1717 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xF32 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1947 JUMPI POP DUP2 DUP2 EXP PUSH2 0xF32 JUMP JUMPDEST PUSH2 0x1951 DUP4 DUP4 PUSH2 0x1889 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1965 JUMPI PUSH2 0x1965 PUSH2 0x1717 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2F DUP4 DUP4 PUSH2 0x18CC JUMP INVALID PUSH9 0x747470733A2F2F6170 PUSH10 0x2E73706F727473646174 PUSH2 0x2E69 PUSH16 0x2F76332F6E62612F73636F7265732F6A PUSH20 0x6F6E2F5465616D47616D65537461747342795365 PUSH2 0x736F PUSH15 0x2F323032332F31312F313F6B65793D CALLDATACOPY CALLDATASIZE PUSH4 0x32623536 PUSH2 0x6365 ORIGIN CODESIZE CALLVALUE CALLDATALOAD PUSH4 0x35396538 CALLVALUE PUSH7 0x33306238613838 PUSH2 0x6433 CALLDATASIZE LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x8C20 0xAE 0xC4 0x1F 0xCA CREATE DUP5 0xF9 PUSH2 0x40BA 0x25 0x21 JUMP DUP12 0x2F 0x2E 0xC3 0xD3 PUSH14 0xD6987ACFFD67EBF67CD64736F6C PUSH4 0x43000811 STOP CALLER ",
	"pcMap": {
	  "0": {
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x80"
	  },
	  "2": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "4": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "5": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x4"
	  },
	  "7": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "CALLDATASIZE",
		"path": "11"
	  },
	  "8": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "LT",
		"path": "11"
	  },
	  "9": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x91"
	  },
	  "12": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "13": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "15": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "CALLDATALOAD",
		"path": "11"
	  },
	  "16": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xE0"
	  },
	  "18": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "SHR",
		"path": "11"
	  },
	  "19": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "20": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH4",
		"path": "11",
		"value": "0x9A7B8918"
	  },
	  "25": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "GT",
		"path": "11"
	  },
	  "26": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x59"
	  },
	  "29": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "30": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "31": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH4",
		"path": "11",
		"value": "0x9A7B8918"
	  },
	  "36": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "EQ",
		"path": "11"
	  },
	  "37": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x22C"
	  },
	  "40": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "41": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "42": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH4",
		"path": "11",
		"value": "0xAC53D35E"
	  },
	  "47": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "EQ",
		"path": "11"
	  },
	  "48": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x24E"
	  },
	  "51": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "52": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "53": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH4",
		"path": "11",
		"value": "0xBC21CA0E"
	  },
	  "58": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "EQ",
		"path": "11"
	  },
	  "59": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x261"
	  },
	  "62": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "63": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "64": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH4",
		"path": "11",
		"value": "0xC738F5E3"
	  },
	  "69": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "EQ",
		"path": "11"
	  },
	  "70": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x284"
	  },
	  "73": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "74": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "75": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH4",
		"path": "11",
		"value": "0xF222D0B9"
	  },
	  "80": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "EQ",
		"path": "11"
	  },
	  "81": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x299"
	  },
	  "84": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "85": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "87": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "88": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "REVERT",
		"path": "11"
	  },
	  "89": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "90": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "91": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH4",
		"path": "11",
		"value": "0x22AF00FA"
	  },
	  "96": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "EQ",
		"path": "11"
	  },
	  "97": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x96"
	  },
	  "100": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "101": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "102": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH4",
		"path": "11",
		"value": "0x357401F5"
	  },
	  "107": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "EQ",
		"path": "11"
	  },
	  "108": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x169"
	  },
	  "111": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "112": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "113": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH4",
		"path": "11",
		"value": "0x6B42E3B5"
	  },
	  "118": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "EQ",
		"path": "11"
	  },
	  "119": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x17E"
	  },
	  "122": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "123": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "124": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH4",
		"path": "11",
		"value": "0x6C0C27E1"
	  },
	  "129": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "EQ",
		"path": "11"
	  },
	  "130": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x19E"
	  },
	  "133": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "134": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "135": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH4",
		"path": "11",
		"value": "0x8F17AA89"
	  },
	  "140": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "EQ",
		"path": "11"
	  },
	  "141": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x1B1"
	  },
	  "144": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "145": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "146": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "148": {
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "149": {
		"first_revert": true,
		"fn": null,
		"offset": [
		  120,
		  6509
		],
		"op": "REVERT",
		"path": "11"
	  },
	  "150": {
		"offset": [
		  392,
		  425
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "151": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "CALLVALUE",
		"path": "11"
	  },
	  "152": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "153": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "154": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xA2"
	  },
	  "157": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "158": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "160": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "161": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "REVERT",
		"path": "11"
	  },
	  "162": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "163": {
		"op": "POP"
	  },
	  "164": {
		"offset": [
		  392,
		  425
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x111"
	  },
	  "167": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xB1"
	  },
	  "170": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "CALLDATASIZE",
		"path": "11"
	  },
	  "171": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x4"
	  },
	  "173": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x1599"
	  },
	  "176": {
		"fn": null,
		"jump": "i",
		"offset": [
		  392,
		  425
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "177": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "178": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xC"
	  },
	  "180": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "182": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "183": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "185": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "186": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "187": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "188": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "190": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "191": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "KECCAK256",
		"path": "11"
	  },
	  "192": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "193": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "194": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x1"
	  },
	  "196": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "197": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "ADD",
		"path": "11"
	  },
	  "198": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "199": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x2"
	  },
	  "201": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "DUP4",
		"path": "11"
	  },
	  "202": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "ADD",
		"path": "11"
	  },
	  "203": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "204": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x3"
	  },
	  "206": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "DUP5",
		"path": "11"
	  },
	  "207": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "ADD",
		"path": "11"
	  },
	  "208": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "209": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x4"
	  },
	  "211": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "DUP6",
		"path": "11"
	  },
	  "212": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "ADD",
		"path": "11"
	  },
	  "213": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "214": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x5"
	  },
	  "216": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "DUP7",
		"path": "11"
	  },
	  "217": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "ADD",
		"path": "11"
	  },
	  "218": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "219": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x6"
	  },
	  "221": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "222": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SWAP7",
		"path": "11"
	  },
	  "223": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "ADD",
		"path": "11"
	  },
	  "224": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "225": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SWAP5",
		"path": "11"
	  },
	  "226": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SWAP6",
		"path": "11"
	  },
	  "227": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SWAP4",
		"path": "11"
	  },
	  "228": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SWAP5",
		"path": "11"
	  },
	  "229": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "230": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SWAP4",
		"path": "11"
	  },
	  "231": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "232": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "233": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "235": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "237": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "239": {
		"op": "SHL"
	  },
	  "240": {
		"op": "SUB"
	  },
	  "241": {
		"offset": [
		  392,
		  425
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "242": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "243": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "AND",
		"path": "11"
	  },
	  "244": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "245": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "246": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "AND",
		"path": "11"
	  },
	  "247": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "248": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "249": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "AND",
		"path": "11"
	  },
	  "250": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "251": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xFF"
	  },
	  "253": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "255": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "257": {
		"op": "SHL"
	  },
	  "258": {
		"offset": [
		  392,
		  425
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "259": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "DIV",
		"path": "11"
	  },
	  "260": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "261": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "AND",
		"path": "11"
	  },
	  "262": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "263": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "265": {
		"op": "PUSH1",
		"value": "0xA8"
	  },
	  "267": {
		"op": "SHL"
	  },
	  "268": {
		"offset": [
		  392,
		  425
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "269": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "DIV",
		"path": "11"
	  },
	  "270": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "AND",
		"path": "11"
	  },
	  "271": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "DUP10",
		"path": "11"
	  },
	  "272": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "273": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "274": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "276": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "277": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "278": {
		"op": "SWAP10"
	  },
	  "279": {
		"op": "DUP11"
	  },
	  "280": {
		"op": "MSTORE"
	  },
	  "281": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "283": {
		"op": "DUP11"
	  },
	  "284": {
		"op": "ADD"
	  },
	  "285": {
		"op": "SWAP9"
	  },
	  "286": {
		"op": "SWAP1"
	  },
	  "287": {
		"op": "SWAP9"
	  },
	  "288": {
		"op": "MSTORE"
	  },
	  "289": {
		"op": "SWAP7"
	  },
	  "290": {
		"op": "DUP9"
	  },
	  "291": {
		"op": "ADD"
	  },
	  "292": {
		"op": "SWAP6"
	  },
	  "293": {
		"op": "SWAP1"
	  },
	  "294": {
		"op": "SWAP6"
	  },
	  "295": {
		"op": "MSTORE"
	  },
	  "296": {
		"op": "PUSH1",
		"value": "0x60"
	  },
	  "298": {
		"op": "DUP8"
	  },
	  "299": {
		"op": "ADD"
	  },
	  "300": {
		"op": "SWAP4"
	  },
	  "301": {
		"op": "SWAP1"
	  },
	  "302": {
		"op": "SWAP4"
	  },
	  "303": {
		"op": "MSTORE"
	  },
	  "304": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "306": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "308": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "310": {
		"op": "SHL"
	  },
	  "311": {
		"op": "SUB"
	  },
	  "312": {
		"op": "SWAP2"
	  },
	  "313": {
		"op": "DUP3"
	  },
	  "314": {
		"op": "AND"
	  },
	  "315": {
		"op": "PUSH1",
		"value": "0x80"
	  },
	  "317": {
		"op": "DUP8"
	  },
	  "318": {
		"op": "ADD"
	  },
	  "319": {
		"op": "MSTORE"
	  },
	  "320": {
		"op": "DUP2"
	  },
	  "321": {
		"op": "AND"
	  },
	  "322": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "324": {
		"op": "DUP7"
	  },
	  "325": {
		"op": "ADD"
	  },
	  "326": {
		"op": "MSTORE"
	  },
	  "327": {
		"op": "AND"
	  },
	  "328": {
		"op": "PUSH1",
		"value": "0xC0"
	  },
	  "330": {
		"op": "DUP5"
	  },
	  "331": {
		"op": "ADD"
	  },
	  "332": {
		"op": "MSTORE"
	  },
	  "333": {
		"op": "ISZERO"
	  },
	  "334": {
		"op": "ISZERO"
	  },
	  "335": {
		"op": "PUSH1",
		"value": "0xE0"
	  },
	  "337": {
		"op": "DUP4"
	  },
	  "338": {
		"op": "ADD"
	  },
	  "339": {
		"op": "MSTORE"
	  },
	  "340": {
		"op": "ISZERO"
	  },
	  "341": {
		"op": "ISZERO"
	  },
	  "342": {
		"op": "PUSH2",
		"value": "0x100"
	  },
	  "345": {
		"op": "DUP3"
	  },
	  "346": {
		"op": "ADD"
	  },
	  "347": {
		"op": "MSTORE"
	  },
	  "348": {
		"op": "PUSH2",
		"value": "0x120"
	  },
	  "351": {
		"op": "ADD"
	  },
	  "352": {
		"offset": [
		  392,
		  425
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "353": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "355": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "356": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "357": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "358": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SUB",
		"path": "11"
	  },
	  "359": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "360": {
		"fn": null,
		"offset": [
		  392,
		  425
		],
		"op": "RETURN",
		"path": "11"
	  },
	  "361": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4743,
		  5235
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "362": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4743,
		  5235
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x17C"
	  },
	  "365": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4743,
		  5235
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x177"
	  },
	  "368": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4743,
		  5235
		],
		"op": "CALLDATASIZE",
		"path": "11"
	  },
	  "369": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4743,
		  5235
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x4"
	  },
	  "371": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4743,
		  5235
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x1599"
	  },
	  "374": {
		"fn": "BetContract.cancelBet",
		"jump": "i",
		"offset": [
		  4743,
		  5235
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "375": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4743,
		  5235
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "376": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4743,
		  5235
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x2AE"
	  },
	  "379": {
		"fn": "BetContract.cancelBet",
		"jump": "i",
		"offset": [
		  4743,
		  5235
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "380": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4743,
		  5235
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "381": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4743,
		  5235
		],
		"op": "STOP",
		"path": "11"
	  },
	  "382": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2170,
		  2436
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "383": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2170,
		  2436
		],
		"op": "CALLVALUE",
		"path": "11"
	  },
	  "384": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2170,
		  2436
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "385": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2170,
		  2436
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "386": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2170,
		  2436
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x18A"
	  },
	  "389": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2170,
		  2436
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "390": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2170,
		  2436
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "392": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2170,
		  2436
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "393": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2170,
		  2436
		],
		"op": "REVERT",
		"path": "11"
	  },
	  "394": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2170,
		  2436
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "395": {
		"op": "POP"
	  },
	  "396": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2170,
		  2436
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x17C"
	  },
	  "399": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2170,
		  2436
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x199"
	  },
	  "402": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2170,
		  2436
		],
		"op": "CALLDATASIZE",
		"path": "11"
	  },
	  "403": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2170,
		  2436
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x4"
	  },
	  "405": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2170,
		  2436
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x15B2"
	  },
	  "408": {
		"fn": "BetContract.fulfillBytesAndUint",
		"jump": "i",
		"offset": [
		  2170,
		  2436
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "409": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2170,
		  2436
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "410": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2170,
		  2436
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x3ED"
	  },
	  "413": {
		"fn": "BetContract.fulfillBytesAndUint",
		"jump": "i",
		"offset": [
		  2170,
		  2436
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "414": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4166,
		  4684
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "415": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4166,
		  4684
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x17C"
	  },
	  "418": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4166,
		  4684
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x1AC"
	  },
	  "421": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4166,
		  4684
		],
		"op": "CALLDATASIZE",
		"path": "11"
	  },
	  "422": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4166,
		  4684
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x4"
	  },
	  "424": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4166,
		  4684
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x1599"
	  },
	  "427": {
		"fn": "BetContract.acceptBet",
		"jump": "i",
		"offset": [
		  4166,
		  4684
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "428": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4166,
		  4684
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "429": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4166,
		  4684
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x4F1"
	  },
	  "432": {
		"fn": "BetContract.acceptBet",
		"jump": "i",
		"offset": [
		  4166,
		  4684
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "433": {
		"offset": [
		  431,
		  475
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "434": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "CALLVALUE",
		"path": "11"
	  },
	  "435": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "436": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "437": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x1BD"
	  },
	  "440": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "441": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "443": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "444": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "REVERT",
		"path": "11"
	  },
	  "445": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "446": {
		"op": "POP"
	  },
	  "447": {
		"offset": [
		  431,
		  475
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x111"
	  },
	  "450": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x1CC"
	  },
	  "453": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "CALLDATASIZE",
		"path": "11"
	  },
	  "454": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x4"
	  },
	  "456": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x15DE"
	  },
	  "459": {
		"fn": "BetContract.acceptBet",
		"jump": "i",
		"offset": [
		  431,
		  475
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "460": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "461": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xD"
	  },
	  "463": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "465": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "466": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "468": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "469": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "470": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "471": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "473": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "474": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "KECCAK256",
		"path": "11"
	  },
	  "475": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "476": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "477": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x1"
	  },
	  "479": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "480": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "ADD",
		"path": "11"
	  },
	  "481": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "482": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x2"
	  },
	  "484": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "DUP4",
		"path": "11"
	  },
	  "485": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "ADD",
		"path": "11"
	  },
	  "486": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "487": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x3"
	  },
	  "489": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "DUP5",
		"path": "11"
	  },
	  "490": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "ADD",
		"path": "11"
	  },
	  "491": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "492": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x4"
	  },
	  "494": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "DUP6",
		"path": "11"
	  },
	  "495": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "ADD",
		"path": "11"
	  },
	  "496": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "497": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x5"
	  },
	  "499": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "DUP7",
		"path": "11"
	  },
	  "500": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "ADD",
		"path": "11"
	  },
	  "501": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "502": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x6"
	  },
	  "504": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "505": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "SWAP7",
		"path": "11"
	  },
	  "506": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "ADD",
		"path": "11"
	  },
	  "507": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "508": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "SWAP5",
		"path": "11"
	  },
	  "509": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "SWAP6",
		"path": "11"
	  },
	  "510": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "SWAP4",
		"path": "11"
	  },
	  "511": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "SWAP5",
		"path": "11"
	  },
	  "512": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "513": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "SWAP4",
		"path": "11"
	  },
	  "514": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "515": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "516": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "518": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "520": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "522": {
		"op": "SHL"
	  },
	  "523": {
		"op": "SUB"
	  },
	  "524": {
		"offset": [
		  431,
		  475
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "525": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "526": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "AND",
		"path": "11"
	  },
	  "527": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "528": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "529": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "AND",
		"path": "11"
	  },
	  "530": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "531": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "532": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "AND",
		"path": "11"
	  },
	  "533": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "534": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xFF"
	  },
	  "536": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "538": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "540": {
		"op": "SHL"
	  },
	  "541": {
		"offset": [
		  431,
		  475
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "542": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "DIV",
		"path": "11"
	  },
	  "543": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "544": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "AND",
		"path": "11"
	  },
	  "545": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "546": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "548": {
		"op": "PUSH1",
		"value": "0xA8"
	  },
	  "550": {
		"op": "SHL"
	  },
	  "551": {
		"offset": [
		  431,
		  475
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "552": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "DIV",
		"path": "11"
	  },
	  "553": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "AND",
		"path": "11"
	  },
	  "554": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "DUP10",
		"path": "11"
	  },
	  "555": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  431,
		  475
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "556": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5691,
		  6502
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "557": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5691,
		  6502
		],
		"op": "CALLVALUE",
		"path": "11"
	  },
	  "558": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5691,
		  6502
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "559": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5691,
		  6502
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "560": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5691,
		  6502
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x238"
	  },
	  "563": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5691,
		  6502
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "564": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5691,
		  6502
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "566": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5691,
		  6502
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "567": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5691,
		  6502
		],
		"op": "REVERT",
		"path": "11"
	  },
	  "568": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5691,
		  6502
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "569": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5691,
		  6502
		],
		"op": "POP",
		"path": "11"
	  },
	  "570": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5691,
		  6502
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x241"
	  },
	  "573": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5691,
		  6502
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x652"
	  },
	  "576": {
		"fn": "BetContract.getAvailableBets",
		"jump": "i",
		"offset": [
		  5691,
		  6502
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "577": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5691,
		  6502
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "578": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5691,
		  6502
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "580": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5691,
		  6502
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "581": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5691,
		  6502
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x160"
	  },
	  "584": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5691,
		  6502
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "585": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5691,
		  6502
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "586": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5691,
		  6502
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x160E"
	  },
	  "589": {
		"fn": "BetContract.getAvailableBets",
		"jump": "i",
		"offset": [
		  5691,
		  6502
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "590": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3620,
		  4159
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "591": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3620,
		  4159
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x17C"
	  },
	  "594": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3620,
		  4159
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x25C"
	  },
	  "597": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3620,
		  4159
		],
		"op": "CALLDATASIZE",
		"path": "11"
	  },
	  "598": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3620,
		  4159
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x4"
	  },
	  "600": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3620,
		  4159
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x15B2"
	  },
	  "603": {
		"fn": "BetContract.publishBet",
		"jump": "i",
		"offset": [
		  3620,
		  4159
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "604": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3620,
		  4159
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "605": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3620,
		  4159
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x8D3"
	  },
	  "608": {
		"fn": "BetContract.publishBet",
		"jump": "i",
		"offset": [
		  3620,
		  4159
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "609": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5337,
		  5684
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "610": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5337,
		  5684
		],
		"op": "CALLVALUE",
		"path": "11"
	  },
	  "611": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5337,
		  5684
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "612": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5337,
		  5684
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "613": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5337,
		  5684
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x26D"
	  },
	  "616": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5337,
		  5684
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "617": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5337,
		  5684
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "619": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5337,
		  5684
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "620": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5337,
		  5684
		],
		"op": "REVERT",
		"path": "11"
	  },
	  "621": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5337,
		  5684
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "622": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5337,
		  5684
		],
		"op": "POP",
		"path": "11"
	  },
	  "623": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5337,
		  5684
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x276"
	  },
	  "626": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5337,
		  5684
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xA68"
	  },
	  "629": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"jump": "i",
		"offset": [
		  5337,
		  5684
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "630": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5337,
		  5684
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "631": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5337,
		  5684
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "633": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5337,
		  5684
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "634": {
		"op": "SWAP1"
	  },
	  "635": {
		"op": "DUP2"
	  },
	  "636": {
		"op": "MSTORE"
	  },
	  "637": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "639": {
		"op": "ADD"
	  },
	  "640": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5337,
		  5684
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x160"
	  },
	  "643": {
		"op": "JUMP"
	  },
	  "644": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2488,
		  3105
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "645": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2488,
		  3105
		],
		"op": "CALLVALUE",
		"path": "11"
	  },
	  "646": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2488,
		  3105
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "647": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2488,
		  3105
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "648": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2488,
		  3105
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x290"
	  },
	  "651": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2488,
		  3105
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "652": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2488,
		  3105
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "654": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2488,
		  3105
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "655": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2488,
		  3105
		],
		"op": "REVERT",
		"path": "11"
	  },
	  "656": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2488,
		  3105
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "657": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2488,
		  3105
		],
		"op": "POP",
		"path": "11"
	  },
	  "658": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2488,
		  3105
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x17C"
	  },
	  "661": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2488,
		  3105
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xAE8"
	  },
	  "664": {
		"fn": "BetContract.upkeep_setWinner",
		"jump": "i",
		"offset": [
		  2488,
		  3105
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "665": {
		"fn": "BetContract.getNumberOfBets",
		"offset": [
		  5242,
		  5330
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "666": {
		"fn": "BetContract.getNumberOfBets",
		"offset": [
		  5242,
		  5330
		],
		"op": "CALLVALUE",
		"path": "11"
	  },
	  "667": {
		"fn": "BetContract.getNumberOfBets",
		"offset": [
		  5242,
		  5330
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "668": {
		"fn": "BetContract.getNumberOfBets",
		"offset": [
		  5242,
		  5330
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "669": {
		"fn": "BetContract.getNumberOfBets",
		"offset": [
		  5242,
		  5330
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x2A5"
	  },
	  "672": {
		"fn": "BetContract.getNumberOfBets",
		"offset": [
		  5242,
		  5330
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "673": {
		"fn": "BetContract.getNumberOfBets",
		"offset": [
		  5242,
		  5330
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "675": {
		"fn": "BetContract.getNumberOfBets",
		"offset": [
		  5242,
		  5330
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "676": {
		"fn": "BetContract.getNumberOfBets",
		"offset": [
		  5242,
		  5330
		],
		"op": "REVERT",
		"path": "11"
	  },
	  "677": {
		"fn": "BetContract.getNumberOfBets",
		"offset": [
		  5242,
		  5330
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "678": {
		"op": "POP"
	  },
	  "679": {
		"fn": "BetContract.getNumberOfBets",
		"offset": [
		  5313,
		  5323
		],
		"op": "PUSH1",
		"path": "11",
		"statement": 0,
		"value": "0x9"
	  },
	  "681": {
		"fn": "BetContract.getNumberOfBets",
		"offset": [
		  5313,
		  5323
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "682": {
		"fn": "BetContract.getNumberOfBets",
		"offset": [
		  5242,
		  5330
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x276"
	  },
	  "685": {
		"fn": "BetContract.getNumberOfBets",
		"offset": [
		  5242,
		  5330
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "686": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4743,
		  5235
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "687": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4798,
		  4813
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "689": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4816,
		  4825
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "690": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4816,
		  4825
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "691": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4816,
		  4825
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "692": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4816,
		  4820
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xC"
	  },
	  "694": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4816,
		  4825
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "696": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4816,
		  4825
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "697": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4816,
		  4825
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "699": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4816,
		  4825
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "700": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4816,
		  4825
		],
		"op": "KECCAK256",
		"path": "11"
	  },
	  "701": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4844,
		  4855
		],
		"op": "PUSH1",
		"path": "11",
		"statement": 1,
		"value": "0x6"
	  },
	  "703": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4844,
		  4855
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "704": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4844,
		  4855
		],
		"op": "ADD",
		"path": "11"
	  },
	  "705": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4844,
		  4855
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "706": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "708": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "710": {
		"op": "SHL"
	  },
	  "711": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4844,
		  4855
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "712": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4844,
		  4855
		],
		"op": "DIV",
		"path": "11"
	  },
	  "713": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4844,
		  4855
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xFF"
	  },
	  "715": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4844,
		  4855
		],
		"op": "AND",
		"path": "11"
	  },
	  "716": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4844,
		  4863
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "717": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4844,
		  4863
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "718": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4859,
		  4863
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x1"
	  },
	  "720": {
		"branch": 88,
		"fn": "BetContract.cancelBet",
		"offset": [
		  4844,
		  4863
		],
		"op": "EQ",
		"path": "11"
	  },
	  "721": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4836,
		  4888
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x318"
	  },
	  "724": {
		"branch": 88,
		"fn": "BetContract.cancelBet",
		"offset": [
		  4836,
		  4888
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "725": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4836,
		  4888
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "727": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4836,
		  4888
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "728": {
		"op": "PUSH3",
		"value": "0x461BCD"
	  },
	  "732": {
		"op": "PUSH1",
		"value": "0xE5"
	  },
	  "734": {
		"op": "SHL"
	  },
	  "735": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4836,
		  4888
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "736": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4836,
		  4888
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "737": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "739": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4836,
		  4888
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x4"
	  },
	  "741": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4836,
		  4888
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "742": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4836,
		  4888
		],
		"op": "ADD",
		"path": "11"
	  },
	  "743": {
		"op": "MSTORE"
	  },
	  "744": {
		"op": "PUSH1",
		"value": "0x14"
	  },
	  "746": {
		"op": "PUSH1",
		"value": "0x24"
	  },
	  "748": {
		"op": "DUP3"
	  },
	  "749": {
		"op": "ADD"
	  },
	  "750": {
		"op": "MSTORE"
	  },
	  "751": {
		"op": "PUSH20",
		"value": "0x151A194818995D081DD85CC818D85B98D95B1959"
	  },
	  "772": {
		"op": "PUSH1",
		"value": "0x62"
	  },
	  "774": {
		"op": "SHL"
	  },
	  "775": {
		"op": "PUSH1",
		"value": "0x44"
	  },
	  "777": {
		"op": "DUP3"
	  },
	  "778": {
		"op": "ADD"
	  },
	  "779": {
		"op": "MSTORE"
	  },
	  "780": {
		"op": "PUSH1",
		"value": "0x64"
	  },
	  "782": {
		"op": "ADD"
	  },
	  "783": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4836,
		  4888
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "784": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4836,
		  4888
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "786": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4836,
		  4888
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "787": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4836,
		  4888
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "788": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4836,
		  4888
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "789": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4836,
		  4888
		],
		"op": "SUB",
		"path": "11"
	  },
	  "790": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4836,
		  4888
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "791": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4836,
		  4888
		],
		"op": "REVERT",
		"optimizer_revert": true,
		"path": "11"
	  },
	  "792": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4836,
		  4888
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "793": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4920,
		  4923
		],
		"op": "DUP2",
		"path": "11",
		"statement": 2
	  },
	  "794": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4906,
		  4916
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x9"
	  },
	  "796": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4906,
		  4916
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "797": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4906,
		  4923
		],
		"op": "LT",
		"path": "11"
	  },
	  "798": {
		"branch": 89,
		"fn": "BetContract.cancelBet",
		"offset": [
		  4906,
		  4923
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "799": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4906,
		  4934
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "800": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4906,
		  4934
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "801": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4906,
		  4934
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x32A"
	  },
	  "804": {
		"branch": 89,
		"fn": "BetContract.cancelBet",
		"offset": [
		  4906,
		  4934
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "805": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4906,
		  4934
		],
		"op": "POP",
		"path": "11"
	  },
	  "806": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4933,
		  4934
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "808": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4927,
		  4930
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "809": {
		"branch": 90,
		"fn": "BetContract.cancelBet",
		"offset": [
		  4927,
		  4934
		],
		"op": "GT",
		"path": "11"
	  },
	  "810": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4906,
		  4934
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "811": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4898,
		  4959
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x346"
	  },
	  "814": {
		"branch": 90,
		"fn": "BetContract.cancelBet",
		"offset": [
		  4898,
		  4959
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "815": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4898,
		  4959
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "817": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4898,
		  4959
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "818": {
		"op": "PUSH3",
		"value": "0x461BCD"
	  },
	  "822": {
		"op": "PUSH1",
		"value": "0xE5"
	  },
	  "824": {
		"op": "SHL"
	  },
	  "825": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4898,
		  4959
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "826": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4898,
		  4959
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "827": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4898,
		  4959
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x4"
	  },
	  "829": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4898,
		  4959
		],
		"op": "ADD",
		"path": "11"
	  },
	  "830": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4898,
		  4959
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x30F"
	  },
	  "833": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4898,
		  4959
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "834": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4898,
		  4959
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x16BD"
	  },
	  "837": {
		"fn": "BetContract.cancelBet",
		"jump": "i",
		"offset": [
		  4898,
		  4959
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "838": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4898,
		  4959
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "839": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4991,
		  5005
		],
		"op": "PUSH1",
		"path": "11",
		"statement": 3,
		"value": "0x4"
	  },
	  "841": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4991,
		  5005
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "842": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4991,
		  5005
		],
		"op": "ADD",
		"path": "11"
	  },
	  "843": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4991,
		  5005
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "844": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "846": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "848": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "850": {
		"op": "SHL"
	  },
	  "851": {
		"op": "SUB"
	  },
	  "852": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4991,
		  5005
		],
		"op": "AND",
		"path": "11"
	  },
	  "853": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4977,
		  4987
		],
		"op": "CALLER",
		"path": "11"
	  },
	  "854": {
		"branch": 91,
		"fn": "BetContract.cancelBet",
		"offset": [
		  4977,
		  5005
		],
		"op": "EQ",
		"path": "11"
	  },
	  "855": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4969,
		  5006
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x35F"
	  },
	  "858": {
		"branch": 91,
		"fn": "BetContract.cancelBet",
		"offset": [
		  4969,
		  5006
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "859": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4969,
		  5006
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "861": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4969,
		  5006
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "862": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4969,
		  5006
		],
		"op": "REVERT",
		"path": "11"
	  },
	  "863": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4969,
		  5006
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "864": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5017,
		  5028
		],
		"op": "PUSH1",
		"path": "11",
		"statement": 4,
		"value": "0x6"
	  },
	  "866": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5017,
		  5028
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "867": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5017,
		  5028
		],
		"op": "ADD",
		"path": "11"
	  },
	  "868": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5017,
		  5036
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "869": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5017,
		  5036
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "870": {
		"op": "PUSH1",
		"value": "0xFF"
	  },
	  "872": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "874": {
		"op": "SHL"
	  },
	  "875": {
		"op": "NOT"
	  },
	  "876": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5017,
		  5036
		],
		"op": "AND",
		"path": "11"
	  },
	  "877": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5017,
		  5036
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "878": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5017,
		  5036
		],
		"op": "SSTORE",
		"path": "11"
	  },
	  "879": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5063,
		  5072
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x3"
	  },
	  "881": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5063,
		  5072
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "882": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5063,
		  5072
		],
		"op": "ADD",
		"path": "11"
	  },
	  "883": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5063,
		  5072
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "884": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5111,
		  5125
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x4"
	  },
	  "886": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5111,
		  5125
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "887": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5111,
		  5125
		],
		"op": "ADD",
		"path": "11"
	  },
	  "888": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5111,
		  5125
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "889": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5154,
		  5169
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "891": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5154,
		  5169
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "892": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "894": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "896": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "898": {
		"op": "SHL"
	  },
	  "899": {
		"op": "SUB"
	  },
	  "900": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5111,
		  5125
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "901": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5111,
		  5125
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "902": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5111,
		  5125
		],
		"op": "AND",
		"path": "11"
	  },
	  "903": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5111,
		  5125
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "904": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5031,
		  5036
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "906": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5031,
		  5036
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "907": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5111,
		  5125
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "908": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5111,
		  5125
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "909": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5154,
		  5169
		],
		"op": "DUP5",
		"path": "11"
	  },
	  "910": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5154,
		  5169
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "911": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5154,
		  5169
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x8FC"
	  },
	  "914": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5154,
		  5169
		],
		"op": "MUL",
		"path": "11"
	  },
	  "915": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5154,
		  5169
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "916": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5063,
		  5072
		],
		"op": "DUP6",
		"path": "11"
	  },
	  "917": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5063,
		  5072
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "918": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5031,
		  5036
		],
		"op": "DUP5",
		"path": "11"
	  },
	  "919": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5154,
		  5169
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "920": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5031,
		  5036
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "921": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5154,
		  5169
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "922": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5063,
		  5072
		],
		"op": "DUP6",
		"path": "11"
	  },
	  "923": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5111,
		  5125
		],
		"op": "DUP9",
		"path": "11"
	  },
	  "924": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5154,
		  5169
		],
		"op": "DUP9",
		"path": "11"
	  },
	  "925": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5154,
		  5169
		],
		"op": "CALL",
		"path": "11"
	  },
	  "926": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5154,
		  5169
		],
		"op": "SWAP4",
		"path": "11"
	  },
	  "927": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5154,
		  5169
		],
		"op": "POP",
		"path": "11"
	  },
	  "928": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5154,
		  5169
		],
		"op": "POP",
		"path": "11"
	  },
	  "929": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5154,
		  5169
		],
		"op": "POP",
		"path": "11"
	  },
	  "930": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5154,
		  5169
		],
		"op": "POP",
		"path": "11"
	  },
	  "931": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5137,
		  5169
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "932": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5137,
		  5169
		],
		"op": "POP",
		"path": "11"
	  },
	  "933": {
		"branch": 92,
		"fn": "BetContract.cancelBet",
		"offset": [
		  5187,
		  5196
		],
		"op": "DUP1",
		"path": "11",
		"statement": 5
	  },
	  "934": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5179,
		  5219
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x3E6"
	  },
	  "937": {
		"branch": 92,
		"fn": "BetContract.cancelBet",
		"offset": [
		  5179,
		  5219
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "938": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5179,
		  5219
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "940": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5179,
		  5219
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "941": {
		"op": "PUSH3",
		"value": "0x461BCD"
	  },
	  "945": {
		"op": "PUSH1",
		"value": "0xE5"
	  },
	  "947": {
		"op": "SHL"
	  },
	  "948": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5179,
		  5219
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "949": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5179,
		  5219
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "950": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "952": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5179,
		  5219
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x4"
	  },
	  "954": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5179,
		  5219
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "955": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5179,
		  5219
		],
		"op": "ADD",
		"path": "11"
	  },
	  "956": {
		"op": "MSTORE"
	  },
	  "957": {
		"op": "PUSH1",
		"value": "0x12"
	  },
	  "959": {
		"op": "PUSH1",
		"value": "0x24"
	  },
	  "961": {
		"op": "DUP3"
	  },
	  "962": {
		"op": "ADD"
	  },
	  "963": {
		"op": "MSTORE"
	  },
	  "964": {
		"op": "PUSH18",
		"value": "0x151C985B9CD858DD1A5BDB8811985A5B1959"
	  },
	  "983": {
		"op": "PUSH1",
		"value": "0x72"
	  },
	  "985": {
		"op": "SHL"
	  },
	  "986": {
		"op": "PUSH1",
		"value": "0x44"
	  },
	  "988": {
		"op": "DUP3"
	  },
	  "989": {
		"op": "ADD"
	  },
	  "990": {
		"op": "MSTORE"
	  },
	  "991": {
		"op": "PUSH1",
		"value": "0x64"
	  },
	  "993": {
		"op": "ADD"
	  },
	  "994": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5179,
		  5219
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x30F"
	  },
	  "997": {
		"op": "JUMP"
	  },
	  "998": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  5179,
		  5219
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "999": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4787,
		  5235
		],
		"op": "POP",
		"path": "11"
	  },
	  "1000": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4787,
		  5235
		],
		"op": "POP",
		"path": "11"
	  },
	  "1001": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4787,
		  5235
		],
		"op": "POP",
		"path": "11"
	  },
	  "1002": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4787,
		  5235
		],
		"op": "POP",
		"path": "11"
	  },
	  "1003": {
		"fn": "BetContract.cancelBet",
		"offset": [
		  4743,
		  5235
		],
		"op": "POP",
		"path": "11"
	  },
	  "1004": {
		"fn": "BetContract.cancelBet",
		"jump": "o",
		"offset": [
		  4743,
		  5235
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "1005": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2170,
		  2436
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "1006": {
		"offset": [
		  11663,
		  11691
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x0"
	  },
	  "1008": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11663,
		  11691
		],
		"op": "DUP4",
		"path": "1"
	  },
	  "1009": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11663,
		  11691
		],
		"op": "DUP2",
		"path": "1"
	  },
	  "1010": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11663,
		  11691
		],
		"op": "MSTORE",
		"path": "1"
	  },
	  "1011": {
		"offset": [
		  11663,
		  11680
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x5"
	  },
	  "1013": {
		"offset": [
		  11663,
		  11691
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x20"
	  },
	  "1015": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11663,
		  11691
		],
		"op": "MSTORE",
		"path": "1"
	  },
	  "1016": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11663,
		  11691
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x40"
	  },
	  "1018": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11663,
		  11691
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "1019": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11663,
		  11691
		],
		"op": "KECCAK256",
		"path": "1"
	  },
	  "1020": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11663,
		  11691
		],
		"op": "SLOAD",
		"path": "1"
	  },
	  "1021": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11663,
		  11691
		],
		"op": "DUP4",
		"path": "1"
	  },
	  "1022": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11663,
		  11691
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "1023": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "1025": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "1027": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "1029": {
		"op": "SHL"
	  },
	  "1030": {
		"op": "SUB"
	  },
	  "1031": {
		"offset": [
		  11663,
		  11691
		],
		"op": "AND",
		"path": "1"
	  },
	  "1032": {
		"offset": [
		  11649,
		  11659
		],
		"op": "CALLER",
		"path": "1"
	  },
	  "1033": {
		"offset": [
		  11649,
		  11691
		],
		"op": "EQ",
		"path": "1"
	  },
	  "1034": {
		"offset": [
		  11641,
		  11736
		],
		"op": "PUSH2",
		"path": "1",
		"value": "0x466"
	  },
	  "1037": {
		"offset": [
		  11641,
		  11736
		],
		"op": "JUMPI",
		"path": "1"
	  },
	  "1038": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11641,
		  11736
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x40"
	  },
	  "1040": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11641,
		  11736
		],
		"op": "MLOAD",
		"path": "1"
	  },
	  "1041": {
		"op": "PUSH3",
		"value": "0x461BCD"
	  },
	  "1045": {
		"op": "PUSH1",
		"value": "0xE5"
	  },
	  "1047": {
		"op": "SHL"
	  },
	  "1048": {
		"offset": [
		  11641,
		  11736
		],
		"op": "DUP2",
		"path": "1"
	  },
	  "1049": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11641,
		  11736
		],
		"op": "MSTORE",
		"path": "1"
	  },
	  "1050": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "1052": {
		"offset": [
		  11641,
		  11736
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x4"
	  },
	  "1054": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11641,
		  11736
		],
		"op": "DUP3",
		"path": "1"
	  },
	  "1055": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11641,
		  11736
		],
		"op": "ADD",
		"path": "1"
	  },
	  "1056": {
		"op": "MSTORE"
	  },
	  "1057": {
		"op": "PUSH1",
		"value": "0x28"
	  },
	  "1059": {
		"op": "PUSH1",
		"value": "0x24"
	  },
	  "1061": {
		"op": "DUP3"
	  },
	  "1062": {
		"op": "ADD"
	  },
	  "1063": {
		"op": "MSTORE"
	  },
	  "1064": {
		"op": "PUSH32",
		"value": "0x536F75726365206D75737420626520746865206F7261636C65206F6620746865"
	  },
	  "1097": {
		"op": "PUSH1",
		"value": "0x44"
	  },
	  "1099": {
		"op": "DUP3"
	  },
	  "1100": {
		"op": "ADD"
	  },
	  "1101": {
		"op": "MSTORE"
	  },
	  "1102": {
		"op": "PUSH8",
		"value": "0x81C995C5D595CDD"
	  },
	  "1111": {
		"op": "PUSH1",
		"value": "0xC2"
	  },
	  "1113": {
		"op": "SHL"
	  },
	  "1114": {
		"op": "PUSH1",
		"value": "0x64"
	  },
	  "1116": {
		"op": "DUP3"
	  },
	  "1117": {
		"op": "ADD"
	  },
	  "1118": {
		"op": "MSTORE"
	  },
	  "1119": {
		"op": "PUSH1",
		"value": "0x84"
	  },
	  "1121": {
		"op": "ADD"
	  },
	  "1122": {
		"offset": [
		  11641,
		  11736
		],
		"op": "PUSH2",
		"path": "1",
		"value": "0x30F"
	  },
	  "1125": {
		"op": "JUMP"
	  },
	  "1126": {
		"offset": [
		  11641,
		  11736
		],
		"op": "JUMPDEST",
		"path": "1"
	  },
	  "1127": {
		"offset": [
		  11749,
		  11777
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x0"
	  },
	  "1129": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11749,
		  11777
		],
		"op": "DUP2",
		"path": "1"
	  },
	  "1130": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11749,
		  11777
		],
		"op": "DUP2",
		"path": "1"
	  },
	  "1131": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11749,
		  11777
		],
		"op": "MSTORE",
		"path": "1"
	  },
	  "1132": {
		"offset": [
		  11749,
		  11766
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x5"
	  },
	  "1134": {
		"offset": [
		  11749,
		  11777
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x20"
	  },
	  "1136": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11749,
		  11777
		],
		"op": "MSTORE",
		"path": "1"
	  },
	  "1137": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11749,
		  11777
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x40"
	  },
	  "1139": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11749,
		  11777
		],
		"op": "DUP1",
		"path": "1"
	  },
	  "1140": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11749,
		  11777
		],
		"op": "DUP3",
		"path": "1"
	  },
	  "1141": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11749,
		  11777
		],
		"op": "KECCAK256",
		"path": "1"
	  },
	  "1142": {
		"offset": [
		  11742,
		  11777
		],
		"op": "DUP1",
		"path": "1"
	  },
	  "1143": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11742,
		  11777
		],
		"op": "SLOAD",
		"path": "1"
	  },
	  "1144": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "1146": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "1148": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "1150": {
		"op": "SHL"
	  },
	  "1151": {
		"op": "SUB"
	  },
	  "1152": {
		"op": "NOT"
	  },
	  "1153": {
		"offset": [
		  11742,
		  11777
		],
		"op": "AND",
		"path": "1"
	  },
	  "1154": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11742,
		  11777
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "1155": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11742,
		  11777
		],
		"op": "SSTORE",
		"path": "1"
	  },
	  "1156": {
		"offset": [
		  11788,
		  11817
		],
		"op": "MLOAD",
		"path": "1"
	  },
	  "1157": {
		"offset": [
		  11767,
		  11776
		],
		"op": "DUP3",
		"path": "1"
	  },
	  "1158": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11767,
		  11776
		],
		"op": "SWAP2",
		"path": "1"
	  },
	  "1159": {
		"offset": [
		  11788,
		  11817
		],
		"op": "PUSH32",
		"path": "1",
		"value": "0x7CC135E0CEBB02C3480AE5D74D377283180A2601F8F644EDF7987B009316C63A"
	  },
	  "1192": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11788,
		  11817
		],
		"op": "SWAP2",
		"path": "1"
	  },
	  "1193": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  11788,
		  11817
		],
		"op": "LOG2",
		"path": "1"
	  },
	  "1194": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2326,
		  2373
		],
		"op": "PUSH1",
		"path": "11",
		"statement": 6,
		"value": "0x40"
	  },
	  "1196": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2326,
		  2373
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "1197": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2326,
		  2373
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "1198": {
		"op": "DUP5"
	  },
	  "1199": {
		"op": "DUP2"
	  },
	  "1200": {
		"op": "MSTORE"
	  },
	  "1201": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "1203": {
		"op": "DUP2"
	  },
	  "1204": {
		"op": "ADD"
	  },
	  "1205": {
		"op": "DUP5"
	  },
	  "1206": {
		"op": "SWAP1"
	  },
	  "1207": {
		"op": "MSTORE"
	  },
	  "1208": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2343,
		  2352
		],
		"op": "DUP6",
		"path": "11"
	  },
	  "1209": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2343,
		  2352
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "1210": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2326,
		  2373
		],
		"op": "PUSH32",
		"path": "11",
		"value": "0x29D1FD44CC39A4213A364818C158187934866B333B04A59815CDF69B58C809C0"
	  },
	  "1243": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2326,
		  2373
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "1244": {
		"op": "ADD"
	  },
	  "1245": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2326,
		  2373
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "1247": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2326,
		  2373
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "1248": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2326,
		  2373
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "1249": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2326,
		  2373
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "1250": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2326,
		  2373
		],
		"op": "SUB",
		"path": "11"
	  },
	  "1251": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2326,
		  2373
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1252": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2326,
		  2373
		],
		"op": "LOG2",
		"path": "11"
	  },
	  "1253": {
		"op": "POP"
	  },
	  "1254": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2383,
		  2390
		],
		"op": "PUSH1",
		"path": "11",
		"statement": 7,
		"value": "0x6"
	  },
	  "1256": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2383,
		  2401
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "1257": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2383,
		  2401
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1258": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2383,
		  2401
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "1259": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2383,
		  2401
		],
		"op": "SSTORE",
		"path": "11"
	  },
	  "1260": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2411,
		  2418
		],
		"op": "PUSH1",
		"path": "11",
		"statement": 8,
		"value": "0x7"
	  },
	  "1262": {
		"fn": "BetContract.fulfillBytesAndUint",
		"offset": [
		  2411,
		  2429
		],
		"op": "SSTORE",
		"path": "11"
	  },
	  "1263": {
		"op": "POP"
	  },
	  "1264": {
		"fn": "BetContract.fulfillBytesAndUint",
		"jump": "o",
		"offset": [
		  2170,
		  2436
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "1265": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4166,
		  4684
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "1266": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4222,
		  4237
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "1268": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4240,
		  4249
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1269": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4240,
		  4249
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1270": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4240,
		  4249
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "1271": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4240,
		  4244
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xC"
	  },
	  "1273": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4240,
		  4249
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "1275": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4240,
		  4249
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "1276": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4240,
		  4249
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "1278": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4240,
		  4249
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1279": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4240,
		  4249
		],
		"op": "KECCAK256",
		"path": "11"
	  },
	  "1280": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4268,
		  4279
		],
		"op": "PUSH1",
		"path": "11",
		"statement": 9,
		"value": "0x6"
	  },
	  "1282": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4268,
		  4279
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1283": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4268,
		  4279
		],
		"op": "ADD",
		"path": "11"
	  },
	  "1284": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4268,
		  4279
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "1285": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "1287": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "1289": {
		"op": "SHL"
	  },
	  "1290": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4268,
		  4279
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1291": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4268,
		  4279
		],
		"op": "DIV",
		"path": "11"
	  },
	  "1292": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4268,
		  4279
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xFF"
	  },
	  "1294": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4268,
		  4279
		],
		"op": "AND",
		"path": "11"
	  },
	  "1295": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4268,
		  4287
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "1296": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4268,
		  4287
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "1297": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4283,
		  4287
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x1"
	  },
	  "1299": {
		"branch": 93,
		"fn": "BetContract.acceptBet",
		"offset": [
		  4268,
		  4287
		],
		"op": "EQ",
		"path": "11"
	  },
	  "1300": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4260,
		  4312
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x556"
	  },
	  "1303": {
		"branch": 93,
		"fn": "BetContract.acceptBet",
		"offset": [
		  4260,
		  4312
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "1304": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4260,
		  4312
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "1306": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4260,
		  4312
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "1307": {
		"op": "PUSH3",
		"value": "0x461BCD"
	  },
	  "1311": {
		"op": "PUSH1",
		"value": "0xE5"
	  },
	  "1313": {
		"op": "SHL"
	  },
	  "1314": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4260,
		  4312
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1315": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4260,
		  4312
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "1316": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "1318": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4260,
		  4312
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x4"
	  },
	  "1320": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4260,
		  4312
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "1321": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4260,
		  4312
		],
		"op": "ADD",
		"path": "11"
	  },
	  "1322": {
		"op": "MSTORE"
	  },
	  "1323": {
		"op": "PUSH1",
		"value": "0x14"
	  },
	  "1325": {
		"op": "PUSH1",
		"value": "0x24"
	  },
	  "1327": {
		"op": "DUP3"
	  },
	  "1328": {
		"op": "ADD"
	  },
	  "1329": {
		"op": "MSTORE"
	  },
	  "1330": {
		"op": "PUSH20",
		"value": "0x151A194818995D081DD85CC818D85B98D95B1959"
	  },
	  "1351": {
		"op": "PUSH1",
		"value": "0x62"
	  },
	  "1353": {
		"op": "SHL"
	  },
	  "1354": {
		"op": "PUSH1",
		"value": "0x44"
	  },
	  "1356": {
		"op": "DUP3"
	  },
	  "1357": {
		"op": "ADD"
	  },
	  "1358": {
		"op": "MSTORE"
	  },
	  "1359": {
		"op": "PUSH1",
		"value": "0x64"
	  },
	  "1361": {
		"op": "ADD"
	  },
	  "1362": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4260,
		  4312
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x30F"
	  },
	  "1365": {
		"op": "JUMP"
	  },
	  "1366": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4260,
		  4312
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "1367": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4343,
		  4344
		],
		"op": "PUSH1",
		"path": "11",
		"statement": 10,
		"value": "0x0"
	  },
	  "1369": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4330,
		  4340
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x9"
	  },
	  "1371": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4330,
		  4340
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "1372": {
		"branch": 94,
		"fn": "BetContract.acceptBet",
		"offset": [
		  4330,
		  4344
		],
		"op": "GT",
		"path": "11"
	  },
	  "1373": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4322,
		  4369
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x578"
	  },
	  "1376": {
		"branch": 94,
		"fn": "BetContract.acceptBet",
		"offset": [
		  4322,
		  4369
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "1377": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4322,
		  4369
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "1379": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4322,
		  4369
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "1380": {
		"op": "PUSH3",
		"value": "0x461BCD"
	  },
	  "1384": {
		"op": "PUSH1",
		"value": "0xE5"
	  },
	  "1386": {
		"op": "SHL"
	  },
	  "1387": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4322,
		  4369
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1388": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4322,
		  4369
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "1389": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4322,
		  4369
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x4"
	  },
	  "1391": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4322,
		  4369
		],
		"op": "ADD",
		"path": "11"
	  },
	  "1392": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4322,
		  4369
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x30F"
	  },
	  "1395": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4322,
		  4369
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1396": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4322,
		  4369
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x16BD"
	  },
	  "1399": {
		"fn": "BetContract.acceptBet",
		"jump": "i",
		"offset": [
		  4322,
		  4369
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "1400": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4322,
		  4369
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "1401": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4393,
		  4394
		],
		"op": "PUSH1",
		"path": "11",
		"statement": 11,
		"value": "0x0"
	  },
	  "1403": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4387,
		  4390
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "1404": {
		"branch": 95,
		"fn": "BetContract.acceptBet",
		"offset": [
		  4387,
		  4394
		],
		"op": "GT",
		"path": "11"
	  },
	  "1405": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4387,
		  4415
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "1406": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4387,
		  4415
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "1407": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4387,
		  4415
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x58A"
	  },
	  "1410": {
		"branch": 95,
		"fn": "BetContract.acceptBet",
		"offset": [
		  4387,
		  4415
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "1411": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4387,
		  4415
		],
		"op": "POP",
		"path": "11"
	  },
	  "1412": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4405,
		  4415
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x9"
	  },
	  "1414": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4405,
		  4415
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "1415": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4398,
		  4401
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "1416": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4398,
		  4415
		],
		"op": "GT",
		"path": "11"
	  },
	  "1417": {
		"branch": 96,
		"fn": "BetContract.acceptBet",
		"offset": [
		  4398,
		  4415
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "1418": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4387,
		  4415
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "1419": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4379,
		  4440
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x5A6"
	  },
	  "1422": {
		"branch": 96,
		"fn": "BetContract.acceptBet",
		"offset": [
		  4379,
		  4440
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "1423": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4379,
		  4440
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "1425": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4379,
		  4440
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "1426": {
		"op": "PUSH3",
		"value": "0x461BCD"
	  },
	  "1430": {
		"op": "PUSH1",
		"value": "0xE5"
	  },
	  "1432": {
		"op": "SHL"
	  },
	  "1433": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4379,
		  4440
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1434": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4379,
		  4440
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "1435": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4379,
		  4440
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x4"
	  },
	  "1437": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4379,
		  4440
		],
		"op": "ADD",
		"path": "11"
	  },
	  "1438": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4379,
		  4440
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x30F"
	  },
	  "1441": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4379,
		  4440
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1442": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4379,
		  4440
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x16BD"
	  },
	  "1445": {
		"fn": "BetContract.acceptBet",
		"jump": "i",
		"offset": [
		  4379,
		  4440
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "1446": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4379,
		  4440
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "1447": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4472,
		  4486
		],
		"op": "PUSH1",
		"path": "11",
		"statement": 12,
		"value": "0x4"
	  },
	  "1449": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4472,
		  4486
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1450": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4472,
		  4486
		],
		"op": "ADD",
		"path": "11"
	  },
	  "1451": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4472,
		  4486
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "1452": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "1454": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "1456": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "1458": {
		"op": "SHL"
	  },
	  "1459": {
		"op": "SUB"
	  },
	  "1460": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4472,
		  4486
		],
		"op": "AND",
		"path": "11"
	  },
	  "1461": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4458,
		  4468
		],
		"op": "CALLER",
		"path": "11"
	  },
	  "1462": {
		"branch": 97,
		"fn": "BetContract.acceptBet",
		"offset": [
		  4458,
		  4486
		],
		"op": "SUB",
		"path": "11"
	  },
	  "1463": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4450,
		  4487
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x5BF"
	  },
	  "1466": {
		"branch": 97,
		"fn": "BetContract.acceptBet",
		"offset": [
		  4450,
		  4487
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "1467": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4450,
		  4487
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "1469": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4450,
		  4487
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "1470": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4450,
		  4487
		],
		"op": "REVERT",
		"path": "11"
	  },
	  "1471": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4450,
		  4487
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "1472": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4518,
		  4521
		],
		"op": "DUP1",
		"path": "11",
		"statement": 13
	  },
	  "1473": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4518,
		  4527
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x3"
	  },
	  "1475": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4518,
		  4527
		],
		"op": "ADD",
		"path": "11"
	  },
	  "1476": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4518,
		  4527
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "1477": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4505,
		  4514
		],
		"op": "CALLVALUE",
		"path": "11"
	  },
	  "1478": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4505,
		  4527
		],
		"op": "LT",
		"path": "11"
	  },
	  "1479": {
		"branch": 98,
		"fn": "BetContract.acceptBet",
		"offset": [
		  4505,
		  4527
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "1480": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4497,
		  4528
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x5D0"
	  },
	  "1483": {
		"branch": 98,
		"fn": "BetContract.acceptBet",
		"offset": [
		  4497,
		  4528
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "1484": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4497,
		  4528
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "1486": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4497,
		  4528
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "1487": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4497,
		  4528
		],
		"op": "REVERT",
		"path": "11"
	  },
	  "1488": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4497,
		  4528
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "1489": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4547,
		  4559
		],
		"op": "PUSH1",
		"path": "11",
		"statement": 14,
		"value": "0x5"
	  },
	  "1491": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4547,
		  4559
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1492": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4547,
		  4559
		],
		"op": "ADD",
		"path": "11"
	  },
	  "1493": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4547,
		  4572
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "1494": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4547,
		  4572
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "1495": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "1497": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "1499": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "1501": {
		"op": "SHL"
	  },
	  "1502": {
		"op": "SUB"
	  },
	  "1503": {
		"op": "NOT"
	  },
	  "1504": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4547,
		  4572
		],
		"op": "AND",
		"path": "11"
	  },
	  "1505": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4562,
		  4572
		],
		"op": "CALLER",
		"path": "11"
	  },
	  "1506": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4547,
		  4572
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1507": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4547,
		  4572
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1508": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4547,
		  4572
		],
		"op": "OR",
		"path": "11"
	  },
	  "1509": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4547,
		  4572
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1510": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4547,
		  4572
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "1511": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4547,
		  4572
		],
		"op": "SSTORE",
		"path": "11"
	  },
	  "1512": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4582,
		  4596
		],
		"op": "PUSH1",
		"path": "11",
		"statement": 15,
		"value": "0x6"
	  },
	  "1514": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4582,
		  4596
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "1515": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4582,
		  4596
		],
		"op": "ADD",
		"path": "11"
	  },
	  "1516": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4582,
		  4603
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "1517": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4582,
		  4603
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "1518": {
		"op": "PUSH1",
		"value": "0xFF"
	  },
	  "1520": {
		"op": "PUSH1",
		"value": "0xA8"
	  },
	  "1522": {
		"op": "SHL"
	  },
	  "1523": {
		"op": "NOT"
	  },
	  "1524": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4582,
		  4603
		],
		"op": "AND",
		"path": "11"
	  },
	  "1525": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "1527": {
		"op": "PUSH1",
		"value": "0xA8"
	  },
	  "1529": {
		"op": "SHL"
	  },
	  "1530": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4582,
		  4603
		],
		"op": "OR",
		"path": "11"
	  },
	  "1531": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4582,
		  4603
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1532": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4582,
		  4603
		],
		"op": "SSTORE",
		"path": "11"
	  },
	  "1533": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4636,
		  4650
		],
		"op": "PUSH1",
		"path": "11",
		"statement": 16,
		"value": "0x4"
	  },
	  "1535": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4636,
		  4650
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "1536": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4636,
		  4650
		],
		"op": "ADD",
		"path": "11"
	  },
	  "1537": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4636,
		  4650
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "1538": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4666,
		  4675
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x3"
	  },
	  "1540": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4666,
		  4675
		],
		"op": "DUP4",
		"path": "11"
	  },
	  "1541": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4666,
		  4675
		],
		"op": "ADD",
		"path": "11"
	  },
	  "1542": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4666,
		  4675
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "1543": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4618,
		  4676
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "1545": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4618,
		  4676
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "1546": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "1548": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "1550": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "1552": {
		"op": "SHL"
	  },
	  "1553": {
		"op": "SUB"
	  },
	  "1554": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4636,
		  4650
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "1555": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4636,
		  4650
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1556": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4636,
		  4650
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "1557": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4636,
		  4650
		],
		"op": "AND",
		"path": "11"
	  },
	  "1558": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4636,
		  4650
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "1559": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4631,
		  4634
		],
		"op": "DUP6",
		"path": "11"
	  },
	  "1560": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4631,
		  4634
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "1561": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4618,
		  4676
		],
		"op": "PUSH32",
		"path": "11",
		"value": "0x5394EDF3DC91F34510AD8B3C082C8A370AD8EE677A618697D8605CEEB76957B"
	  },
	  "1594": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4618,
		  4676
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "1595": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4618,
		  4676
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x646"
	  },
	  "1598": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4618,
		  4676
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "1599": {
		"op": "DUP2"
	  },
	  "1600": {
		"op": "MSTORE"
	  },
	  "1601": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "1603": {
		"op": "ADD"
	  },
	  "1604": {
		"op": "SWAP1"
	  },
	  "1605": {
		"op": "JUMP"
	  },
	  "1606": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4618,
		  4676
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "1607": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4618,
		  4676
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "1609": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4618,
		  4676
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "1610": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4618,
		  4676
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "1611": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4618,
		  4676
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "1612": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4618,
		  4676
		],
		"op": "SUB",
		"path": "11"
	  },
	  "1613": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4618,
		  4676
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1614": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4618,
		  4676
		],
		"op": "LOG4",
		"path": "11"
	  },
	  "1615": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4211,
		  4684
		],
		"op": "POP",
		"path": "11"
	  },
	  "1616": {
		"fn": "BetContract.acceptBet",
		"offset": [
		  4166,
		  4684
		],
		"op": "POP",
		"path": "11"
	  },
	  "1617": {
		"fn": "BetContract.acceptBet",
		"jump": "o",
		"offset": [
		  4166,
		  4684
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "1618": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5691,
		  6502
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "1619": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5740,
		  5752
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x60"
	  },
	  "1621": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5765,
		  5785
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "1623": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5799,
		  5809
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x9"
	  },
	  "1625": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5799,
		  5809
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "1626": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "PUSH8",
		"path": "11",
		"value": "0xFFFFFFFFFFFFFFFF"
	  },
	  "1635": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1636": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "GT",
		"path": "11"
	  },
	  "1637": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "1638": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x671"
	  },
	  "1641": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "1642": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x671"
	  },
	  "1645": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x16EB"
	  },
	  "1648": {
		"fn": "BetContract.getAvailableBets",
		"jump": "i",
		"offset": [
		  5788,
		  5810
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "1649": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "1650": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "1652": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "1653": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1654": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "1655": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "1656": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "1657": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "1658": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "1660": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "MUL",
		"path": "11"
	  },
	  "1661": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "1663": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "ADD",
		"path": "11"
	  },
	  "1664": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "1665": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "ADD",
		"path": "11"
	  },
	  "1666": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "1668": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "1669": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "1670": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "1671": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x69A"
	  },
	  "1674": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "1675": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1676": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "1678": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "ADD",
		"path": "11"
	  },
	  "1679": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "1681": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "1682": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "MUL",
		"path": "11"
	  },
	  "1683": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "1684": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "CALLDATASIZE",
		"path": "11"
	  },
	  "1685": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "DUP4",
		"path": "11"
	  },
	  "1686": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "CALLDATACOPY",
		"path": "11"
	  },
	  "1687": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "ADD",
		"path": "11"
	  },
	  "1688": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1689": {
		"op": "POP"
	  },
	  "1690": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5788,
		  5810
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "1691": {
		"op": "POP"
	  },
	  "1692": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5765,
		  5810
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1693": {
		"op": "POP"
	  },
	  "1694": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5820,
		  5846
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "1696": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5874,
		  5875
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x1"
	  },
	  "1698": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5861,
		  6158
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "1699": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5883,
		  5893
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x9"
	  },
	  "1701": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5883,
		  5893
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "1702": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5877,
		  5878
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1703": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5877,
		  5893
		],
		"op": "GT",
		"path": "11"
	  },
	  "1704": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5861,
		  6158
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x744"
	  },
	  "1707": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5861,
		  6158
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "1708": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5975,
		  5982
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "1710": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5975,
		  5982
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1711": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5975,
		  5982
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1712": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5975,
		  5982
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "1713": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5975,
		  5979
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xC"
	  },
	  "1715": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5975,
		  5982
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "1717": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5975,
		  5982
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "1718": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5975,
		  5982
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "1720": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5975,
		  5982
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1721": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5975,
		  5982
		],
		"op": "KECCAK256",
		"path": "11"
	  },
	  "1722": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5975,
		  5993
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x6"
	  },
	  "1724": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5975,
		  5993
		],
		"op": "ADD",
		"path": "11"
	  },
	  "1725": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5975,
		  5993
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "1726": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "1728": {
		"op": "PUSH1",
		"value": "0xA8"
	  },
	  "1730": {
		"op": "SHL"
	  },
	  "1731": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5975,
		  5993
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1732": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5975,
		  5993
		],
		"op": "DIV",
		"path": "11"
	  },
	  "1733": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5975,
		  5993
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xFF"
	  },
	  "1735": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5975,
		  5993
		],
		"op": "AND",
		"path": "11"
	  },
	  "1736": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5975,
		  6002
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "1737": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5975,
		  6002
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "1738": {
		"branch": 99,
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5975,
		  6002
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "1739": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5975,
		  6029
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x6F1"
	  },
	  "1742": {
		"branch": 99,
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5975,
		  6029
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "1743": {
		"op": "POP"
	  },
	  "1744": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6006,
		  6013
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "1746": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6006,
		  6013
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1747": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6006,
		  6013
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1748": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6006,
		  6013
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "1749": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6006,
		  6010
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xC"
	  },
	  "1751": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6006,
		  6013
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "1753": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6006,
		  6013
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "1754": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6006,
		  6013
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "1756": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6006,
		  6013
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1757": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6006,
		  6013
		],
		"op": "KECCAK256",
		"path": "11"
	  },
	  "1758": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6006,
		  6021
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x6"
	  },
	  "1760": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6006,
		  6021
		],
		"op": "ADD",
		"path": "11"
	  },
	  "1761": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6006,
		  6021
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "1762": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "1764": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "1766": {
		"op": "SHL"
	  },
	  "1767": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6006,
		  6021
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1768": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6006,
		  6021
		],
		"op": "DIV",
		"path": "11"
	  },
	  "1769": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6006,
		  6021
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xFF"
	  },
	  "1771": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6006,
		  6021
		],
		"op": "AND",
		"path": "11"
	  },
	  "1772": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6006,
		  6029
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "1773": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6006,
		  6029
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "1774": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6025,
		  6029
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x1"
	  },
	  "1776": {
		"branch": 100,
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6006,
		  6029
		],
		"op": "EQ",
		"path": "11"
	  },
	  "1777": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5975,
		  6029
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "1778": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5972,
		  6148
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "1779": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5972,
		  6148
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x732"
	  },
	  "1782": {
		"branch": 100,
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5972,
		  6148
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "1783": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6082,
		  6089
		],
		"op": "PUSH1",
		"path": "11",
		"statement": 17,
		"value": "0x0"
	  },
	  "1785": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6082,
		  6089
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1786": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6082,
		  6089
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1787": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6082,
		  6089
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "1788": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6082,
		  6086
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xC"
	  },
	  "1790": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6082,
		  6089
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "1792": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6082,
		  6089
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "1793": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6082,
		  6089
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "1795": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6082,
		  6089
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1796": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6082,
		  6089
		],
		"op": "KECCAK256",
		"path": "11"
	  },
	  "1797": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6082,
		  6092
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "1798": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6050,
		  6079
		],
		"op": "DUP4",
		"path": "11"
	  },
	  "1799": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6050,
		  6079
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "1800": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6050,
		  6056
		],
		"op": "DUP5",
		"path": "11"
	  },
	  "1801": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6050,
		  6056
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1802": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6057,
		  6078
		],
		"op": "DUP5",
		"path": "11"
	  },
	  "1803": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6057,
		  6078
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1804": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6050,
		  6079
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1805": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6050,
		  6079
		],
		"op": "LT",
		"path": "11"
	  },
	  "1806": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6050,
		  6079
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x719"
	  },
	  "1809": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6050,
		  6079
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "1810": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6050,
		  6079
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x719"
	  },
	  "1813": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6050,
		  6079
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x1701"
	  },
	  "1816": {
		"fn": "BetContract.getAvailableBets",
		"jump": "i",
		"offset": [
		  6050,
		  6079
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "1817": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6050,
		  6079
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "1818": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6050,
		  6079
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "1820": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6050,
		  6079
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1821": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6050,
		  6079
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1822": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6050,
		  6079
		],
		"op": "MUL",
		"path": "11"
	  },
	  "1823": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6050,
		  6079
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "1824": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6050,
		  6079
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1825": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6050,
		  6079
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "1826": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6050,
		  6079
		],
		"op": "ADD",
		"path": "11"
	  },
	  "1827": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6050,
		  6079
		],
		"op": "ADD",
		"path": "11"
	  },
	  "1828": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6050,
		  6092
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "1829": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6110,
		  6133
		],
		"op": "DUP2",
		"path": "11",
		"statement": 18
	  },
	  "1830": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6110,
		  6133
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x72E"
	  },
	  "1833": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6110,
		  6133
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1834": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6110,
		  6133
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x172D"
	  },
	  "1837": {
		"fn": "BetContract.getAvailableBets",
		"jump": "i",
		"offset": [
		  6110,
		  6133
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "1838": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6110,
		  6133
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "1839": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6110,
		  6133
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "1840": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6110,
		  6133
		],
		"op": "POP",
		"path": "11"
	  },
	  "1841": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6110,
		  6133
		],
		"op": "POP",
		"path": "11"
	  },
	  "1842": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5972,
		  6148
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "1843": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5896,
		  5899
		],
		"op": "DUP1",
		"path": "11",
		"statement": 19
	  },
	  "1844": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5896,
		  5899
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x73C"
	  },
	  "1847": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5896,
		  5899
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1848": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5896,
		  5899
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x172D"
	  },
	  "1851": {
		"fn": "BetContract.getAvailableBets",
		"jump": "i",
		"offset": [
		  5896,
		  5899
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "1852": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5896,
		  5899
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "1853": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5896,
		  5899
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "1854": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5896,
		  5899
		],
		"op": "POP",
		"path": "11"
	  },
	  "1855": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5896,
		  5899
		],
		"op": "POP",
		"path": "11"
	  },
	  "1856": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5861,
		  6158
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x6A2"
	  },
	  "1859": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5861,
		  6158
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "1860": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5861,
		  6158
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "1861": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5861,
		  6158
		],
		"op": "POP",
		"path": "11"
	  },
	  "1862": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6176,
		  6202
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "1864": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6215,
		  6236
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1865": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "PUSH8",
		"path": "11",
		"value": "0xFFFFFFFFFFFFFFFF"
	  },
	  "1874": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1875": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "GT",
		"path": "11"
	  },
	  "1876": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "1877": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x760"
	  },
	  "1880": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "1881": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x760"
	  },
	  "1884": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x16EB"
	  },
	  "1887": {
		"fn": "BetContract.getAvailableBets",
		"jump": "i",
		"offset": [
		  6205,
		  6237
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "1888": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "1889": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "1891": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "1892": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1893": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "1894": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "1895": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "1896": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "1897": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "1899": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "MUL",
		"path": "11"
	  },
	  "1900": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "1902": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "ADD",
		"path": "11"
	  },
	  "1903": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "1904": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "ADD",
		"path": "11"
	  },
	  "1905": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "1907": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "1908": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "1909": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "1910": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x7D7"
	  },
	  "1913": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "1914": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "1915": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "1917": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "ADD",
		"path": "11"
	  },
	  "1918": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "1919": {
		"op": "PUSH1",
		"value": "0x40"
	  },
	  "1921": {
		"op": "DUP1"
	  },
	  "1922": {
		"op": "MLOAD"
	  },
	  "1923": {
		"op": "PUSH2",
		"value": "0x120"
	  },
	  "1926": {
		"op": "DUP2"
	  },
	  "1927": {
		"op": "ADD"
	  },
	  "1928": {
		"op": "DUP3"
	  },
	  "1929": {
		"op": "MSTORE"
	  },
	  "1930": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "1932": {
		"op": "DUP1"
	  },
	  "1933": {
		"op": "DUP3"
	  },
	  "1934": {
		"op": "MSTORE"
	  },
	  "1935": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "1937": {
		"op": "DUP1"
	  },
	  "1938": {
		"op": "DUP4"
	  },
	  "1939": {
		"op": "ADD"
	  },
	  "1940": {
		"op": "DUP3"
	  },
	  "1941": {
		"op": "SWAP1"
	  },
	  "1942": {
		"op": "MSTORE"
	  },
	  "1943": {
		"op": "SWAP3"
	  },
	  "1944": {
		"op": "DUP3"
	  },
	  "1945": {
		"op": "ADD"
	  },
	  "1946": {
		"op": "DUP2"
	  },
	  "1947": {
		"op": "SWAP1"
	  },
	  "1948": {
		"op": "MSTORE"
	  },
	  "1949": {
		"op": "PUSH1",
		"value": "0x60"
	  },
	  "1951": {
		"op": "DUP3"
	  },
	  "1952": {
		"op": "ADD"
	  },
	  "1953": {
		"op": "DUP2"
	  },
	  "1954": {
		"op": "SWAP1"
	  },
	  "1955": {
		"op": "MSTORE"
	  },
	  "1956": {
		"op": "PUSH1",
		"value": "0x80"
	  },
	  "1958": {
		"op": "DUP3"
	  },
	  "1959": {
		"op": "ADD"
	  },
	  "1960": {
		"op": "DUP2"
	  },
	  "1961": {
		"op": "SWAP1"
	  },
	  "1962": {
		"op": "MSTORE"
	  },
	  "1963": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "1965": {
		"op": "DUP3"
	  },
	  "1966": {
		"op": "ADD"
	  },
	  "1967": {
		"op": "DUP2"
	  },
	  "1968": {
		"op": "SWAP1"
	  },
	  "1969": {
		"op": "MSTORE"
	  },
	  "1970": {
		"op": "PUSH1",
		"value": "0xC0"
	  },
	  "1972": {
		"op": "DUP3"
	  },
	  "1973": {
		"op": "ADD"
	  },
	  "1974": {
		"op": "DUP2"
	  },
	  "1975": {
		"op": "SWAP1"
	  },
	  "1976": {
		"op": "MSTORE"
	  },
	  "1977": {
		"op": "PUSH1",
		"value": "0xE0"
	  },
	  "1979": {
		"op": "DUP3"
	  },
	  "1980": {
		"op": "ADD"
	  },
	  "1981": {
		"op": "DUP2"
	  },
	  "1982": {
		"op": "SWAP1"
	  },
	  "1983": {
		"op": "MSTORE"
	  },
	  "1984": {
		"op": "PUSH2",
		"value": "0x100"
	  },
	  "1987": {
		"op": "DUP3"
	  },
	  "1988": {
		"op": "ADD"
	  },
	  "1989": {
		"op": "MSTORE"
	  },
	  "1990": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "1991": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "1992": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "1994": {
		"op": "NOT"
	  },
	  "1995": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "1996": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "1997": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "ADD",
		"path": "11"
	  },
	  "1998": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "1999": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2000": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2001": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x77E"
	  },
	  "2004": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "2005": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2006": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "POP",
		"path": "11"
	  },
	  "2007": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2008": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6205,
		  6237
		],
		"op": "POP",
		"path": "11"
	  },
	  "2009": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6176,
		  6237
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2010": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6176,
		  6237
		],
		"op": "POP",
		"path": "11"
	  },
	  "2011": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6348,
		  6354
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "2013": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6344,
		  6451
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2014": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6364,
		  6385
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "2015": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6360,
		  6361
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2016": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6360,
		  6385
		],
		"op": "LT",
		"path": "11"
	  },
	  "2017": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6344,
		  6451
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "2018": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6344,
		  6451
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x8CB"
	  },
	  "2021": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6344,
		  6451
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "2022": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6425,
		  6429
		],
		"op": "PUSH1",
		"path": "11",
		"statement": 20,
		"value": "0xC"
	  },
	  "2024": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6425,
		  6440
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "2026": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6430,
		  6436
		],
		"op": "DUP6",
		"path": "11"
	  },
	  "2027": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6437,
		  6438
		],
		"op": "DUP4",
		"path": "11"
	  },
	  "2028": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6430,
		  6439
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2029": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6430,
		  6439
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "2030": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6430,
		  6439
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2031": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6430,
		  6439
		],
		"op": "LT",
		"path": "11"
	  },
	  "2032": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6430,
		  6439
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x7FB"
	  },
	  "2035": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6430,
		  6439
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "2036": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6430,
		  6439
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x7FB"
	  },
	  "2039": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6430,
		  6439
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x1701"
	  },
	  "2042": {
		"fn": "BetContract.getAvailableBets",
		"jump": "i",
		"offset": [
		  6430,
		  6439
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "2043": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6430,
		  6439
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2044": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6430,
		  6439
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "2046": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6430,
		  6439
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2047": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6430,
		  6439
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2048": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6430,
		  6439
		],
		"op": "MUL",
		"path": "11"
	  },
	  "2049": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6430,
		  6439
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "2050": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6430,
		  6439
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2051": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6430,
		  6439
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "2052": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6430,
		  6439
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2053": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6430,
		  6439
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2054": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6430,
		  6439
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2055": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6430,
		  6439
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "2056": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6425,
		  6440
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "2057": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6425,
		  6440
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2058": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6425,
		  6440
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2059": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6425,
		  6440
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2060": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6425,
		  6440
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2061": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6425,
		  6440
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "2062": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6425,
		  6440
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2063": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6425,
		  6440
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "2064": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6425,
		  6440
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2065": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6425,
		  6440
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "2067": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6425,
		  6440
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2068": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6425,
		  6440
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2069": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6425,
		  6440
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2070": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "2072": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6425,
		  6440
		],
		"op": "KECCAK256",
		"path": "11"
	  },
	  "2073": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2074": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "2075": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x120"
	  },
	  "2078": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2079": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2080": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP4",
		"path": "11"
	  },
	  "2081": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2082": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2083": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2084": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2085": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2086": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x1"
	  },
	  "2088": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "2089": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2090": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2091": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "SWAP4",
		"path": "11"
	  },
	  "2092": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2093": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2094": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "SWAP4",
		"path": "11"
	  },
	  "2095": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2096": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "SWAP4",
		"path": "11"
	  },
	  "2097": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2098": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x2"
	  },
	  "2100": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2101": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2102": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2103": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "2104": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP4",
		"path": "11"
	  },
	  "2105": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2106": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "2107": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2108": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "2109": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2110": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x3"
	  },
	  "2112": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2113": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2114": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2115": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x60"
	  },
	  "2117": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP4",
		"path": "11"
	  },
	  "2118": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2119": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2120": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x4"
	  },
	  "2122": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2123": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2124": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2125": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "2127": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "2129": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "2131": {
		"op": "SHL"
	  },
	  "2132": {
		"op": "SUB"
	  },
	  "2133": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2134": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2135": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "AND",
		"path": "11"
	  },
	  "2136": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x80"
	  },
	  "2138": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP5",
		"path": "11"
	  },
	  "2139": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2140": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2141": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x5"
	  },
	  "2143": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "2144": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2145": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2146": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2147": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "AND",
		"path": "11"
	  },
	  "2148": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xA0"
	  },
	  "2150": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP5",
		"path": "11"
	  },
	  "2151": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2152": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2153": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x6"
	  },
	  "2155": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2156": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "2157": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2158": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2159": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2160": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2161": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "AND",
		"path": "11"
	  },
	  "2162": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xC0"
	  },
	  "2164": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP4",
		"path": "11"
	  },
	  "2165": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2166": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2167": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xFF"
	  },
	  "2169": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "2171": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "2173": {
		"op": "SHL"
	  },
	  "2174": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "2175": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DIV",
		"path": "11"
	  },
	  "2176": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2177": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "AND",
		"path": "11"
	  },
	  "2178": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "2179": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "2180": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xE0"
	  },
	  "2182": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP5",
		"path": "11"
	  },
	  "2183": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2184": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2185": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "2187": {
		"op": "PUSH1",
		"value": "0xA8"
	  },
	  "2189": {
		"op": "SHL"
	  },
	  "2190": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2191": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "2192": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DIV",
		"path": "11"
	  },
	  "2193": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "AND",
		"path": "11"
	  },
	  "2194": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "2195": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "2196": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x100"
	  },
	  "2199": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "2200": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2201": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2202": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6422
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "2203": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6422
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "2204": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6419
		],
		"op": "DUP4",
		"path": "11"
	  },
	  "2205": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6419
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2206": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6420,
		  6421
		],
		"op": "DUP4",
		"path": "11"
	  },
	  "2207": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6420,
		  6421
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2208": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6422
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2209": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6422
		],
		"op": "LT",
		"path": "11"
	  },
	  "2210": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6422
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x8AD"
	  },
	  "2213": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6422
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "2214": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6422
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x8AD"
	  },
	  "2217": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6422
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x1701"
	  },
	  "2220": {
		"fn": "BetContract.getAvailableBets",
		"jump": "i",
		"offset": [
		  6406,
		  6422
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "2221": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6422
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2222": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6422
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "2224": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6422
		],
		"op": "MUL",
		"path": "11"
	  },
	  "2225": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6422
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "2227": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6422
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2228": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6422
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2229": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2230": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2231": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2232": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6406,
		  6440
		],
		"op": "POP",
		"path": "11"
	  },
	  "2233": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6387,
		  6390
		],
		"op": "DUP1",
		"path": "11",
		"statement": 21
	  },
	  "2234": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6387,
		  6390
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "2235": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6387,
		  6390
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x8C3"
	  },
	  "2238": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6387,
		  6390
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2239": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6387,
		  6390
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x172D"
	  },
	  "2242": {
		"fn": "BetContract.getAvailableBets",
		"jump": "i",
		"offset": [
		  6387,
		  6390
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "2243": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6387,
		  6390
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2244": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6387,
		  6390
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "2245": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6387,
		  6390
		],
		"op": "POP",
		"path": "11"
	  },
	  "2246": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6387,
		  6390
		],
		"op": "POP",
		"path": "11"
	  },
	  "2247": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6344,
		  6451
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x7DD"
	  },
	  "2250": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6344,
		  6451
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "2251": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6344,
		  6451
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2252": {
		"op": "POP"
	  },
	  "2253": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  6476,
		  6489
		],
		"op": "SWAP4",
		"path": "11",
		"statement": 22
	  },
	  "2254": {
		"fn": "BetContract.getAvailableBets",
		"offset": [
		  5691,
		  6502
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "2255": {
		"op": "POP"
	  },
	  "2256": {
		"op": "POP"
	  },
	  "2257": {
		"op": "POP"
	  },
	  "2258": {
		"fn": "BetContract.getAvailableBets",
		"jump": "o",
		"offset": [
		  5691,
		  6502
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "2259": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3620,
		  4159
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2260": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3737,
		  3738
		],
		"op": "PUSH1",
		"path": "11",
		"statement": 23,
		"value": "0x1"
	  },
	  "2262": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3727,
		  3733
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "2263": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3727,
		  3738
		],
		"op": "LT",
		"path": "11"
	  },
	  "2264": {
		"branch": 101,
		"fn": "BetContract.publishBet",
		"offset": [
		  3727,
		  3738
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "2265": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3719,
		  3767
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x924"
	  },
	  "2268": {
		"branch": 101,
		"fn": "BetContract.publishBet",
		"offset": [
		  3719,
		  3767
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "2269": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3719,
		  3767
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "2271": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3719,
		  3767
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "2272": {
		"op": "PUSH3",
		"value": "0x461BCD"
	  },
	  "2276": {
		"op": "PUSH1",
		"value": "0xE5"
	  },
	  "2278": {
		"op": "SHL"
	  },
	  "2279": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3719,
		  3767
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2280": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3719,
		  3767
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2281": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "2283": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3719,
		  3767
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x4"
	  },
	  "2285": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3719,
		  3767
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "2286": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3719,
		  3767
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2287": {
		"op": "MSTORE"
	  },
	  "2288": {
		"op": "PUSH1",
		"value": "0x18"
	  },
	  "2290": {
		"op": "PUSH1",
		"value": "0x24"
	  },
	  "2292": {
		"op": "DUP3"
	  },
	  "2293": {
		"op": "ADD"
	  },
	  "2294": {
		"op": "MSTORE"
	  },
	  "2295": {
		"op": "PUSH32",
		"value": "0x4D696E696D756D2070726963652069732031204D617469630000000000000000"
	  },
	  "2328": {
		"op": "PUSH1",
		"value": "0x44"
	  },
	  "2330": {
		"op": "DUP3"
	  },
	  "2331": {
		"op": "ADD"
	  },
	  "2332": {
		"op": "MSTORE"
	  },
	  "2333": {
		"op": "PUSH1",
		"value": "0x64"
	  },
	  "2335": {
		"op": "ADD"
	  },
	  "2336": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3719,
		  3767
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x30F"
	  },
	  "2339": {
		"op": "JUMP"
	  },
	  "2340": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3719,
		  3767
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2341": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3798,
		  3804
		],
		"op": "DUP2",
		"path": "11",
		"statement": 24
	  },
	  "2342": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3785,
		  3794
		],
		"op": "CALLVALUE",
		"path": "11"
	  },
	  "2343": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3785,
		  3804
		],
		"op": "LT",
		"path": "11"
	  },
	  "2344": {
		"branch": 102,
		"fn": "BetContract.publishBet",
		"offset": [
		  3785,
		  3804
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "2345": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3777,
		  3805
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x931"
	  },
	  "2348": {
		"branch": 102,
		"fn": "BetContract.publishBet",
		"offset": [
		  3777,
		  3805
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "2349": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3777,
		  3805
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "2351": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3777,
		  3805
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "2352": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3777,
		  3805
		],
		"op": "REVERT",
		"path": "11"
	  },
	  "2353": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3777,
		  3805
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2354": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3824,
		  3834
		],
		"op": "PUSH1",
		"path": "11",
		"statement": 25,
		"value": "0x9"
	  },
	  "2356": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3824,
		  3836
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "2357": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3824,
		  3836
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2358": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3824,
		  3836
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2359": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3824,
		  3834
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "2361": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3824,
		  3836
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x941"
	  },
	  "2364": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3824,
		  3836
		],
		"op": "DUP4",
		"path": "11"
	  },
	  "2365": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3824,
		  3836
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x172D"
	  },
	  "2368": {
		"fn": "BetContract.publishBet",
		"jump": "i",
		"offset": [
		  3824,
		  3836
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "2369": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3824,
		  3836
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2370": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3824,
		  3836
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2371": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3824,
		  3836
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "2372": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3824,
		  3836
		],
		"op": "SSTORE",
		"path": "11"
	  },
	  "2373": {
		"op": "POP"
	  },
	  "2374": {
		"op": "POP"
	  },
	  "2375": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "PUSH1",
		"path": "11",
		"statement": 26,
		"value": "0x40"
	  },
	  "2377": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "2378": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "2379": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x120"
	  },
	  "2382": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2383": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2384": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "2385": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2386": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3883,
		  3893
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x9"
	  },
	  "2388": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3883,
		  3893
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "2389": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3883,
		  3893
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2390": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "2391": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP4",
		"path": "11"
	  },
	  "2392": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2393": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "2395": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "2396": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP5",
		"path": "11"
	  },
	  "2397": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2398": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP7",
		"path": "11"
	  },
	  "2399": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2400": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2401": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP5",
		"path": "11"
	  },
	  "2402": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP7",
		"path": "11"
	  },
	  "2403": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2404": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP10",
		"path": "11"
	  },
	  "2405": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2406": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2407": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x60"
	  },
	  "2409": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP7",
		"path": "11"
	  },
	  "2410": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2411": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP10",
		"path": "11"
	  },
	  "2412": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2413": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2414": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3974,
		  3984
		],
		"op": "CALLER",
		"path": "11"
	  },
	  "2415": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x80"
	  },
	  "2417": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP9",
		"path": "11"
	  },
	  "2418": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2419": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2420": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2421": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2422": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "2424": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xA0"
	  },
	  "2426": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP11",
		"path": "11"
	  },
	  "2427": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2428": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2429": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2430": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2431": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xC0"
	  },
	  "2433": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP12",
		"path": "11"
	  },
	  "2434": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2435": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "2436": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2437": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2438": {
		"fn": "BetContract.publishBet",
		"offset": [
		  4058,
		  4062
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x1"
	  },
	  "2440": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xE0"
	  },
	  "2442": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP14",
		"path": "11"
	  },
	  "2443": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2444": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2445": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2446": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2447": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x100"
	  },
	  "2450": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP15",
		"path": "11"
	  },
	  "2451": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2452": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP6",
		"path": "11"
	  },
	  "2453": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2454": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3865,
		  4091
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2455": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  3862
		],
		"op": "SWAP12",
		"path": "11"
	  },
	  "2456": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  3862
		],
		"op": "DUP6",
		"path": "11"
	  },
	  "2457": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  3862
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2458": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  3850
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xC"
	  },
	  "2460": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  3862
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2461": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  3862
		],
		"op": "SWAP11",
		"path": "11"
	  },
	  "2462": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  3862
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2463": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  3862
		],
		"op": "DUP14",
		"path": "11"
	  },
	  "2464": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  3862
		],
		"op": "DUP5",
		"path": "11"
	  },
	  "2465": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  3862
		],
		"op": "KECCAK256",
		"path": "11"
	  },
	  "2466": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP13",
		"path": "11"
	  },
	  "2467": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "2468": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "DUP14",
		"path": "11"
	  },
	  "2469": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SSTORE",
		"path": "11"
	  },
	  "2470": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP8",
		"path": "11"
	  },
	  "2471": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "2472": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP8",
		"path": "11"
	  },
	  "2473": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "DUP13",
		"path": "11"
	  },
	  "2474": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2475": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP8",
		"path": "11"
	  },
	  "2476": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2477": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP8",
		"path": "11"
	  },
	  "2478": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SSTORE",
		"path": "11"
	  },
	  "2479": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP5",
		"path": "11"
	  },
	  "2480": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "2481": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x2"
	  },
	  "2483": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "DUP12",
		"path": "11"
	  },
	  "2484": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2485": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SSTORE",
		"path": "11"
	  },
	  "2486": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "2487": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "2488": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x3"
	  },
	  "2490": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "DUP11",
		"path": "11"
	  },
	  "2491": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2492": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SSTORE",
		"path": "11"
	  },
	  "2493": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "2494": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x4"
	  },
	  "2496": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "DUP10",
		"path": "11"
	  },
	  "2497": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2498": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "2499": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2500": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "2502": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "2504": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "2506": {
		"op": "SHL"
	  },
	  "2507": {
		"op": "SUB"
	  },
	  "2508": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "2509": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "DUP4",
		"path": "11"
	  },
	  "2510": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "AND",
		"path": "11"
	  },
	  "2511": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "2513": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "2515": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "2517": {
		"op": "SHL"
	  },
	  "2518": {
		"op": "SUB"
	  },
	  "2519": {
		"op": "NOT"
	  },
	  "2520": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "2521": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "2522": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "AND",
		"path": "11"
	  },
	  "2523": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "OR",
		"path": "11"
	  },
	  "2524": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2525": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "2526": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SSTORE",
		"path": "11"
	  },
	  "2527": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP4",
		"path": "11"
	  },
	  "2528": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "2529": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x5"
	  },
	  "2531": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "DUP11",
		"path": "11"
	  },
	  "2532": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2533": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "2534": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2535": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "2536": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "DUP4",
		"path": "11"
	  },
	  "2537": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "AND",
		"path": "11"
	  },
	  "2538": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "2539": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2540": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP6",
		"path": "11"
	  },
	  "2541": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "AND",
		"path": "11"
	  },
	  "2542": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "OR",
		"path": "11"
	  },
	  "2543": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2544": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP4",
		"path": "11"
	  },
	  "2545": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SSTORE",
		"path": "11"
	  },
	  "2546": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "2547": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "2548": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x6"
	  },
	  "2550": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2551": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP8",
		"path": "11"
	  },
	  "2552": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2553": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "2554": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2555": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP5",
		"path": "11"
	  },
	  "2556": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "2557": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP6",
		"path": "11"
	  },
	  "2558": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "2559": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "2560": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "2561": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "2563": {
		"op": "PUSH1",
		"value": "0xA8"
	  },
	  "2565": {
		"op": "SHL"
	  },
	  "2566": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "MUL",
		"path": "11"
	  },
	  "2567": {
		"op": "PUSH1",
		"value": "0xFF"
	  },
	  "2569": {
		"op": "PUSH1",
		"value": "0xA8"
	  },
	  "2571": {
		"op": "SHL"
	  },
	  "2572": {
		"op": "NOT"
	  },
	  "2573": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP7",
		"path": "11"
	  },
	  "2574": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "2575": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "2576": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "2578": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "2580": {
		"op": "SHL"
	  },
	  "2581": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "MUL",
		"path": "11"
	  },
	  "2582": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "2584": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "2586": {
		"op": "PUSH1",
		"value": "0xA8"
	  },
	  "2588": {
		"op": "SHL"
	  },
	  "2589": {
		"op": "SUB"
	  },
	  "2590": {
		"op": "NOT"
	  },
	  "2591": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2592": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP7",
		"path": "11"
	  },
	  "2593": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "AND",
		"path": "11"
	  },
	  "2594": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP9",
		"path": "11"
	  },
	  "2595": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2596": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP4",
		"path": "11"
	  },
	  "2597": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "AND",
		"path": "11"
	  },
	  "2598": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP8",
		"path": "11"
	  },
	  "2599": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2600": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP8",
		"path": "11"
	  },
	  "2601": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "OR",
		"path": "11"
	  },
	  "2602": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP4",
		"path": "11"
	  },
	  "2603": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2604": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP4",
		"path": "11"
	  },
	  "2605": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "OR",
		"path": "11"
	  },
	  "2606": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP4",
		"path": "11"
	  },
	  "2607": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2608": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP4",
		"path": "11"
	  },
	  "2609": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "AND",
		"path": "11"
	  },
	  "2610": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "2611": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2612": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "2613": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "OR",
		"path": "11"
	  },
	  "2614": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2615": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SWAP4",
		"path": "11"
	  },
	  "2616": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3846,
		  4091
		],
		"op": "SSTORE",
		"path": "11"
	  },
	  "2617": {
		"fn": "BetContract.publishBet",
		"offset": [
		  4121,
		  4131
		],
		"op": "SWAP1",
		"path": "11",
		"statement": 27
	  },
	  "2618": {
		"fn": "BetContract.publishBet",
		"offset": [
		  4121,
		  4131
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2619": {
		"fn": "BetContract.publishBet",
		"offset": [
		  4107,
		  4152
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "2620": {
		"fn": "BetContract.publishBet",
		"offset": [
		  4107,
		  4152
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "2621": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3953,
		  3959
		],
		"op": "DUP6",
		"path": "11"
	  },
	  "2622": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3953,
		  3959
		],
		"op": "SWAP4",
		"path": "11"
	  },
	  "2623": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3974,
		  3984
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "2624": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3974,
		  3984
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "2625": {
		"fn": "BetContract.publishBet",
		"offset": [
		  4107,
		  4152
		],
		"op": "PUSH32",
		"path": "11",
		"value": "0x8AC3A030ABE983D724DC055182198435D38E966970592F8AB4015E6B0EACB62A"
	  },
	  "2658": {
		"fn": "BetContract.publishBet",
		"offset": [
		  4107,
		  4152
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "2659": {
		"fn": "BetContract.publishBet",
		"offset": [
		  4107,
		  4152
		],
		"op": "LOG4",
		"path": "11"
	  },
	  "2660": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3620,
		  4159
		],
		"op": "POP",
		"path": "11"
	  },
	  "2661": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3620,
		  4159
		],
		"op": "POP",
		"path": "11"
	  },
	  "2662": {
		"fn": "BetContract.publishBet",
		"offset": [
		  3620,
		  4159
		],
		"op": "POP",
		"path": "11"
	  },
	  "2663": {
		"fn": "BetContract.publishBet",
		"jump": "o",
		"offset": [
		  3620,
		  4159
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "2664": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5337,
		  5684
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2665": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5393,
		  5397
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "2667": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5393,
		  5397
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "2668": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5472,
		  5473
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x1"
	  },
	  "2670": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5459,
		  5639
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2671": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5481,
		  5491
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x9"
	  },
	  "2673": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5481,
		  5491
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2674": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5475,
		  5476
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2675": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5475,
		  5491
		],
		"op": "GT",
		"path": "11"
	  },
	  "2676": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5459,
		  5639
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xAE2"
	  },
	  "2679": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5459,
		  5639
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "2680": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5516,
		  5523
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "2682": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5516,
		  5523
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2683": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5516,
		  5523
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2684": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5516,
		  5523
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2685": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5516,
		  5520
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xC"
	  },
	  "2687": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5516,
		  5523
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "2689": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5516,
		  5523
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2690": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5516,
		  5523
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "2692": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5516,
		  5523
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2693": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5516,
		  5523
		],
		"op": "KECCAK256",
		"path": "11"
	  },
	  "2694": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5516,
		  5534
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x6"
	  },
	  "2696": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5516,
		  5534
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2697": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5516,
		  5534
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2698": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "2700": {
		"op": "PUSH1",
		"value": "0xA8"
	  },
	  "2702": {
		"op": "SHL"
	  },
	  "2703": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5516,
		  5534
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2704": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5516,
		  5534
		],
		"op": "DIV",
		"path": "11"
	  },
	  "2705": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5516,
		  5534
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xFF"
	  },
	  "2707": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5516,
		  5534
		],
		"op": "AND",
		"path": "11"
	  },
	  "2708": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5516,
		  5543
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "2709": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5516,
		  5543
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "2710": {
		"branch": 103,
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5516,
		  5543
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "2711": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5516,
		  5570
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xABD"
	  },
	  "2714": {
		"branch": 103,
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5516,
		  5570
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "2715": {
		"op": "POP"
	  },
	  "2716": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5547,
		  5554
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "2718": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5547,
		  5554
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2719": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5547,
		  5554
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2720": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5547,
		  5554
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2721": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5547,
		  5551
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xC"
	  },
	  "2723": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5547,
		  5554
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "2725": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5547,
		  5554
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2726": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5547,
		  5554
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "2728": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5547,
		  5554
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2729": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5547,
		  5554
		],
		"op": "KECCAK256",
		"path": "11"
	  },
	  "2730": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5547,
		  5562
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x6"
	  },
	  "2732": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5547,
		  5562
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2733": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5547,
		  5562
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2734": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "2736": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "2738": {
		"op": "SHL"
	  },
	  "2739": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5547,
		  5562
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2740": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5547,
		  5562
		],
		"op": "DIV",
		"path": "11"
	  },
	  "2741": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5547,
		  5562
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xFF"
	  },
	  "2743": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5547,
		  5562
		],
		"op": "AND",
		"path": "11"
	  },
	  "2744": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5547,
		  5570
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "2745": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5547,
		  5570
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "2746": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5566,
		  5570
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x1"
	  },
	  "2748": {
		"branch": 104,
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5547,
		  5570
		],
		"op": "EQ",
		"path": "11"
	  },
	  "2749": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5516,
		  5570
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2750": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5513,
		  5629
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "2751": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5513,
		  5629
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xAD0"
	  },
	  "2754": {
		"branch": 104,
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5513,
		  5629
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "2755": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5591,
		  5614
		],
		"op": "DUP2",
		"path": "11",
		"statement": 28
	  },
	  "2756": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5591,
		  5614
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xACC"
	  },
	  "2759": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5591,
		  5614
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2760": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5591,
		  5614
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x172D"
	  },
	  "2763": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"jump": "i",
		"offset": [
		  5591,
		  5614
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "2764": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5591,
		  5614
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2765": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5591,
		  5614
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "2766": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5591,
		  5614
		],
		"op": "POP",
		"path": "11"
	  },
	  "2767": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5591,
		  5614
		],
		"op": "POP",
		"path": "11"
	  },
	  "2768": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5513,
		  5629
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2769": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5494,
		  5497
		],
		"op": "DUP1",
		"path": "11",
		"statement": 29
	  },
	  "2770": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5494,
		  5497
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xADA"
	  },
	  "2773": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5494,
		  5497
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2774": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5494,
		  5497
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x172D"
	  },
	  "2777": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"jump": "i",
		"offset": [
		  5494,
		  5497
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "2778": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5494,
		  5497
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2779": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5494,
		  5497
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "2780": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5494,
		  5497
		],
		"op": "POP",
		"path": "11"
	  },
	  "2781": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5494,
		  5497
		],
		"op": "POP",
		"path": "11"
	  },
	  "2782": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5459,
		  5639
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xA6E"
	  },
	  "2785": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5459,
		  5639
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "2786": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5459,
		  5639
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2787": {
		"op": "POP"
	  },
	  "2788": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5656,
		  5677
		],
		"op": "SWAP2",
		"path": "11",
		"statement": 30
	  },
	  "2789": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"offset": [
		  5337,
		  5684
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2790": {
		"op": "POP"
	  },
	  "2791": {
		"fn": "BetContract.getNumberOfAvailableBets",
		"jump": "o",
		"offset": [
		  5337,
		  5684
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "2792": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2488,
		  3105
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2793": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2534,
		  2556
		],
		"op": "PUSH2",
		"path": "11",
		"statement": 31,
		"value": "0xAF0"
	  },
	  "2796": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2534,
		  2554
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xC2D"
	  },
	  "2799": {
		"fn": "BetContract.upkeep_setWinner",
		"jump": "i",
		"offset": [
		  2534,
		  2556
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "2800": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2534,
		  2556
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2801": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2574,
		  2581
		],
		"op": "PUSH1",
		"path": "11",
		"statement": 32,
		"value": "0x6"
	  },
	  "2803": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2574,
		  2581
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2804": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2585,
		  2586
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x1"
	  },
	  "2806": {
		"branch": 105,
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2574,
		  2586
		],
		"op": "EQ",
		"path": "11"
	  },
	  "2807": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2574,
		  2602
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "2808": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2574,
		  2602
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xB03"
	  },
	  "2811": {
		"branch": 105,
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2574,
		  2602
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "2812": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2574,
		  2602
		],
		"op": "POP",
		"path": "11"
	  },
	  "2813": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2590,
		  2597
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x7"
	  },
	  "2815": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2590,
		  2597
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2816": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2601,
		  2602
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x1"
	  },
	  "2818": {
		"branch": 106,
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2590,
		  2602
		],
		"op": "EQ",
		"path": "11"
	  },
	  "2819": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2574,
		  2602
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2820": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2566,
		  2603
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xB0C"
	  },
	  "2823": {
		"branch": 106,
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2566,
		  2603
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "2824": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2566,
		  2603
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "2826": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2566,
		  2603
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "2827": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2566,
		  2603
		],
		"op": "REVERT",
		"path": "11"
	  },
	  "2828": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2566,
		  2603
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2829": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2627,
		  2628
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x1"
	  },
	  "2831": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2614,
		  3098
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2832": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2635,
		  2645
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x9"
	  },
	  "2834": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2635,
		  2645
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2835": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2630,
		  2631
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2836": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2630,
		  2645
		],
		"op": "GT",
		"path": "11"
	  },
	  "2837": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2614,
		  3098
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xC2A"
	  },
	  "2840": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2614,
		  3098
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "2841": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2696,
		  2709
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x8"
	  },
	  "2843": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2696,
		  2709
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2844": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2678,
		  2685
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "2846": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2678,
		  2685
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "2847": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2678,
		  2685
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2848": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2678,
		  2685
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2849": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2678,
		  2682
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xC"
	  },
	  "2851": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2678,
		  2685
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "2853": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2678,
		  2685
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2854": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2678,
		  2685
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "2856": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2678,
		  2685
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2857": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2678,
		  2685
		],
		"op": "KECCAK256",
		"path": "11"
	  },
	  "2858": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2678,
		  2692
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x1"
	  },
	  "2860": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2678,
		  2692
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2861": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2678,
		  2692
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2862": {
		"branch": 107,
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2678,
		  2709
		],
		"op": "SUB",
		"path": "11"
	  },
	  "2863": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2674,
		  3088
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xC18"
	  },
	  "2866": {
		"branch": 107,
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2674,
		  3088
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "2867": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2735,
		  2742
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "2869": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2735,
		  2742
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2870": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2735,
		  2742
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2871": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2735,
		  2742
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2872": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2735,
		  2739
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xC"
	  },
	  "2874": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2735,
		  2742
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "2876": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2735,
		  2742
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2877": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2735,
		  2742
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "2879": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2735,
		  2742
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2880": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2735,
		  2742
		],
		"op": "KECCAK256",
		"path": "11"
	  },
	  "2881": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2735,
		  2753
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x2"
	  },
	  "2883": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2735,
		  2753
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2884": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2735,
		  2753
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2885": {
		"branch": 108,
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2735,
		  2758
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "2886": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2735,
		  2774
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "2887": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2735,
		  2774
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "2888": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2735,
		  2774
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xB51"
	  },
	  "2891": {
		"branch": 108,
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2735,
		  2774
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "2892": {
		"op": "POP"
	  },
	  "2893": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2762,
		  2769
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x7"
	  },
	  "2895": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2762,
		  2769
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2896": {
		"branch": 109,
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2762,
		  2774
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "2897": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2735,
		  2774
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2898": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2734,
		  2820
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "2899": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2734,
		  2820
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xB7A"
	  },
	  "2902": {
		"branch": 109,
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2734,
		  2820
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "2903": {
		"op": "POP"
	  },
	  "2904": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2780,
		  2787
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "2906": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2780,
		  2787
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2907": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2780,
		  2787
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2908": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2780,
		  2787
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2909": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2780,
		  2784
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xC"
	  },
	  "2911": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2780,
		  2787
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "2913": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2780,
		  2787
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2914": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2780,
		  2787
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "2916": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2780,
		  2787
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2917": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2780,
		  2787
		],
		"op": "KECCAK256",
		"path": "11"
	  },
	  "2918": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2780,
		  2798
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x2"
	  },
	  "2920": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2780,
		  2798
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2921": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2780,
		  2798
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2922": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2802,
		  2803
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x1"
	  },
	  "2924": {
		"branch": 110,
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2780,
		  2803
		],
		"op": "EQ",
		"path": "11"
	  },
	  "2925": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2780,
		  2819
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "2926": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2780,
		  2819
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "2927": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2780,
		  2819
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xB7A"
	  },
	  "2930": {
		"branch": 110,
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2780,
		  2819
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "2931": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2780,
		  2819
		],
		"op": "POP",
		"path": "11"
	  },
	  "2932": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2807,
		  2814
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x7"
	  },
	  "2934": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2807,
		  2814
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2935": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2818,
		  2819
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x1"
	  },
	  "2937": {
		"branch": 111,
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2807,
		  2819
		],
		"op": "EQ",
		"path": "11"
	  },
	  "2938": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2780,
		  2819
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2939": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2730,
		  2894
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "2940": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2730,
		  2894
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xBA5"
	  },
	  "2943": {
		"branch": 111,
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2730,
		  2894
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "2944": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2856,
		  2863
		],
		"op": "PUSH1",
		"path": "11",
		"statement": 33,
		"value": "0x0"
	  },
	  "2946": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2856,
		  2863
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2947": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2856,
		  2863
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2948": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2856,
		  2863
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2949": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2856,
		  2860
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xC"
	  },
	  "2951": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2856,
		  2863
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "2953": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2856,
		  2863
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2954": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2856,
		  2863
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "2956": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2856,
		  2863
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2957": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2856,
		  2863
		],
		"op": "KECCAK256",
		"path": "11"
	  },
	  "2958": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2856,
		  2874
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x4"
	  },
	  "2960": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2856,
		  2874
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2961": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2856,
		  2874
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "2962": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2843,
		  2875
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xBA5"
	  },
	  "2965": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2843,
		  2875
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2966": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2853,
		  2854
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "2967": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2853,
		  2854
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2968": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "2970": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "2972": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "2974": {
		"op": "SHL"
	  },
	  "2975": {
		"op": "SUB"
	  },
	  "2976": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2856,
		  2874
		],
		"op": "AND",
		"path": "11"
	  },
	  "2977": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2843,
		  2852
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xDD9"
	  },
	  "2980": {
		"fn": "BetContract.upkeep_setWinner",
		"jump": "i",
		"offset": [
		  2843,
		  2875
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "2981": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2843,
		  2875
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "2982": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2917,
		  2924
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "2984": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2917,
		  2924
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2985": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2917,
		  2924
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "2986": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2917,
		  2924
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2987": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2917,
		  2921
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xC"
	  },
	  "2989": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2917,
		  2924
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "2991": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2917,
		  2924
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "2992": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2917,
		  2924
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "2994": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2917,
		  2924
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "2995": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2917,
		  2924
		],
		"op": "KECCAK256",
		"path": "11"
	  },
	  "2996": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2917,
		  2935
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x2"
	  },
	  "2998": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2917,
		  2935
		],
		"op": "ADD",
		"path": "11"
	  },
	  "2999": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2917,
		  2935
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "3000": {
		"branch": 112,
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2917,
		  2940
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "3001": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2917,
		  2956
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3002": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2917,
		  2956
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "3003": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2917,
		  2956
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xBC6"
	  },
	  "3006": {
		"branch": 112,
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2917,
		  2956
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "3007": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2917,
		  2956
		],
		"op": "POP",
		"path": "11"
	  },
	  "3008": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2944,
		  2951
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x7"
	  },
	  "3010": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2944,
		  2951
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "3011": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2955,
		  2956
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x1"
	  },
	  "3013": {
		"branch": 113,
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2944,
		  2956
		],
		"op": "EQ",
		"path": "11"
	  },
	  "3014": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2917,
		  2956
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "3015": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2916,
		  3002
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3016": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2916,
		  3002
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xBED"
	  },
	  "3019": {
		"branch": 113,
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2916,
		  3002
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "3020": {
		"op": "POP"
	  },
	  "3021": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2962,
		  2969
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "3023": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2962,
		  2969
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3024": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2962,
		  2969
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3025": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2962,
		  2969
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3026": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2962,
		  2966
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xC"
	  },
	  "3028": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2962,
		  2969
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "3030": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2962,
		  2969
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3031": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2962,
		  2969
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3033": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2962,
		  2969
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3034": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2962,
		  2969
		],
		"op": "KECCAK256",
		"path": "11"
	  },
	  "3035": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2962,
		  2980
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x2"
	  },
	  "3037": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2962,
		  2980
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3038": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2962,
		  2980
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "3039": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2984,
		  2985
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x1"
	  },
	  "3041": {
		"branch": 114,
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2962,
		  2985
		],
		"op": "EQ",
		"path": "11"
	  },
	  "3042": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2962,
		  3001
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3043": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2962,
		  3001
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "3044": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2962,
		  3001
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xBED"
	  },
	  "3047": {
		"branch": 114,
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2962,
		  3001
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "3048": {
		"op": "POP"
	  },
	  "3049": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2989,
		  2996
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x7"
	  },
	  "3051": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2989,
		  2996
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "3052": {
		"branch": 115,
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2989,
		  3001
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "3053": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2962,
		  3001
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "3054": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2912,
		  3074
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "3055": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2912,
		  3074
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xC18"
	  },
	  "3058": {
		"branch": 115,
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2912,
		  3074
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "3059": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  3038,
		  3045
		],
		"op": "PUSH1",
		"path": "11",
		"statement": 34,
		"value": "0x0"
	  },
	  "3061": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  3038,
		  3045
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3062": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  3038,
		  3045
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3063": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  3038,
		  3045
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3064": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  3038,
		  3042
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xC"
	  },
	  "3066": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  3038,
		  3045
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "3068": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  3038,
		  3045
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3069": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  3038,
		  3045
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3071": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  3038,
		  3045
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3072": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  3038,
		  3045
		],
		"op": "KECCAK256",
		"path": "11"
	  },
	  "3073": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  3038,
		  3054
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x5"
	  },
	  "3075": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  3038,
		  3054
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3076": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  3038,
		  3054
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "3077": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  3025,
		  3055
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xC18"
	  },
	  "3080": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  3025,
		  3055
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3081": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  3035,
		  3036
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "3082": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  3035,
		  3036
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3083": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "3085": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "3087": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "3089": {
		"op": "SHL"
	  },
	  "3090": {
		"op": "SUB"
	  },
	  "3091": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  3038,
		  3054
		],
		"op": "AND",
		"path": "11"
	  },
	  "3092": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  3025,
		  3034
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xDD9"
	  },
	  "3095": {
		"fn": "BetContract.upkeep_setWinner",
		"jump": "i",
		"offset": [
		  3025,
		  3055
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "3096": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  3025,
		  3055
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "3097": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2647,
		  2650
		],
		"op": "DUP1",
		"path": "11",
		"statement": 35
	  },
	  "3098": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2647,
		  2650
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xC22"
	  },
	  "3101": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2647,
		  2650
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3102": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2647,
		  2650
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x172D"
	  },
	  "3105": {
		"fn": "BetContract.upkeep_setWinner",
		"jump": "i",
		"offset": [
		  2647,
		  2650
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "3106": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2647,
		  2650
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "3107": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2647,
		  2650
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "3108": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2647,
		  2650
		],
		"op": "POP",
		"path": "11"
	  },
	  "3109": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2647,
		  2650
		],
		"op": "POP",
		"path": "11"
	  },
	  "3110": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2614,
		  3098
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xB0F"
	  },
	  "3113": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2614,
		  3098
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "3114": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2614,
		  3098
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "3115": {
		"fn": "BetContract.upkeep_setWinner",
		"offset": [
		  2614,
		  3098
		],
		"op": "POP",
		"path": "11"
	  },
	  "3116": {
		"fn": "BetContract.upkeep_setWinner",
		"jump": "o",
		"offset": [
		  2488,
		  3105
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "3117": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1649,
		  2163
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "3118": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1701,
		  1729
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "3120": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1732,
		  1818
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xC43"
	  },
	  "3123": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1754,
		  1767
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xA"
	  },
	  "3125": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1754,
		  1767
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "3126": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1777,
		  1781
		],
		"op": "ADDRESS",
		"path": "11"
	  },
	  "3127": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1784,
		  1817
		],
		"op": "PUSH4",
		"path": "11",
		"value": "0x6B42E3B5"
	  },
	  "3132": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1784,
		  1817
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xE0"
	  },
	  "3134": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1784,
		  1817
		],
		"op": "SHL",
		"path": "11"
	  },
	  "3135": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1732,
		  1753
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xECD"
	  },
	  "3138": {
		"fn": "BetContract.requestMultiVariable",
		"jump": "i",
		"offset": [
		  1732,
		  1818
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "3139": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1732,
		  1818
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "3140": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1701,
		  1818
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3141": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1701,
		  1818
		],
		"op": "POP",
		"path": "11"
	  },
	  "3142": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "PUSH2",
		"path": "11",
		"statement": 36,
		"value": "0xC85"
	  },
	  "3145": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3147": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "3148": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3149": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3151": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3152": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3154": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3155": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3156": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x3"
	  },
	  "3158": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3159": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3160": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "3162": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3163": {
		"op": "PUSH3",
		"value": "0x19D95D"
	  },
	  "3167": {
		"op": "PUSH1",
		"value": "0xEA"
	  },
	  "3169": {
		"op": "SHL"
	  },
	  "3170": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3171": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3172": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "POP",
		"path": "11"
	  },
	  "3173": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3175": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "3176": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3177": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xA0"
	  },
	  "3179": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3180": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3182": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3183": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3184": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x71"
	  },
	  "3186": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3187": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3188": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "3190": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3191": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x197A"
	  },
	  "3194": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x71"
	  },
	  "3196": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "3197": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "CODECOPY",
		"path": "11"
	  },
	  "3198": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1831
		],
		"op": "DUP4",
		"path": "11"
	  },
	  "3199": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1831
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "3200": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3201": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1835
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xEF2"
	  },
	  "3204": {
		"fn": "BetContract.requestMultiVariable",
		"jump": "i",
		"offset": [
		  1828,
		  1959
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "3205": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1828,
		  1959
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "3206": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "PUSH2",
		"path": "11",
		"statement": 37,
		"value": "0xCD5"
	  },
	  "3209": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3211": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "3212": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3213": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3215": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3216": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3218": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3219": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3220": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x5"
	  },
	  "3222": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3223": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3224": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "3226": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3227": {
		"op": "PUSH5",
		"value": "0x7061746831"
	  },
	  "3233": {
		"op": "PUSH1",
		"value": "0xD8"
	  },
	  "3235": {
		"op": "SHL"
	  },
	  "3236": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3237": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3238": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "POP",
		"path": "11"
	  },
	  "3239": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3241": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "3242": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3243": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3245": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3246": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3248": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3249": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3250": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x6"
	  },
	  "3252": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3253": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3254": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "3256": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3257": {
		"op": "PUSH6",
		"value": "0x302C4E616D65"
	  },
	  "3264": {
		"op": "PUSH1",
		"value": "0xD0"
	  },
	  "3266": {
		"op": "SHL"
	  },
	  "3267": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3268": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3269": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "POP",
		"path": "11"
	  },
	  "3270": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1972
		],
		"op": "DUP4",
		"path": "11"
	  },
	  "3271": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1976
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xEF2"
	  },
	  "3274": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1976
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3275": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "3276": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "3277": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3278": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "PUSH4",
		"path": "11",
		"value": "0xFFFFFFFF"
	  },
	  "3283": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "AND",
		"path": "11"
	  },
	  "3284": {
		"fn": "BetContract.requestMultiVariable",
		"jump": "i",
		"offset": [
		  1969,
		  1995
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "3285": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1969,
		  1995
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "3286": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "PUSH2",
		"path": "11",
		"statement": 38,
		"value": "0xD25"
	  },
	  "3289": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3291": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "3292": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3293": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3295": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3296": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3298": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3299": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3300": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x5"
	  },
	  "3302": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3303": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3304": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "3306": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3307": {
		"op": "PUSH5",
		"value": "0x3830BA3419"
	  },
	  "3313": {
		"op": "PUSH1",
		"value": "0xD9"
	  },
	  "3315": {
		"op": "SHL"
	  },
	  "3316": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3317": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3318": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "POP",
		"path": "11"
	  },
	  "3319": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3321": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "3322": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3323": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3325": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3326": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3328": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3329": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3330": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x6"
	  },
	  "3332": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3333": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3334": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "3336": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3337": {
		"op": "PUSH6",
		"value": "0x302C57696E73"
	  },
	  "3344": {
		"op": "PUSH1",
		"value": "0xD0"
	  },
	  "3346": {
		"op": "SHL"
	  },
	  "3347": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3348": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3349": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "POP",
		"path": "11"
	  },
	  "3350": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2008
		],
		"op": "DUP4",
		"path": "11"
	  },
	  "3351": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2012
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xEF2"
	  },
	  "3354": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2012
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3355": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "3356": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "3357": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3358": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "PUSH4",
		"path": "11",
		"value": "0xFFFFFFFF"
	  },
	  "3363": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "AND",
		"path": "11"
	  },
	  "3364": {
		"fn": "BetContract.requestMultiVariable",
		"jump": "i",
		"offset": [
		  2005,
		  2031
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "3365": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2005,
		  2031
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "3366": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "PUSH2",
		"path": "11",
		"statement": 39,
		"value": "0xD77"
	  },
	  "3369": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3371": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "3372": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3373": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3375": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3376": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3378": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3379": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3380": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x5"
	  },
	  "3382": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3383": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3384": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "3386": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3387": {
		"op": "PUSH5",
		"value": "0x7061746833"
	  },
	  "3393": {
		"op": "PUSH1",
		"value": "0xD8"
	  },
	  "3395": {
		"op": "SHL"
	  },
	  "3396": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3397": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3398": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "POP",
		"path": "11"
	  },
	  "3399": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3401": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "3402": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3403": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3405": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3406": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3408": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3409": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3410": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x8"
	  },
	  "3412": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3413": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3414": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "3416": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3417": {
		"op": "PUSH8",
		"value": "0x302C4C6F73736573"
	  },
	  "3426": {
		"op": "PUSH1",
		"value": "0xC0"
	  },
	  "3428": {
		"op": "SHL"
	  },
	  "3429": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3430": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3431": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "POP",
		"path": "11"
	  },
	  "3432": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2044
		],
		"op": "DUP4",
		"path": "11"
	  },
	  "3433": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2048
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xEF2"
	  },
	  "3436": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2048
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3437": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "3438": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "3439": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3440": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "PUSH4",
		"path": "11",
		"value": "0xFFFFFFFF"
	  },
	  "3445": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "AND",
		"path": "11"
	  },
	  "3446": {
		"fn": "BetContract.requestMultiVariable",
		"jump": "i",
		"offset": [
		  2041,
		  2069
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "3447": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2041,
		  2069
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "3448": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "PUSH2",
		"path": "11",
		"statement": 40,
		"value": "0xDC9"
	  },
	  "3451": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3453": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "3454": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3455": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3457": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3458": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3460": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3461": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3462": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x5"
	  },
	  "3464": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3465": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3466": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "3468": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3469": {
		"op": "PUSH5",
		"value": "0x1C185D1A0D"
	  },
	  "3475": {
		"op": "PUSH1",
		"value": "0xDA"
	  },
	  "3477": {
		"op": "SHL"
	  },
	  "3478": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3479": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3480": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "POP",
		"path": "11"
	  },
	  "3481": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3483": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "3484": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3485": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3487": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3488": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3490": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3491": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3492": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x8"
	  },
	  "3494": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3495": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3496": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "3498": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3499": {
		"op": "PUSH8",
		"value": "0xC0B11D85B595251"
	  },
	  "3508": {
		"op": "PUSH1",
		"value": "0xC2"
	  },
	  "3510": {
		"op": "SHL"
	  },
	  "3511": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3512": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3513": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "POP",
		"path": "11"
	  },
	  "3514": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2082
		],
		"op": "DUP4",
		"path": "11"
	  },
	  "3515": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2086
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xEF2"
	  },
	  "3518": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2086
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3519": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "SWAP3",
		"path": "11"
	  },
	  "3520": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "3521": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3522": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "PUSH4",
		"path": "11",
		"value": "0xFFFFFFFF"
	  },
	  "3527": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "AND",
		"path": "11"
	  },
	  "3528": {
		"fn": "BetContract.requestMultiVariable",
		"jump": "i",
		"offset": [
		  2079,
		  2107
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "3529": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2079,
		  2107
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "3530": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2117,
		  2156
		],
		"op": "PUSH2",
		"path": "11",
		"statement": 41,
		"value": "0xDD5"
	  },
	  "3533": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2137,
		  2140
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3534": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2142,
		  2155
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xB"
	  },
	  "3536": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2142,
		  2155
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "3537": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2117,
		  2136
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xF15"
	  },
	  "3540": {
		"fn": "BetContract.requestMultiVariable",
		"jump": "i",
		"offset": [
		  2117,
		  2156
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "3541": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2117,
		  2156
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "3542": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  2117,
		  2156
		],
		"op": "POP",
		"path": "11"
	  },
	  "3543": {
		"fn": "BetContract.requestMultiVariable",
		"offset": [
		  1690,
		  2163
		],
		"op": "POP",
		"path": "11"
	  },
	  "3544": {
		"fn": "BetContract.requestMultiVariable",
		"jump": "o",
		"offset": [
		  1649,
		  2163
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "3545": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3156,
		  3584
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "3546": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3222,
		  3230
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "3548": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3222,
		  3230
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "3549": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3222,
		  3230
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3550": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3222,
		  3230
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3551": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3222,
		  3226
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xC"
	  },
	  "3553": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3222,
		  3230
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "3555": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3222,
		  3230
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3556": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3222,
		  3230
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3558": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3222,
		  3230
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3559": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3222,
		  3230
		],
		"op": "KECCAK256",
		"path": "11"
	  },
	  "3560": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3222,
		  3238
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x6"
	  },
	  "3562": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3222,
		  3238
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3563": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3222,
		  3238
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "3564": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "3566": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "3568": {
		"op": "SHL"
	  },
	  "3569": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3222,
		  3238
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3570": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3222,
		  3238
		],
		"op": "DIV",
		"path": "11"
	  },
	  "3571": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3222,
		  3238
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xFF"
	  },
	  "3573": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3222,
		  3238
		],
		"op": "AND",
		"path": "11"
	  },
	  "3574": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3222,
		  3247
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "3575": {
		"branch": 116,
		"fn": "BetContract.close_bet",
		"offset": [
		  3222,
		  3247
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3576": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3222,
		  3279
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xE1A"
	  },
	  "3579": {
		"branch": 116,
		"fn": "BetContract.close_bet",
		"offset": [
		  3222,
		  3279
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "3580": {
		"op": "POP"
	  },
	  "3581": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3251,
		  3259
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "3583": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3251,
		  3259
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "3584": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3251,
		  3259
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3585": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3251,
		  3259
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3586": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3251,
		  3255
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xC"
	  },
	  "3588": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3251,
		  3259
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "3590": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3251,
		  3259
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3591": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3251,
		  3259
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3593": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3251,
		  3259
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3594": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3251,
		  3259
		],
		"op": "KECCAK256",
		"path": "11"
	  },
	  "3595": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3251,
		  3270
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x6"
	  },
	  "3597": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3251,
		  3270
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3598": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3251,
		  3270
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "3599": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "3601": {
		"op": "PUSH1",
		"value": "0xA8"
	  },
	  "3603": {
		"op": "SHL"
	  },
	  "3604": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3251,
		  3270
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3605": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3251,
		  3270
		],
		"op": "DIV",
		"path": "11"
	  },
	  "3606": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3251,
		  3270
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xFF"
	  },
	  "3608": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3251,
		  3270
		],
		"op": "AND",
		"path": "11"
	  },
	  "3609": {
		"branch": 117,
		"fn": "BetContract.close_bet",
		"offset": [
		  3251,
		  3279
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "3610": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3222,
		  3279
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "3611": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3218,
		  3312
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "3612": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3218,
		  3312
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xE23"
	  },
	  "3615": {
		"branch": 117,
		"fn": "BetContract.close_bet",
		"offset": [
		  3218,
		  3312
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "3616": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3156,
		  3584
		],
		"op": "POP",
		"path": "11"
	  },
	  "3617": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3156,
		  3584
		],
		"op": "POP",
		"path": "11"
	  },
	  "3618": {
		"fn": "BetContract.close_bet",
		"jump": "o",
		"offset": [
		  3156,
		  3584
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "3619": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3218,
		  3312
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "3620": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3330,
		  3338
		],
		"op": "PUSH1",
		"path": "11",
		"statement": 42,
		"value": "0x0"
	  },
	  "3622": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3330,
		  3338
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "3623": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3330,
		  3338
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3624": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3330,
		  3338
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3625": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3330,
		  3334
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0xC"
	  },
	  "3627": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3330,
		  3338
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x20"
	  },
	  "3629": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3330,
		  3338
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3630": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3330,
		  3338
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3632": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3330,
		  3338
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3633": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3330,
		  3338
		],
		"op": "KECCAK256",
		"path": "11"
	  },
	  "3634": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3330,
		  3345
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x6"
	  },
	  "3636": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3330,
		  3345
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3637": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3330,
		  3345
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3638": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3330,
		  3351
		],
		"op": "DUP1",
		"path": "11"
	  },
	  "3639": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3330,
		  3351
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "3640": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "3642": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "3644": {
		"op": "PUSH1",
		"value": "0xA8"
	  },
	  "3646": {
		"op": "SHL"
	  },
	  "3647": {
		"op": "SUB"
	  },
	  "3648": {
		"op": "NOT"
	  },
	  "3649": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3361,
		  3385
		],
		"op": "AND",
		"path": "11",
		"statement": 43
	  },
	  "3650": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "3652": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "3654": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "3656": {
		"op": "SHL"
	  },
	  "3657": {
		"op": "SUB"
	  },
	  "3658": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3330,
		  3351
		],
		"op": "DUP6",
		"path": "11"
	  },
	  "3659": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3330,
		  3351
		],
		"op": "AND",
		"path": "11"
	  },
	  "3660": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3361,
		  3385
		],
		"op": "OR",
		"path": "11"
	  },
	  "3661": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3361,
		  3385
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3662": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3361,
		  3385
		],
		"op": "SSTORE",
		"path": "11"
	  },
	  "3663": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3421,
		  3435
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x3"
	  },
	  "3665": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3421,
		  3435
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3666": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3421,
		  3435
		],
		"op": "SLOAD",
		"path": "11"
	  },
	  "3667": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3421,
		  3439
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0xE5D"
	  },
	  "3670": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3421,
		  3439
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3671": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3438,
		  3439
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x2"
	  },
	  "3673": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3421,
		  3439
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x1746"
	  },
	  "3676": {
		"fn": "BetContract.close_bet",
		"jump": "i",
		"offset": [
		  3421,
		  3439
		],
		"op": "JUMP",
		"path": "11"
	  },
	  "3677": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3421,
		  3439
		],
		"op": "JUMPDEST",
		"path": "11"
	  },
	  "3678": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3510,
		  3525
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3680": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3510,
		  3525
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "3681": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3404,
		  3439
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3682": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3404,
		  3439
		],
		"op": "SWAP2",
		"path": "11"
	  },
	  "3683": {
		"op": "POP"
	  },
	  "3684": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3478,
		  3481
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "3685": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3478,
		  3481
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3686": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3449,
		  3467
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x0"
	  },
	  "3688": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3449,
		  3467
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3689": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "3691": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "3693": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "3695": {
		"op": "SHL"
	  },
	  "3696": {
		"op": "SUB"
	  },
	  "3697": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3510,
		  3517
		],
		"op": "DUP4",
		"path": "11"
	  },
	  "3698": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3510,
		  3517
		],
		"op": "AND",
		"path": "11"
	  },
	  "3699": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3510,
		  3517
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3700": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3510,
		  3525
		],
		"op": "DUP5",
		"path": "11"
	  },
	  "3701": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3510,
		  3525
		],
		"op": "ISZERO",
		"path": "11"
	  },
	  "3702": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3510,
		  3525
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x8FC"
	  },
	  "3705": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3510,
		  3525
		],
		"op": "MUL",
		"path": "11"
	  },
	  "3706": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3510,
		  3525
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3707": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3404,
		  3439
		],
		"op": "DUP6",
		"path": "11"
	  },
	  "3708": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3404,
		  3439
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3709": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3449,
		  3467
		],
		"op": "DUP5",
		"path": "11"
	  },
	  "3710": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3510,
		  3525
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3711": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3449,
		  3467
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3712": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3510,
		  3525
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3713": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3404,
		  3439
		],
		"op": "DUP6",
		"path": "11"
	  },
	  "3714": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3510,
		  3517
		],
		"op": "DUP9",
		"path": "11"
	  },
	  "3715": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3510,
		  3525
		],
		"op": "DUP9",
		"path": "11"
	  },
	  "3716": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3510,
		  3525
		],
		"op": "CALL",
		"path": "11"
	  },
	  "3717": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3510,
		  3525
		],
		"op": "SWAP4",
		"path": "11"
	  },
	  "3718": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3510,
		  3525
		],
		"op": "POP",
		"path": "11"
	  },
	  "3719": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3510,
		  3525
		],
		"op": "POP",
		"path": "11"
	  },
	  "3720": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3510,
		  3525
		],
		"op": "POP",
		"path": "11"
	  },
	  "3721": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3510,
		  3525
		],
		"op": "POP",
		"path": "11"
	  },
	  "3722": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3493,
		  3525
		],
		"op": "SWAP1",
		"path": "11"
	  },
	  "3723": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3493,
		  3525
		],
		"op": "POP",
		"path": "11"
	  },
	  "3724": {
		"branch": 118,
		"fn": "BetContract.close_bet",
		"offset": [
		  3543,
		  3552
		],
		"op": "DUP1",
		"path": "11",
		"statement": 44
	  },
	  "3725": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3535,
		  3575
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x3E6"
	  },
	  "3728": {
		"branch": 118,
		"fn": "BetContract.close_bet",
		"offset": [
		  3535,
		  3575
		],
		"op": "JUMPI",
		"path": "11"
	  },
	  "3729": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3535,
		  3575
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x40"
	  },
	  "3731": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3535,
		  3575
		],
		"op": "MLOAD",
		"path": "11"
	  },
	  "3732": {
		"op": "PUSH3",
		"value": "0x461BCD"
	  },
	  "3736": {
		"op": "PUSH1",
		"value": "0xE5"
	  },
	  "3738": {
		"op": "SHL"
	  },
	  "3739": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3535,
		  3575
		],
		"op": "DUP2",
		"path": "11"
	  },
	  "3740": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3535,
		  3575
		],
		"op": "MSTORE",
		"path": "11"
	  },
	  "3741": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "3743": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3535,
		  3575
		],
		"op": "PUSH1",
		"path": "11",
		"value": "0x4"
	  },
	  "3745": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3535,
		  3575
		],
		"op": "DUP3",
		"path": "11"
	  },
	  "3746": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3535,
		  3575
		],
		"op": "ADD",
		"path": "11"
	  },
	  "3747": {
		"op": "MSTORE"
	  },
	  "3748": {
		"op": "PUSH1",
		"value": "0x12"
	  },
	  "3750": {
		"op": "PUSH1",
		"value": "0x24"
	  },
	  "3752": {
		"op": "DUP3"
	  },
	  "3753": {
		"op": "ADD"
	  },
	  "3754": {
		"op": "MSTORE"
	  },
	  "3755": {
		"op": "PUSH18",
		"value": "0x151C985B9CD858DD1A5BDB8811985A5B1959"
	  },
	  "3774": {
		"op": "PUSH1",
		"value": "0x72"
	  },
	  "3776": {
		"op": "SHL"
	  },
	  "3777": {
		"op": "PUSH1",
		"value": "0x44"
	  },
	  "3779": {
		"op": "DUP3"
	  },
	  "3780": {
		"op": "ADD"
	  },
	  "3781": {
		"op": "MSTORE"
	  },
	  "3782": {
		"op": "PUSH1",
		"value": "0x64"
	  },
	  "3784": {
		"op": "ADD"
	  },
	  "3785": {
		"fn": "BetContract.close_bet",
		"offset": [
		  3535,
		  3575
		],
		"op": "PUSH2",
		"path": "11",
		"value": "0x30F"
	  },
	  "3788": {
		"op": "JUMP"
	  },
	  "3789": {
		"fn": "ChainlinkClient.buildChainlinkRequest",
		"offset": [
		  1850,
		  2133
		],
		"op": "JUMPDEST",
		"path": "1"
	  },
	  "3790": {
		"fn": "ChainlinkClient.buildChainlinkRequest",
		"offset": [
		  1992,
		  2016
		],
		"op": "PUSH2",
		"path": "1",
		"value": "0xED5"
	  },
	  "3793": {
		"fn": "ChainlinkClient.buildChainlinkRequest",
		"offset": [
		  1992,
		  2016
		],
		"op": "PUSH2",
		"path": "1",
		"value": "0x155E"
	  },
	  "3796": {
		"fn": "ChainlinkClient.buildChainlinkRequest",
		"jump": "i",
		"offset": [
		  1992,
		  2016
		],
		"op": "JUMP",
		"path": "1"
	  },
	  "3797": {
		"fn": "ChainlinkClient.buildChainlinkRequest",
		"offset": [
		  1992,
		  2016
		],
		"op": "JUMPDEST",
		"path": "1"
	  },
	  "3798": {
		"fn": "ChainlinkClient.buildChainlinkRequest",
		"offset": [
		  2024,
		  2052
		],
		"op": "PUSH2",
		"path": "1",
		"value": "0xEDD"
	  },
	  "3801": {
		"fn": "ChainlinkClient.buildChainlinkRequest",
		"offset": [
		  2024,
		  2052
		],
		"op": "PUSH2",
		"path": "1",
		"value": "0x155E"
	  },
	  "3804": {
		"fn": "ChainlinkClient.buildChainlinkRequest",
		"jump": "i",
		"offset": [
		  2024,
		  2052
		],
		"op": "JUMP",
		"path": "1"
	  },
	  "3805": {
		"fn": "ChainlinkClient.buildChainlinkRequest",
		"offset": [
		  2024,
		  2052
		],
		"op": "JUMPDEST",
		"path": "1"
	  },
	  "3806": {
		"fn": "ChainlinkClient.buildChainlinkRequest",
		"offset": [
		  2065,
		  2128
		],
		"op": "PUSH2",
		"path": "1",
		"statement": 45,
		"value": "0xEE9"
	  },
	  "3809": {
		"fn": "ChainlinkClient.buildChainlinkRequest",
		"offset": [
		  2065,
		  2068
		],
		"op": "DUP2",
		"path": "1"
	  },
	  "3810": {
		"fn": "ChainlinkClient.buildChainlinkRequest",
		"offset": [
		  2080,
		  2086
		],
		"op": "DUP7",
		"path": "1"
	  },
	  "3811": {
		"fn": "ChainlinkClient.buildChainlinkRequest",
		"offset": [
		  2088,
		  2100
		],
		"op": "DUP7",
		"path": "1"
	  },
	  "3812": {
		"fn": "ChainlinkClient.buildChainlinkRequest",
		"offset": [
		  2102,
		  2127
		],
		"op": "DUP7",
		"path": "1"
	  },
	  "3813": {
		"fn": "ChainlinkClient.buildChainlinkRequest",
		"offset": [
		  2065,
		  2079
		],
		"op": "PUSH2",
		"path": "1",
		"value": "0xF38"
	  },
	  "3816": {
		"fn": "ChainlinkClient.buildChainlinkRequest",
		"jump": "i",
		"offset": [
		  2065,
		  2128
		],
		"op": "JUMP",
		"path": "1"
	  },
	  "3817": {
		"fn": "ChainlinkClient.buildChainlinkRequest",
		"offset": [
		  2065,
		  2128
		],
		"op": "JUMPDEST",
		"path": "1"
	  },
	  "3818": {
		"fn": "ChainlinkClient.buildChainlinkRequest",
		"offset": [
		  2058,
		  2128
		],
		"op": "SWAP6",
		"path": "1"
	  },
	  "3819": {
		"fn": "ChainlinkClient.buildChainlinkRequest",
		"offset": [
		  1850,
		  2133
		],
		"op": "SWAP5",
		"path": "1"
	  },
	  "3820": {
		"op": "POP"
	  },
	  "3821": {
		"op": "POP"
	  },
	  "3822": {
		"op": "POP"
	  },
	  "3823": {
		"op": "POP"
	  },
	  "3824": {
		"op": "POP"
	  },
	  "3825": {
		"fn": "ChainlinkClient.buildChainlinkRequest",
		"jump": "o",
		"offset": [
		  1850,
		  2133
		],
		"op": "JUMP",
		"path": "1"
	  },
	  "3826": {
		"fn": "Chainlink.add",
		"offset": [
		  1951,
		  2126
		],
		"op": "JUMPDEST",
		"path": "0"
	  },
	  "3827": {
		"fn": "Chainlink.add",
		"offset": [
		  2061,
		  2069
		],
		"op": "PUSH1",
		"path": "0",
		"statement": 46,
		"value": "0x80"
	  },
	  "3829": {
		"fn": "Chainlink.add",
		"offset": [
		  2061,
		  2069
		],
		"op": "DUP4",
		"path": "0"
	  },
	  "3830": {
		"fn": "Chainlink.add",
		"offset": [
		  2061,
		  2069
		],
		"op": "ADD",
		"path": "0"
	  },
	  "3831": {
		"fn": "Chainlink.add",
		"offset": [
		  2061,
		  2069
		],
		"op": "MLOAD",
		"path": "0"
	  },
	  "3832": {
		"fn": "Chainlink.add",
		"offset": [
		  2061,
		  2087
		],
		"op": "PUSH2",
		"path": "0",
		"value": "0xF01"
	  },
	  "3835": {
		"fn": "Chainlink.add",
		"offset": [
		  2061,
		  2087
		],
		"op": "SWAP1",
		"path": "0"
	  },
	  "3836": {
		"fn": "Chainlink.add",
		"offset": [
		  2083,
		  2086
		],
		"op": "DUP4",
		"path": "0"
	  },
	  "3837": {
		"fn": "Chainlink.add",
		"offset": [
		  2061,
		  2082
		],
		"op": "PUSH2",
		"path": "0",
		"value": "0xF7E"
	  },
	  "3840": {
		"fn": "Chainlink.add",
		"jump": "i",
		"offset": [
		  2061,
		  2087
		],
		"op": "JUMP",
		"path": "0"
	  },
	  "3841": {
		"fn": "Chainlink.add",
		"offset": [
		  2061,
		  2087
		],
		"op": "JUMPDEST",
		"path": "0"
	  },
	  "3842": {
		"fn": "Chainlink.add",
		"offset": [
		  2093,
		  2101
		],
		"op": "PUSH1",
		"path": "0",
		"statement": 47,
		"value": "0x80"
	  },
	  "3844": {
		"fn": "Chainlink.add",
		"offset": [
		  2093,
		  2101
		],
		"op": "DUP4",
		"path": "0"
	  },
	  "3845": {
		"fn": "Chainlink.add",
		"offset": [
		  2093,
		  2101
		],
		"op": "ADD",
		"path": "0"
	  },
	  "3846": {
		"fn": "Chainlink.add",
		"offset": [
		  2093,
		  2101
		],
		"op": "MLOAD",
		"path": "0"
	  },
	  "3847": {
		"fn": "Chainlink.add",
		"offset": [
		  2093,
		  2121
		],
		"op": "PUSH2",
		"path": "0",
		"value": "0xF10"
	  },
	  "3850": {
		"fn": "Chainlink.add",
		"offset": [
		  2093,
		  2121
		],
		"op": "SWAP1",
		"path": "0"
	  },
	  "3851": {
		"fn": "Chainlink.add",
		"offset": [
		  2115,
		  2120
		],
		"op": "DUP3",
		"path": "0"
	  },
	  "3852": {
		"fn": "Chainlink.add",
		"offset": [
		  2093,
		  2114
		],
		"op": "PUSH2",
		"path": "0",
		"value": "0xF7E"
	  },
	  "3855": {
		"fn": "Chainlink.add",
		"jump": "i",
		"offset": [
		  2093,
		  2121
		],
		"op": "JUMP",
		"path": "0"
	  },
	  "3856": {
		"fn": "Chainlink.add",
		"offset": [
		  2093,
		  2121
		],
		"op": "JUMPDEST",
		"path": "0"
	  },
	  "3857": {
		"fn": "Chainlink.add",
		"offset": [
		  1951,
		  2126
		],
		"op": "POP",
		"path": "0"
	  },
	  "3858": {
		"fn": "Chainlink.add",
		"offset": [
		  1951,
		  2126
		],
		"op": "POP",
		"path": "0"
	  },
	  "3859": {
		"fn": "Chainlink.add",
		"offset": [
		  1951,
		  2126
		],
		"op": "POP",
		"path": "0"
	  },
	  "3860": {
		"fn": "Chainlink.add",
		"jump": "o",
		"offset": [
		  1951,
		  2126
		],
		"op": "JUMP",
		"path": "0"
	  },
	  "3861": {
		"fn": "ChainlinkClient.sendOperatorRequest",
		"offset": [
		  4804,
		  4979
		],
		"op": "JUMPDEST",
		"path": "1"
	  },
	  "3862": {
		"fn": "ChainlinkClient.sendOperatorRequest",
		"offset": [
		  4950,
		  4958
		],
		"op": "PUSH1",
		"path": "1",
		"statement": 48,
		"value": "0x3"
	  },
	  "3864": {
		"fn": "ChainlinkClient.sendOperatorRequest",
		"offset": [
		  4950,
		  4958
		],
		"op": "SLOAD",
		"path": "1"
	  },
	  "3865": {
		"fn": "ChainlinkClient.sendOperatorRequest",
		"offset": [
		  4898,
		  4905
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x0"
	  },
	  "3867": {
		"fn": "ChainlinkClient.sendOperatorRequest",
		"offset": [
		  4898,
		  4905
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "3868": {
		"fn": "ChainlinkClient.sendOperatorRequest",
		"offset": [
		  4920,
		  4974
		],
		"op": "PUSH2",
		"path": "1",
		"value": "0xF2F"
	  },
	  "3871": {
		"fn": "ChainlinkClient.sendOperatorRequest",
		"offset": [
		  4920,
		  4974
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "3872": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "3874": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "3876": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "3878": {
		"op": "SHL"
	  },
	  "3879": {
		"op": "SUB"
	  },
	  "3880": {
		"fn": "ChainlinkClient.sendOperatorRequest",
		"offset": [
		  4950,
		  4958
		],
		"op": "AND",
		"path": "1"
	  },
	  "3881": {
		"fn": "ChainlinkClient.sendOperatorRequest",
		"offset": [
		  4961,
		  4964
		],
		"op": "DUP5",
		"path": "1"
	  },
	  "3882": {
		"fn": "ChainlinkClient.sendOperatorRequest",
		"offset": [
		  4966,
		  4973
		],
		"op": "DUP5",
		"path": "1"
	  },
	  "3883": {
		"fn": "ChainlinkClient.sendOperatorRequest",
		"offset": [
		  4920,
		  4941
		],
		"op": "PUSH2",
		"path": "1",
		"value": "0xF95"
	  },
	  "3886": {
		"fn": "ChainlinkClient.sendOperatorRequest",
		"jump": "i",
		"offset": [
		  4920,
		  4974
		],
		"op": "JUMP",
		"path": "1"
	  },
	  "3887": {
		"fn": "ChainlinkClient.sendOperatorRequest",
		"offset": [
		  4920,
		  4974
		],
		"op": "JUMPDEST",
		"path": "1"
	  },
	  "3888": {
		"fn": "ChainlinkClient.sendOperatorRequest",
		"offset": [
		  4913,
		  4974
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "3889": {
		"fn": "ChainlinkClient.sendOperatorRequest",
		"offset": [
		  4913,
		  4974
		],
		"op": "POP",
		"path": "1"
	  },
	  "3890": {
		"fn": "ChainlinkClient.sendOperatorRequest",
		"offset": [
		  4804,
		  4979
		],
		"op": "JUMPDEST",
		"path": "1"
	  },
	  "3891": {
		"fn": "ChainlinkClient.sendOperatorRequest",
		"offset": [
		  4804,
		  4979
		],
		"op": "SWAP3",
		"path": "1"
	  },
	  "3892": {
		"fn": "ChainlinkClient.sendOperatorRequest",
		"offset": [
		  4804,
		  4979
		],
		"op": "SWAP2",
		"path": "1"
	  },
	  "3893": {
		"fn": "ChainlinkClient.sendOperatorRequest",
		"offset": [
		  4804,
		  4979
		],
		"op": "POP",
		"path": "1"
	  },
	  "3894": {
		"fn": "ChainlinkClient.sendOperatorRequest",
		"offset": [
		  4804,
		  4979
		],
		"op": "POP",
		"path": "1"
	  },
	  "3895": {
		"fn": "ChainlinkClient.sendOperatorRequest",
		"jump": "o",
		"offset": [
		  4804,
		  4979
		],
		"op": "JUMP",
		"path": "1"
	  },
	  "3896": {
		"fn": "Chainlink.initialize",
		"offset": [
		  987,
		  1338
		],
		"op": "JUMPDEST",
		"path": "0"
	  },
	  "3897": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1129,
		  1153
		],
		"op": "PUSH2",
		"path": "0",
		"value": "0xF40"
	  },
	  "3900": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1129,
		  1153
		],
		"op": "PUSH2",
		"path": "0",
		"value": "0x155E"
	  },
	  "3903": {
		"fn": "Chainlink.initialize",
		"jump": "i",
		"offset": [
		  1129,
		  1153
		],
		"op": "JUMP",
		"path": "0"
	  },
	  "3904": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1129,
		  1153
		],
		"op": "JUMPDEST",
		"path": "0"
	  },
	  "3905": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1161,
		  1210
		],
		"op": "PUSH2",
		"path": "0",
		"statement": 49,
		"value": "0xF50"
	  },
	  "3908": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1182,
		  1186
		],
		"op": "DUP6",
		"path": "0"
	  },
	  "3909": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1182,
		  1190
		],
		"op": "PUSH1",
		"path": "0",
		"value": "0x80"
	  },
	  "3911": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1182,
		  1190
		],
		"op": "ADD",
		"path": "0"
	  },
	  "3912": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1182,
		  1190
		],
		"op": "MLOAD",
		"path": "0"
	  },
	  "3913": {
		"offset": [
		  361,
		  364
		],
		"op": "PUSH2",
		"path": "0",
		"value": "0x100"
	  },
	  "3916": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1161,
		  1181
		],
		"op": "PUSH2",
		"path": "0",
		"value": "0x1026"
	  },
	  "3919": {
		"fn": "Chainlink.initialize",
		"jump": "i",
		"offset": [
		  1161,
		  1210
		],
		"op": "JUMP",
		"path": "0"
	  },
	  "3920": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1161,
		  1210
		],
		"op": "JUMPDEST",
		"path": "0"
	  },
	  "3921": {
		"op": "POP"
	  },
	  "3922": {
		"op": "POP"
	  },
	  "3923": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1216,
		  1231
		],
		"op": "DUP3",
		"path": "0",
		"statement": 50
	  },
	  "3924": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1216,
		  1231
		],
		"op": "DUP5",
		"path": "0"
	  },
	  "3925": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1216,
		  1231
		],
		"op": "MSTORE",
		"path": "0"
	  },
	  "3926": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "3928": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "3930": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "3932": {
		"op": "SHL"
	  },
	  "3933": {
		"op": "SUB"
	  },
	  "3934": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1237,
		  1272
		],
		"op": "DUP3",
		"path": "0",
		"statement": 51
	  },
	  "3935": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1237,
		  1272
		],
		"op": "AND",
		"path": "0"
	  },
	  "3936": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1237,
		  1257
		],
		"op": "PUSH1",
		"path": "0",
		"value": "0x20"
	  },
	  "3938": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1237,
		  1257
		],
		"op": "DUP6",
		"path": "0"
	  },
	  "3939": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1237,
		  1257
		],
		"op": "ADD",
		"path": "0"
	  },
	  "3940": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1237,
		  1272
		],
		"op": "MSTORE",
		"path": "0"
	  },
	  "3941": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "3943": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "3945": {
		"op": "PUSH1",
		"value": "0xE0"
	  },
	  "3947": {
		"op": "SHL"
	  },
	  "3948": {
		"op": "SUB"
	  },
	  "3949": {
		"op": "NOT"
	  },
	  "3950": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1278,
		  1316
		],
		"op": "DUP2",
		"path": "0",
		"statement": 52
	  },
	  "3951": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1278,
		  1316
		],
		"op": "AND",
		"path": "0"
	  },
	  "3952": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1278,
		  1301
		],
		"op": "PUSH1",
		"path": "0",
		"value": "0x40"
	  },
	  "3954": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1278,
		  1301
		],
		"op": "DUP6",
		"path": "0"
	  },
	  "3955": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1278,
		  1301
		],
		"op": "ADD",
		"path": "0"
	  },
	  "3956": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1278,
		  1316
		],
		"op": "MSTORE",
		"path": "0"
	  },
	  "3957": {
		"fn": "Chainlink.initialize",
		"offset": [
		  1216,
		  1220
		],
		"op": "DUP4",
		"path": "0"
	  },
	  "3958": {
		"fn": "Chainlink.initialize",
		"offset": [
		  987,
		  1338
		],
		"op": "JUMPDEST",
		"path": "0"
	  },
	  "3959": {
		"fn": "Chainlink.initialize",
		"offset": [
		  987,
		  1338
		],
		"op": "SWAP5",
		"path": "0"
	  },
	  "3960": {
		"fn": "Chainlink.initialize",
		"offset": [
		  987,
		  1338
		],
		"op": "SWAP4",
		"path": "0"
	  },
	  "3961": {
		"fn": "Chainlink.initialize",
		"offset": [
		  987,
		  1338
		],
		"op": "POP",
		"path": "0"
	  },
	  "3962": {
		"fn": "Chainlink.initialize",
		"offset": [
		  987,
		  1338
		],
		"op": "POP",
		"path": "0"
	  },
	  "3963": {
		"fn": "Chainlink.initialize",
		"offset": [
		  987,
		  1338
		],
		"op": "POP",
		"path": "0"
	  },
	  "3964": {
		"fn": "Chainlink.initialize",
		"offset": [
		  987,
		  1338
		],
		"op": "POP",
		"path": "0"
	  },
	  "3965": {
		"fn": "Chainlink.initialize",
		"jump": "o",
		"offset": [
		  987,
		  1338
		],
		"op": "JUMP",
		"path": "0"
	  },
	  "3966": {
		"fn": "CBORChainlink.encodeString",
		"offset": [
		  2777,
		  2981
		],
		"op": "JUMPDEST",
		"path": "9"
	  },
	  "3967": {
		"fn": "CBORChainlink.encodeString",
		"offset": [
		  2875,
		  2946
		],
		"op": "PUSH2",
		"path": "9",
		"statement": 53,
		"value": "0xF8B"
	  },
	  "3970": {
		"fn": "CBORChainlink.encodeString",
		"offset": [
		  2894,
		  2897
		],
		"op": "DUP3",
		"path": "9"
	  },
	  "3971": {
		"offset": [
		  383,
		  384
		],
		"op": "PUSH1",
		"path": "9",
		"value": "0x3"
	  },
	  "3973": {
		"fn": "CBORChainlink.encodeString",
		"offset": [
		  2931,
		  2936
		],
		"op": "DUP4",
		"path": "9"
	  },
	  "3974": {
		"fn": "CBORChainlink.encodeString",
		"offset": [
		  2925,
		  2944
		],
		"op": "MLOAD",
		"path": "9"
	  },
	  "3975": {
		"fn": "CBORChainlink.encodeString",
		"offset": [
		  2875,
		  2893
		],
		"op": "PUSH2",
		"path": "9",
		"value": "0x108B"
	  },
	  "3978": {
		"fn": "CBORChainlink.encodeString",
		"jump": "i",
		"offset": [
		  2875,
		  2946
		],
		"op": "JUMP",
		"path": "9"
	  },
	  "3979": {
		"fn": "CBORChainlink.encodeString",
		"offset": [
		  2875,
		  2946
		],
		"op": "JUMPDEST",
		"path": "9"
	  },
	  "3980": {
		"fn": "CBORChainlink.encodeString",
		"offset": [
		  2952,
		  2976
		],
		"op": "PUSH2",
		"path": "9",
		"statement": 54,
		"value": "0xF10"
	  },
	  "3983": {
		"fn": "CBORChainlink.encodeString",
		"offset": [
		  2952,
		  2955
		],
		"op": "DUP3",
		"path": "9"
	  },
	  "3984": {
		"fn": "CBORChainlink.encodeString",
		"offset": [
		  2969,
		  2974
		],
		"op": "DUP3",
		"path": "9"
	  },
	  "3985": {
		"fn": "CBORChainlink.encodeString",
		"offset": [
		  2952,
		  2962
		],
		"op": "PUSH2",
		"path": "9",
		"value": "0x11A0"
	  },
	  "3988": {
		"fn": "CBORChainlink.encodeString",
		"jump": "i",
		"offset": [
		  2952,
		  2976
		],
		"op": "JUMP",
		"path": "9"
	  },
	  "3989": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5550,
		  6280
		],
		"op": "JUMPDEST",
		"path": "1"
	  },
	  "3990": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5726,
		  5740
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x4"
	  },
	  "3992": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5726,
		  5740
		],
		"op": "SLOAD",
		"path": "1"
	  },
	  "3993": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5685,
		  5702
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x0"
	  },
	  "3995": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5685,
		  5702
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "3996": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5763,
		  5772
		],
		"op": "PUSH2",
		"path": "1",
		"statement": 55,
		"value": "0xFA6"
	  },
	  "3999": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5726,
		  5740
		],
		"op": "DUP2",
		"path": "1"
	  },
	  "4000": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5771,
		  5772
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x1"
	  },
	  "4002": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5763,
		  5772
		],
		"op": "PUSH2",
		"path": "1",
		"value": "0x175D"
	  },
	  "4005": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"jump": "i",
		"offset": [
		  5763,
		  5772
		],
		"op": "JUMP",
		"path": "1"
	  },
	  "4006": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5763,
		  5772
		],
		"op": "JUMPDEST",
		"path": "1"
	  },
	  "4007": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5746,
		  5760
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x4"
	  },
	  "4009": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5746,
		  5772
		],
		"op": "SSTORE",
		"path": "1"
	  },
	  "4010": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  6101,
		  6107
		],
		"op": "DUP4",
		"path": "1"
	  },
	  "4011": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  6101,
		  6107
		],
		"op": "MLOAD",
		"path": "1"
	  },
	  "4012": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  6115,
		  6137
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x40"
	  },
	  "4014": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  6115,
		  6137
		],
		"op": "DUP1",
		"path": "1"
	  },
	  "4015": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  6115,
		  6137
		],
		"op": "DUP7",
		"path": "1"
	  },
	  "4016": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  6115,
		  6137
		],
		"op": "ADD",
		"path": "1"
	  },
	  "4017": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  6115,
		  6137
		],
		"op": "MLOAD",
		"path": "1"
	  },
	  "4018": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  6187,
		  6194
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x80"
	  },
	  "4020": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  6187,
		  6194
		],
		"op": "DUP8",
		"path": "1"
	  },
	  "4021": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  6187,
		  6194
		],
		"op": "ADD",
		"path": "1"
	  },
	  "4022": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  6187,
		  6194
		],
		"op": "MLOAD",
		"path": "1"
	  },
	  "4023": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  6187,
		  6198
		],
		"op": "MLOAD",
		"path": "1"
	  },
	  "4024": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "SWAP2",
		"path": "1"
	  },
	  "4025": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "MLOAD",
		"path": "1"
	  },
	  "4026": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5778,
		  5805
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x0"
	  },
	  "4028": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5778,
		  5805
		],
		"op": "SWAP4",
		"path": "1"
	  },
	  "4029": {
		"op": "PUSH4",
		"value": "0x3C6D41B9"
	  },
	  "4034": {
		"op": "PUSH1",
		"value": "0xE0"
	  },
	  "4036": {
		"op": "SHL"
	  },
	  "4037": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5838,
		  5880
		],
		"op": "SWAP4",
		"path": "1"
	  },
	  "4038": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "PUSH2",
		"path": "1",
		"value": "0xFDC"
	  },
	  "4041": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "SWAP4",
		"path": "1"
	  },
	  "4042": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5778,
		  5805
		],
		"op": "DUP7",
		"path": "1"
	  },
	  "4043": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5778,
		  5805
		],
		"op": "SWAP4",
		"path": "1"
	  },
	  "4044": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5778,
		  5805
		],
		"op": "DUP5",
		"path": "1"
	  },
	  "4045": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5778,
		  5805
		],
		"op": "SWAP4",
		"path": "1"
	  },
	  "4046": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  6101,
		  6107
		],
		"op": "SWAP3",
		"path": "1"
	  },
	  "4047": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  6145,
		  6150
		],
		"op": "DUP10",
		"path": "1"
	  },
	  "4048": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  6145,
		  6150
		],
		"op": "SWAP2",
		"path": "1"
	  },
	  "4049": {
		"offset": [
		  891,
		  892
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x2"
	  },
	  "4051": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  891,
		  892
		],
		"op": "SWAP2",
		"path": "1"
	  },
	  "4052": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  6187,
		  6198
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "4053": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x24"
	  },
	  "4055": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "ADD",
		"path": "1"
	  },
	  "4056": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "PUSH2",
		"path": "1",
		"value": "0x17B6"
	  },
	  "4059": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"jump": "i",
		"offset": [
		  5808,
		  6204
		],
		"op": "JUMP",
		"path": "1"
	  },
	  "4060": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "JUMPDEST",
		"path": "1"
	  },
	  "4061": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x40"
	  },
	  "4063": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "DUP1",
		"path": "1"
	  },
	  "4064": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "MLOAD",
		"path": "1"
	  },
	  "4065": {
		"op": "PUSH1",
		"value": "0x1F"
	  },
	  "4067": {
		"op": "NOT"
	  },
	  "4068": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "DUP2",
		"path": "1"
	  },
	  "4069": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "DUP5",
		"path": "1"
	  },
	  "4070": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "SUB",
		"path": "1"
	  },
	  "4071": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "ADD",
		"path": "1"
	  },
	  "4072": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "DUP2",
		"path": "1"
	  },
	  "4073": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "MSTORE",
		"path": "1"
	  },
	  "4074": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "SWAP2",
		"path": "1"
	  },
	  "4075": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "4076": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "MSTORE",
		"path": "1"
	  },
	  "4077": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x20"
	  },
	  "4079": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "DUP2",
		"path": "1"
	  },
	  "4080": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "ADD",
		"path": "1"
	  },
	  "4081": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "DUP1",
		"path": "1"
	  },
	  "4082": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "MLOAD",
		"path": "1"
	  },
	  "4083": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "4085": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "4087": {
		"op": "PUSH1",
		"value": "0xE0"
	  },
	  "4089": {
		"op": "SHL"
	  },
	  "4090": {
		"op": "SUB"
	  },
	  "4091": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "AND",
		"path": "1"
	  },
	  "4092": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "4094": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "4096": {
		"op": "PUSH1",
		"value": "0xE0"
	  },
	  "4098": {
		"op": "SHL"
	  },
	  "4099": {
		"op": "SUB"
	  },
	  "4100": {
		"op": "NOT"
	  },
	  "4101": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "4102": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "SWAP4",
		"path": "1"
	  },
	  "4103": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "AND",
		"path": "1"
	  },
	  "4104": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "SWAP3",
		"path": "1"
	  },
	  "4105": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "4106": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "SWAP3",
		"path": "1"
	  },
	  "4107": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "OR",
		"path": "1"
	  },
	  "4108": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "4109": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "SWAP2",
		"path": "1"
	  },
	  "4110": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "MSTORE",
		"path": "1"
	  },
	  "4111": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "4112": {
		"op": "POP"
	  },
	  "4113": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  6217,
		  6275
		],
		"op": "PUSH2",
		"path": "1",
		"statement": 56,
		"value": "0x101C"
	  },
	  "4116": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  6229,
		  6242
		],
		"op": "DUP7",
		"path": "1"
	  },
	  "4117": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  6244,
		  6249
		],
		"op": "DUP4",
		"path": "1"
	  },
	  "4118": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  6251,
		  6258
		],
		"op": "DUP7",
		"path": "1"
	  },
	  "4119": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5808,
		  6204
		],
		"op": "DUP5",
		"path": "1"
	  },
	  "4120": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  6217,
		  6228
		],
		"op": "PUSH2",
		"path": "1",
		"value": "0x11C7"
	  },
	  "4123": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"jump": "i",
		"offset": [
		  6217,
		  6275
		],
		"op": "JUMP",
		"path": "1"
	  },
	  "4124": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  6217,
		  6275
		],
		"op": "JUMPDEST",
		"path": "1"
	  },
	  "4125": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  6210,
		  6275
		],
		"op": "SWAP7",
		"path": "1"
	  },
	  "4126": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"offset": [
		  5550,
		  6280
		],
		"op": "SWAP6",
		"path": "1"
	  },
	  "4127": {
		"op": "POP"
	  },
	  "4128": {
		"op": "POP"
	  },
	  "4129": {
		"op": "POP"
	  },
	  "4130": {
		"op": "POP"
	  },
	  "4131": {
		"op": "POP"
	  },
	  "4132": {
		"op": "POP"
	  },
	  "4133": {
		"fn": "ChainlinkClient.sendOperatorRequestTo",
		"jump": "o",
		"offset": [
		  5550,
		  6280
		],
		"op": "JUMP",
		"path": "1"
	  },
	  "4134": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1001,
		  1400
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "4135": {
		"op": "PUSH1",
		"value": "0x40"
	  },
	  "4137": {
		"op": "DUP1"
	  },
	  "4138": {
		"op": "MLOAD"
	  },
	  "4139": {
		"op": "DUP1"
	  },
	  "4140": {
		"op": "DUP3"
	  },
	  "4141": {
		"op": "ADD"
	  },
	  "4142": {
		"op": "SWAP1"
	  },
	  "4143": {
		"op": "SWAP2"
	  },
	  "4144": {
		"op": "MSTORE"
	  },
	  "4145": {
		"op": "PUSH1",
		"value": "0x60"
	  },
	  "4147": {
		"op": "DUP2"
	  },
	  "4148": {
		"op": "MSTORE"
	  },
	  "4149": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "4151": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "4153": {
		"op": "DUP3"
	  },
	  "4154": {
		"op": "ADD"
	  },
	  "4155": {
		"op": "MSTORE"
	  },
	  "4156": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1100,
		  1113
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x1046"
	  },
	  "4159": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1111,
		  1113
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x20"
	  },
	  "4161": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1100,
		  1108
		],
		"op": "DUP4",
		"path": "8"
	  },
	  "4162": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1100,
		  1113
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x180B"
	  },
	  "4165": {
		"fn": "BufferChainlink.init",
		"jump": "i",
		"offset": [
		  1100,
		  1113
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "4166": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1100,
		  1113
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "4167": {
		"branch": 119,
		"fn": "BufferChainlink.init",
		"offset": [
		  1100,
		  1118
		],
		"op": "ISZERO",
		"path": "8"
	  },
	  "4168": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1096,
		  1167
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x106E"
	  },
	  "4171": {
		"branch": 119,
		"fn": "BufferChainlink.init",
		"offset": [
		  1096,
		  1167
		],
		"op": "JUMPI",
		"path": "8"
	  },
	  "4172": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1146,
		  1159
		],
		"op": "PUSH2",
		"path": "8",
		"statement": 57,
		"value": "0x1056"
	  },
	  "4175": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1157,
		  1159
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x20"
	  },
	  "4177": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1146,
		  1154
		],
		"op": "DUP4",
		"path": "8"
	  },
	  "4178": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1146,
		  1159
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x180B"
	  },
	  "4181": {
		"fn": "BufferChainlink.init",
		"jump": "i",
		"offset": [
		  1146,
		  1159
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "4182": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1146,
		  1159
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "4183": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1140,
		  1160
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x1061"
	  },
	  "4186": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1140,
		  1160
		],
		"op": "SWAP1",
		"path": "8"
	  },
	  "4187": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1140,
		  1142
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x20"
	  },
	  "4189": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1140,
		  1160
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x182D"
	  },
	  "4192": {
		"fn": "BufferChainlink.init",
		"jump": "i",
		"offset": [
		  1140,
		  1160
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "4193": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1140,
		  1160
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "4194": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1128,
		  1160
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x106B"
	  },
	  "4197": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1128,
		  1160
		],
		"op": "SWAP1",
		"path": "8"
	  },
	  "4198": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1128,
		  1160
		],
		"op": "DUP4",
		"path": "8"
	  },
	  "4199": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1128,
		  1160
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x175D"
	  },
	  "4202": {
		"fn": "BufferChainlink.init",
		"jump": "i",
		"offset": [
		  1128,
		  1160
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "4203": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1128,
		  1160
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "4204": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1128,
		  1160
		],
		"op": "SWAP2",
		"path": "8"
	  },
	  "4205": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1128,
		  1160
		],
		"op": "POP",
		"path": "8"
	  },
	  "4206": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1096,
		  1167
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "4207": {
		"op": "POP"
	  },
	  "4208": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1214,
		  1226
		],
		"op": "PUSH1",
		"path": "8",
		"statement": 58,
		"value": "0x20"
	  },
	  "4210": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1214,
		  1226
		],
		"op": "DUP3",
		"path": "8"
	  },
	  "4211": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1214,
		  1226
		],
		"op": "DUP2",
		"path": "8"
	  },
	  "4212": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1214,
		  1226
		],
		"op": "ADD",
		"path": "8"
	  },
	  "4213": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1214,
		  1237
		],
		"op": "DUP3",
		"path": "8"
	  },
	  "4214": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1214,
		  1237
		],
		"op": "SWAP1",
		"path": "8"
	  },
	  "4215": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1214,
		  1237
		],
		"op": "MSTORE",
		"path": "8"
	  },
	  "4216": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1277,
		  1281
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x40"
	  },
	  "4218": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1271,
		  1282
		],
		"op": "DUP1",
		"path": "8"
	  },
	  "4219": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1271,
		  1282
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "4220": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1289,
		  1305
		],
		"op": "DUP1",
		"path": "8"
	  },
	  "4221": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1289,
		  1305
		],
		"op": "DUP6",
		"path": "8"
	  },
	  "4222": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1289,
		  1305
		],
		"op": "MSTORE",
		"path": "8"
	  },
	  "4223": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "4225": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1312,
		  1326
		],
		"op": "DUP2",
		"path": "8"
	  },
	  "4226": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1312,
		  1326
		],
		"op": "MSTORE",
		"path": "8"
	  },
	  "4227": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1354,
		  1372
		],
		"op": "SWAP1",
		"path": "8"
	  },
	  "4228": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1354,
		  1372
		],
		"op": "SWAP3",
		"path": "8"
	  },
	  "4229": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1354,
		  1372
		],
		"op": "ADD",
		"path": "8"
	  },
	  "4230": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1346,
		  1373
		],
		"op": "ADD",
		"path": "8"
	  },
	  "4231": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1333,
		  1374
		],
		"op": "SWAP1",
		"path": "8"
	  },
	  "4232": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1333,
		  1374
		],
		"op": "MSTORE",
		"path": "8"
	  },
	  "4233": {
		"fn": "BufferChainlink.init",
		"offset": [
		  1214,
		  1226
		],
		"op": "SWAP1",
		"path": "8"
	  },
	  "4234": {
		"fn": "BufferChainlink.init",
		"jump": "o",
		"offset": [
		  1001,
		  1400
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "4235": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  682,
		  1307
		],
		"op": "JUMPDEST",
		"path": "9"
	  },
	  "4236": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  803,
		  805
		],
		"op": "PUSH1",
		"path": "9",
		"value": "0x17"
	  },
	  "4238": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  794,
		  799
		],
		"op": "DUP2",
		"path": "9"
	  },
	  "4239": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  794,
		  805
		],
		"op": "PUSH8",
		"path": "9",
		"value": "0xFFFFFFFFFFFFFFFF"
	  },
	  "4248": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  794,
		  805
		],
		"op": "AND",
		"path": "9"
	  },
	  "4249": {
		"branch": 125,
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  794,
		  805
		],
		"op": "GT",
		"path": "9"
	  },
	  "4250": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  791,
		  1303
		],
		"op": "PUSH2",
		"path": "9",
		"value": "0x10B6"
	  },
	  "4253": {
		"branch": 125,
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  791,
		  1303
		],
		"op": "JUMPI",
		"path": "9"
	  },
	  "4254": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  815,
		  859
		],
		"op": "PUSH2",
		"path": "9",
		"statement": 59,
		"value": "0x10B0"
	  },
	  "4257": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  815,
		  818
		],
		"op": "DUP4",
		"path": "9"
	  },
	  "4258": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  837,
		  857
		],
		"op": "PUSH1",
		"path": "9",
		"value": "0xE0"
	  },
	  "4260": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  847,
		  848
		],
		"op": "PUSH1",
		"path": "9",
		"value": "0x5"
	  },
	  "4262": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  838,
		  848
		],
		"op": "DUP6",
		"path": "9"
	  },
	  "4263": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  838,
		  848
		],
		"op": "SWAP1",
		"path": "9"
	  },
	  "4264": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  838,
		  848
		],
		"op": "SHL",
		"path": "9"
	  },
	  "4265": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  837,
		  857
		],
		"op": "AND",
		"path": "9"
	  },
	  "4266": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  837,
		  857
		],
		"op": "DUP4",
		"path": "9"
	  },
	  "4267": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  837,
		  857
		],
		"op": "OR",
		"path": "9"
	  },
	  "4268": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  815,
		  830
		],
		"op": "PUSH2",
		"path": "9",
		"value": "0x1325"
	  },
	  "4271": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"jump": "i",
		"offset": [
		  815,
		  859
		],
		"op": "JUMP",
		"path": "9"
	  },
	  "4272": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  815,
		  859
		],
		"op": "JUMPDEST",
		"path": "9"
	  },
	  "4273": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  815,
		  859
		],
		"op": "POP",
		"path": "9"
	  },
	  "4274": {
		"fn": "Chainlink.add",
		"offset": [
		  1951,
		  2126
		],
		"op": "POP",
		"path": "0"
	  },
	  "4275": {
		"fn": "Chainlink.add",
		"offset": [
		  1951,
		  2126
		],
		"op": "POP",
		"path": "0"
	  },
	  "4276": {
		"fn": "Chainlink.add",
		"offset": [
		  1951,
		  2126
		],
		"op": "POP",
		"path": "0"
	  },
	  "4277": {
		"fn": "Chainlink.add",
		"jump": "o",
		"offset": [
		  1951,
		  2126
		],
		"op": "JUMP",
		"path": "0"
	  },
	  "4278": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  791,
		  1303
		],
		"op": "JUMPDEST",
		"path": "9"
	  },
	  "4279": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  885,
		  889
		],
		"op": "PUSH1",
		"path": "9",
		"value": "0xFF"
	  },
	  "4281": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  876,
		  881
		],
		"op": "DUP2",
		"path": "9"
	  },
	  "4282": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  876,
		  889
		],
		"op": "PUSH8",
		"path": "9",
		"value": "0xFFFFFFFFFFFFFFFF"
	  },
	  "4291": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  876,
		  889
		],
		"op": "AND",
		"path": "9"
	  },
	  "4292": {
		"branch": 126,
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  876,
		  889
		],
		"op": "GT",
		"path": "9"
	  },
	  "4293": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  872,
		  1303
		],
		"op": "PUSH2",
		"path": "9",
		"value": "0x10F4"
	  },
	  "4296": {
		"branch": 126,
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  872,
		  1303
		],
		"op": "JUMPI",
		"path": "9"
	  },
	  "4297": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  899,
		  940
		],
		"op": "PUSH2",
		"path": "9",
		"statement": 60,
		"value": "0x10DD"
	  },
	  "4300": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  899,
		  902
		],
		"op": "DUP4",
		"path": "9"
	  },
	  "4301": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  936,
		  938
		],
		"op": "PUSH1",
		"path": "9",
		"value": "0x18"
	  },
	  "4303": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  922,
		  932
		],
		"op": "PUSH2",
		"path": "9",
		"value": "0x1FE0"
	  },
	  "4306": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  931,
		  932
		],
		"op": "PUSH1",
		"path": "9",
		"value": "0x5"
	  },
	  "4308": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  922,
		  932
		],
		"op": "DUP7",
		"path": "9"
	  },
	  "4309": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  922,
		  932
		],
		"op": "SWAP1",
		"path": "9"
	  },
	  "4310": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  922,
		  932
		],
		"op": "SHL",
		"path": "9"
	  },
	  "4311": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  922,
		  932
		],
		"op": "AND",
		"path": "9"
	  },
	  "4312": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  921,
		  938
		],
		"op": "OR",
		"path": "9"
	  },
	  "4313": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  899,
		  914
		],
		"op": "PUSH2",
		"path": "9",
		"value": "0x1325"
	  },
	  "4316": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"jump": "i",
		"offset": [
		  899,
		  940
		],
		"op": "JUMP",
		"path": "9"
	  },
	  "4317": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  899,
		  940
		],
		"op": "JUMPDEST",
		"path": "9"
	  },
	  "4318": {
		"op": "POP"
	  },
	  "4319": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  948,
		  971
		],
		"op": "PUSH2",
		"path": "9",
		"statement": 61,
		"value": "0x10B0"
	  },
	  "4322": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  948,
		  951
		],
		"op": "DUP4",
		"path": "9"
	  },
	  "4323": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  948,
		  971
		],
		"op": "PUSH8",
		"path": "9",
		"value": "0xFFFFFFFFFFFFFFFF"
	  },
	  "4332": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  948,
		  971
		],
		"op": "DUP4",
		"path": "9"
	  },
	  "4333": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  948,
		  971
		],
		"op": "AND",
		"path": "9"
	  },
	  "4334": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  969,
		  970
		],
		"op": "PUSH1",
		"path": "9",
		"value": "0x1"
	  },
	  "4336": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  948,
		  961
		],
		"op": "PUSH2",
		"path": "9",
		"value": "0x134A"
	  },
	  "4339": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"jump": "i",
		"offset": [
		  948,
		  971
		],
		"op": "JUMP",
		"path": "9"
	  },
	  "4340": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  872,
		  1303
		],
		"op": "JUMPDEST",
		"path": "9"
	  },
	  "4341": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  997,
		  1003
		],
		"op": "PUSH2",
		"path": "9",
		"value": "0xFFFF"
	  },
	  "4344": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  988,
		  993
		],
		"op": "DUP2",
		"path": "9"
	  },
	  "4345": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  988,
		  1003
		],
		"op": "PUSH8",
		"path": "9",
		"value": "0xFFFFFFFFFFFFFFFF"
	  },
	  "4354": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  988,
		  1003
		],
		"op": "AND",
		"path": "9"
	  },
	  "4355": {
		"branch": 127,
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  988,
		  1003
		],
		"op": "GT",
		"path": "9"
	  },
	  "4356": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  984,
		  1303
		],
		"op": "PUSH2",
		"path": "9",
		"value": "0x1133"
	  },
	  "4359": {
		"branch": 127,
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  984,
		  1303
		],
		"op": "JUMPI",
		"path": "9"
	  },
	  "4360": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1013,
		  1054
		],
		"op": "PUSH2",
		"path": "9",
		"statement": 62,
		"value": "0x111C"
	  },
	  "4363": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1013,
		  1016
		],
		"op": "DUP4",
		"path": "9"
	  },
	  "4364": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1050,
		  1052
		],
		"op": "PUSH1",
		"path": "9",
		"value": "0x19"
	  },
	  "4366": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1036,
		  1046
		],
		"op": "PUSH2",
		"path": "9",
		"value": "0x1FE0"
	  },
	  "4369": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1045,
		  1046
		],
		"op": "PUSH1",
		"path": "9",
		"value": "0x5"
	  },
	  "4371": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1036,
		  1046
		],
		"op": "DUP7",
		"path": "9"
	  },
	  "4372": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1036,
		  1046
		],
		"op": "SWAP1",
		"path": "9"
	  },
	  "4373": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1036,
		  1046
		],
		"op": "SHL",
		"path": "9"
	  },
	  "4374": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1036,
		  1046
		],
		"op": "AND",
		"path": "9"
	  },
	  "4375": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1035,
		  1052
		],
		"op": "OR",
		"path": "9"
	  },
	  "4376": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1013,
		  1028
		],
		"op": "PUSH2",
		"path": "9",
		"value": "0x1325"
	  },
	  "4379": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"jump": "i",
		"offset": [
		  1013,
		  1054
		],
		"op": "JUMP",
		"path": "9"
	  },
	  "4380": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1013,
		  1054
		],
		"op": "JUMPDEST",
		"path": "9"
	  },
	  "4381": {
		"op": "POP"
	  },
	  "4382": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1062,
		  1085
		],
		"op": "PUSH2",
		"path": "9",
		"statement": 63,
		"value": "0x10B0"
	  },
	  "4385": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1062,
		  1065
		],
		"op": "DUP4",
		"path": "9"
	  },
	  "4386": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1062,
		  1085
		],
		"op": "PUSH8",
		"path": "9",
		"value": "0xFFFFFFFFFFFFFFFF"
	  },
	  "4395": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1062,
		  1085
		],
		"op": "DUP4",
		"path": "9"
	  },
	  "4396": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1062,
		  1085
		],
		"op": "AND",
		"path": "9"
	  },
	  "4397": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1083,
		  1084
		],
		"op": "PUSH1",
		"path": "9",
		"value": "0x2"
	  },
	  "4399": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1062,
		  1075
		],
		"op": "PUSH2",
		"path": "9",
		"value": "0x134A"
	  },
	  "4402": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"jump": "i",
		"offset": [
		  1062,
		  1085
		],
		"op": "JUMP",
		"path": "9"
	  },
	  "4403": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  984,
		  1303
		],
		"op": "JUMPDEST",
		"path": "9"
	  },
	  "4404": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1111,
		  1121
		],
		"op": "PUSH4",
		"path": "9",
		"value": "0xFFFFFFFF"
	  },
	  "4409": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1102,
		  1107
		],
		"op": "DUP2",
		"path": "9"
	  },
	  "4410": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1102,
		  1121
		],
		"op": "PUSH8",
		"path": "9",
		"value": "0xFFFFFFFFFFFFFFFF"
	  },
	  "4419": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1102,
		  1121
		],
		"op": "AND",
		"path": "9"
	  },
	  "4420": {
		"branch": 128,
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1102,
		  1121
		],
		"op": "GT",
		"path": "9"
	  },
	  "4421": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1098,
		  1303
		],
		"op": "PUSH2",
		"path": "9",
		"value": "0x1174"
	  },
	  "4424": {
		"branch": 128,
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1098,
		  1303
		],
		"op": "JUMPI",
		"path": "9"
	  },
	  "4425": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1131,
		  1172
		],
		"op": "PUSH2",
		"path": "9",
		"statement": 64,
		"value": "0x115D"
	  },
	  "4428": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1131,
		  1134
		],
		"op": "DUP4",
		"path": "9"
	  },
	  "4429": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1168,
		  1170
		],
		"op": "PUSH1",
		"path": "9",
		"value": "0x1A"
	  },
	  "4431": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1154,
		  1164
		],
		"op": "PUSH2",
		"path": "9",
		"value": "0x1FE0"
	  },
	  "4434": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1163,
		  1164
		],
		"op": "PUSH1",
		"path": "9",
		"value": "0x5"
	  },
	  "4436": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1154,
		  1164
		],
		"op": "DUP7",
		"path": "9"
	  },
	  "4437": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1154,
		  1164
		],
		"op": "SWAP1",
		"path": "9"
	  },
	  "4438": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1154,
		  1164
		],
		"op": "SHL",
		"path": "9"
	  },
	  "4439": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1154,
		  1164
		],
		"op": "AND",
		"path": "9"
	  },
	  "4440": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1153,
		  1170
		],
		"op": "OR",
		"path": "9"
	  },
	  "4441": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1131,
		  1146
		],
		"op": "PUSH2",
		"path": "9",
		"value": "0x1325"
	  },
	  "4444": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"jump": "i",
		"offset": [
		  1131,
		  1172
		],
		"op": "JUMP",
		"path": "9"
	  },
	  "4445": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1131,
		  1172
		],
		"op": "JUMPDEST",
		"path": "9"
	  },
	  "4446": {
		"op": "POP"
	  },
	  "4447": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1180,
		  1203
		],
		"op": "PUSH2",
		"path": "9",
		"statement": 65,
		"value": "0x10B0"
	  },
	  "4450": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1180,
		  1183
		],
		"op": "DUP4",
		"path": "9"
	  },
	  "4451": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1180,
		  1203
		],
		"op": "PUSH8",
		"path": "9",
		"value": "0xFFFFFFFFFFFFFFFF"
	  },
	  "4460": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1180,
		  1203
		],
		"op": "DUP4",
		"path": "9"
	  },
	  "4461": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1180,
		  1203
		],
		"op": "AND",
		"path": "9"
	  },
	  "4462": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1201,
		  1202
		],
		"op": "PUSH1",
		"path": "9",
		"value": "0x4"
	  },
	  "4464": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1180,
		  1193
		],
		"op": "PUSH2",
		"path": "9",
		"value": "0x134A"
	  },
	  "4467": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"jump": "i",
		"offset": [
		  1180,
		  1203
		],
		"op": "JUMP",
		"path": "9"
	  },
	  "4468": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1098,
		  1303
		],
		"op": "JUMPDEST",
		"path": "9"
	  },
	  "4469": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1224,
		  1265
		],
		"op": "PUSH2",
		"path": "9",
		"statement": 66,
		"value": "0x1189"
	  },
	  "4472": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1224,
		  1227
		],
		"op": "DUP4",
		"path": "9"
	  },
	  "4473": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1261,
		  1263
		],
		"op": "PUSH1",
		"path": "9",
		"value": "0x1B"
	  },
	  "4475": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1247,
		  1257
		],
		"op": "PUSH2",
		"path": "9",
		"value": "0x1FE0"
	  },
	  "4478": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1256,
		  1257
		],
		"op": "PUSH1",
		"path": "9",
		"value": "0x5"
	  },
	  "4480": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1247,
		  1257
		],
		"op": "DUP7",
		"path": "9"
	  },
	  "4481": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1247,
		  1257
		],
		"op": "SWAP1",
		"path": "9"
	  },
	  "4482": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1247,
		  1257
		],
		"op": "SHL",
		"path": "9"
	  },
	  "4483": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1247,
		  1257
		],
		"op": "AND",
		"path": "9"
	  },
	  "4484": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1246,
		  1263
		],
		"op": "OR",
		"path": "9"
	  },
	  "4485": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1224,
		  1239
		],
		"op": "PUSH2",
		"path": "9",
		"value": "0x1325"
	  },
	  "4488": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"jump": "i",
		"offset": [
		  1224,
		  1265
		],
		"op": "JUMP",
		"path": "9"
	  },
	  "4489": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1224,
		  1265
		],
		"op": "JUMPDEST",
		"path": "9"
	  },
	  "4490": {
		"op": "POP"
	  },
	  "4491": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1273,
		  1296
		],
		"op": "PUSH2",
		"path": "9",
		"statement": 67,
		"value": "0x10B0"
	  },
	  "4494": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1273,
		  1276
		],
		"op": "DUP4",
		"path": "9"
	  },
	  "4495": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1273,
		  1296
		],
		"op": "PUSH8",
		"path": "9",
		"value": "0xFFFFFFFFFFFFFFFF"
	  },
	  "4504": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1273,
		  1296
		],
		"op": "DUP4",
		"path": "9"
	  },
	  "4505": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1273,
		  1296
		],
		"op": "AND",
		"path": "9"
	  },
	  "4506": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1294,
		  1295
		],
		"op": "PUSH1",
		"path": "9",
		"value": "0x8"
	  },
	  "4508": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"offset": [
		  1273,
		  1286
		],
		"op": "PUSH2",
		"path": "9",
		"value": "0x134A"
	  },
	  "4511": {
		"fn": "CBORChainlink.encodeFixedNumeric",
		"jump": "i",
		"offset": [
		  1273,
		  1296
		],
		"op": "JUMP",
		"path": "9"
	  },
	  "4512": {
		"fn": "BufferChainlink.append",
		"offset": [
		  4692,
		  4847
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "4513": {
		"op": "PUSH1",
		"value": "0x40"
	  },
	  "4515": {
		"op": "DUP1"
	  },
	  "4516": {
		"op": "MLOAD"
	  },
	  "4517": {
		"op": "DUP1"
	  },
	  "4518": {
		"op": "DUP3"
	  },
	  "4519": {
		"op": "ADD"
	  },
	  "4520": {
		"op": "SWAP1"
	  },
	  "4521": {
		"op": "SWAP2"
	  },
	  "4522": {
		"op": "MSTORE"
	  },
	  "4523": {
		"op": "PUSH1",
		"value": "0x60"
	  },
	  "4525": {
		"op": "DUP2"
	  },
	  "4526": {
		"op": "MSTORE"
	  },
	  "4527": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "4529": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "4531": {
		"op": "DUP3"
	  },
	  "4532": {
		"op": "ADD"
	  },
	  "4533": {
		"op": "MSTORE"
	  },
	  "4534": {
		"fn": "BufferChainlink.append",
		"offset": [
		  4797,
		  4842
		],
		"op": "PUSH2",
		"path": "8",
		"statement": 68,
		"value": "0xF2F"
	  },
	  "4537": {
		"fn": "BufferChainlink.append",
		"offset": [
		  4803,
		  4806
		],
		"op": "DUP4",
		"path": "8"
	  },
	  "4538": {
		"fn": "BufferChainlink.append",
		"offset": [
		  4808,
		  4811
		],
		"op": "DUP5",
		"path": "8"
	  },
	  "4539": {
		"fn": "BufferChainlink.append",
		"offset": [
		  4808,
		  4815
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x0"
	  },
	  "4541": {
		"fn": "BufferChainlink.append",
		"offset": [
		  4808,
		  4815
		],
		"op": "ADD",
		"path": "8"
	  },
	  "4542": {
		"fn": "BufferChainlink.append",
		"offset": [
		  4808,
		  4815
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "4543": {
		"fn": "BufferChainlink.append",
		"offset": [
		  4808,
		  4822
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "4544": {
		"fn": "BufferChainlink.append",
		"offset": [
		  4824,
		  4828
		],
		"op": "DUP5",
		"path": "8"
	  },
	  "4545": {
		"fn": "BufferChainlink.append",
		"offset": [
		  4830,
		  4834
		],
		"op": "DUP6",
		"path": "8"
	  },
	  "4546": {
		"fn": "BufferChainlink.append",
		"offset": [
		  4830,
		  4841
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "4547": {
		"fn": "BufferChainlink.append",
		"offset": [
		  4797,
		  4802
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x1370"
	  },
	  "4550": {
		"fn": "BufferChainlink.append",
		"jump": "i",
		"offset": [
		  4797,
		  4842
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "4551": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6629,
		  7059
		],
		"op": "JUMPDEST",
		"path": "1"
	  },
	  "4552": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6818,
		  6847
		],
		"op": "PUSH1",
		"path": "1",
		"statement": 69,
		"value": "0x40"
	  },
	  "4554": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6818,
		  6847
		],
		"op": "MLOAD",
		"path": "1"
	  },
	  "4555": {
		"op": "PUSH12",
		"value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
	  },
	  "4568": {
		"op": "NOT"
	  },
	  "4569": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6835,
		  6839
		],
		"op": "ADDRESS",
		"path": "1"
	  },
	  "4570": {
		"op": "PUSH1",
		"value": "0x60"
	  },
	  "4572": {
		"op": "SHL"
	  },
	  "4573": {
		"op": "AND"
	  },
	  "4574": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6818,
		  6847
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x20"
	  },
	  "4576": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6818,
		  6847
		],
		"op": "DUP3",
		"path": "1"
	  },
	  "4577": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6818,
		  6847
		],
		"op": "ADD",
		"path": "1"
	  },
	  "4578": {
		"op": "MSTORE"
	  },
	  "4579": {
		"op": "PUSH1",
		"value": "0x34"
	  },
	  "4581": {
		"op": "DUP2"
	  },
	  "4582": {
		"op": "ADD"
	  },
	  "4583": {
		"op": "DUP5"
	  },
	  "4584": {
		"op": "SWAP1"
	  },
	  "4585": {
		"op": "MSTORE"
	  },
	  "4586": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6771,
		  6788
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x0"
	  },
	  "4588": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6771,
		  6788
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "4589": {
		"op": "PUSH1",
		"value": "0x54"
	  },
	  "4591": {
		"op": "ADD"
	  },
	  "4592": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6818,
		  6847
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x40"
	  },
	  "4594": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6818,
		  6847
		],
		"op": "DUP1",
		"path": "1"
	  },
	  "4595": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6818,
		  6847
		],
		"op": "MLOAD",
		"path": "1"
	  },
	  "4596": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6818,
		  6847
		],
		"op": "DUP1",
		"path": "1"
	  },
	  "4597": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6818,
		  6847
		],
		"op": "DUP4",
		"path": "1"
	  },
	  "4598": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6818,
		  6847
		],
		"op": "SUB",
		"path": "1"
	  },
	  "4599": {
		"op": "PUSH1",
		"value": "0x1F"
	  },
	  "4601": {
		"op": "NOT"
	  },
	  "4602": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6818,
		  6847
		],
		"op": "ADD",
		"path": "1"
	  },
	  "4603": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6818,
		  6847
		],
		"op": "DUP2",
		"path": "1"
	  },
	  "4604": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6818,
		  6847
		],
		"op": "MSTORE",
		"path": "1"
	  },
	  "4605": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6818,
		  6847
		],
		"op": "DUP3",
		"path": "1"
	  },
	  "4606": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6818,
		  6847
		],
		"op": "DUP3",
		"path": "1"
	  },
	  "4607": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6818,
		  6847
		],
		"op": "MSTORE",
		"path": "1"
	  },
	  "4608": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6808,
		  6848
		],
		"op": "DUP1",
		"path": "1"
	  },
	  "4609": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6808,
		  6848
		],
		"op": "MLOAD",
		"path": "1"
	  },
	  "4610": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6818,
		  6847
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x20"
	  },
	  "4612": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6808,
		  6848
		],
		"op": "SWAP2",
		"path": "1"
	  },
	  "4613": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6808,
		  6848
		],
		"op": "DUP3",
		"path": "1"
	  },
	  "4614": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6808,
		  6848
		],
		"op": "ADD",
		"path": "1"
	  },
	  "4615": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6808,
		  6848
		],
		"op": "KECCAK256",
		"path": "1"
	  },
	  "4616": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6854,
		  6882
		],
		"op": "PUSH1",
		"path": "1",
		"statement": 70,
		"value": "0x0"
	  },
	  "4618": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6854,
		  6882
		],
		"op": "DUP2",
		"path": "1"
	  },
	  "4619": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6854,
		  6882
		],
		"op": "DUP2",
		"path": "1"
	  },
	  "4620": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6854,
		  6882
		],
		"op": "MSTORE",
		"path": "1"
	  },
	  "4621": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6854,
		  6871
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x5"
	  },
	  "4623": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6854,
		  6882
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "4624": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6854,
		  6882
		],
		"op": "SWAP3",
		"path": "1"
	  },
	  "4625": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6854,
		  6882
		],
		"op": "MSTORE",
		"path": "1"
	  },
	  "4626": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6854,
		  6882
		],
		"op": "SWAP2",
		"path": "1"
	  },
	  "4627": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6854,
		  6882
		],
		"op": "DUP2",
		"path": "1"
	  },
	  "4628": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6854,
		  6882
		],
		"op": "KECCAK256",
		"path": "1"
	  },
	  "4629": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6854,
		  6898
		],
		"op": "DUP1",
		"path": "1"
	  },
	  "4630": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6854,
		  6898
		],
		"op": "SLOAD",
		"path": "1"
	  },
	  "4631": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "4633": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "4635": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "4637": {
		"op": "SHL"
	  },
	  "4638": {
		"op": "SUB"
	  },
	  "4639": {
		"op": "NOT"
	  },
	  "4640": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6854,
		  6898
		],
		"op": "AND",
		"path": "1"
	  },
	  "4641": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "4643": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "4645": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "4647": {
		"op": "SHL"
	  },
	  "4648": {
		"op": "SUB"
	  },
	  "4649": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6854,
		  6898
		],
		"op": "DUP11",
		"path": "1"
	  },
	  "4650": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6854,
		  6898
		],
		"op": "AND",
		"path": "1"
	  },
	  "4651": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6854,
		  6898
		],
		"op": "OR",
		"path": "1"
	  },
	  "4652": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6854,
		  6898
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "4653": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6854,
		  6898
		],
		"op": "SSTORE",
		"path": "1"
	  },
	  "4654": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6808,
		  6848
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "4655": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6808,
		  6848
		],
		"op": "SWAP3",
		"path": "1"
	  },
	  "4656": {
		"op": "POP"
	  },
	  "4657": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6808,
		  6848
		],
		"op": "DUP3",
		"path": "1"
	  },
	  "4658": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6808,
		  6848
		],
		"op": "SWAP2",
		"path": "1"
	  },
	  "4659": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6909,
		  6938
		],
		"op": "PUSH32",
		"path": "1",
		"statement": 71,
		"value": "0xB5E6E01E79F91267DC17B4E6314D5D4D03593D2CEEE0FBB452B750BD70EA5AF9"
	  },
	  "4692": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6909,
		  6938
		],
		"op": "SWAP2",
		"path": "1"
	  },
	  "4693": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6854,
		  6882
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "4694": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6909,
		  6938
		],
		"op": "LOG2",
		"path": "1"
	  },
	  "4695": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  6958
		],
		"op": "PUSH1",
		"path": "1",
		"statement": 72,
		"value": "0x2"
	  },
	  "4697": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  6958
		],
		"op": "SLOAD",
		"path": "1"
	  },
	  "4698": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x40"
	  },
	  "4700": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "MLOAD",
		"path": "1"
	  },
	  "4701": {
		"op": "PUSH4",
		"value": "0x2000575"
	  },
	  "4706": {
		"op": "PUSH1",
		"value": "0xE5"
	  },
	  "4708": {
		"op": "SHL"
	  },
	  "4709": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "DUP2",
		"path": "1"
	  },
	  "4710": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "MSTORE",
		"path": "1"
	  },
	  "4711": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "4713": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "4715": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "4717": {
		"op": "SHL"
	  },
	  "4718": {
		"op": "SUB"
	  },
	  "4719": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  6958
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "4720": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  6958
		],
		"op": "SWAP2",
		"path": "1"
	  },
	  "4721": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  6958
		],
		"op": "AND",
		"path": "1"
	  },
	  "4722": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  6958
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "4723": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  6974
		],
		"op": "PUSH4",
		"path": "1",
		"value": "0x4000AEA0"
	  },
	  "4728": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  6974
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "4729": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "PUSH2",
		"path": "1",
		"value": "0x128A"
	  },
	  "4732": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "4733": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6975,
		  6988
		],
		"op": "DUP9",
		"path": "1"
	  },
	  "4734": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6975,
		  6988
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "4735": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6990,
		  6997
		],
		"op": "DUP8",
		"path": "1"
	  },
	  "4736": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6990,
		  6997
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "4737": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6999,
		  7013
		],
		"op": "DUP8",
		"path": "1"
	  },
	  "4738": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6999,
		  7013
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "4739": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x4"
	  },
	  "4741": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "ADD",
		"path": "1"
	  },
	  "4742": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "PUSH2",
		"path": "1",
		"value": "0x1840"
	  },
	  "4745": {
		"fn": "ChainlinkClient._rawRequest",
		"jump": "i",
		"offset": [
		  6952,
		  7014
		],
		"op": "JUMP",
		"path": "1"
	  },
	  "4746": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "JUMPDEST",
		"path": "1"
	  },
	  "4747": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x20"
	  },
	  "4749": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x40"
	  },
	  "4751": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "MLOAD",
		"path": "1"
	  },
	  "4752": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "DUP1",
		"path": "1"
	  },
	  "4753": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "DUP4",
		"path": "1"
	  },
	  "4754": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "SUB",
		"path": "1"
	  },
	  "4755": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "DUP2",
		"path": "1"
	  },
	  "4756": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x0"
	  },
	  "4758": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "DUP8",
		"path": "1"
	  },
	  "4759": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "GAS",
		"path": "1"
	  },
	  "4760": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "CALL",
		"path": "1"
	  },
	  "4761": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "ISZERO",
		"path": "1"
	  },
	  "4762": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "DUP1",
		"path": "1"
	  },
	  "4763": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "ISZERO",
		"path": "1"
	  },
	  "4764": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "PUSH2",
		"path": "1",
		"value": "0x12A9"
	  },
	  "4767": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "JUMPI",
		"path": "1"
	  },
	  "4768": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "RETURNDATASIZE",
		"path": "1"
	  },
	  "4769": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x0"
	  },
	  "4771": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "DUP1",
		"path": "1"
	  },
	  "4772": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "RETURNDATACOPY",
		"path": "1"
	  },
	  "4773": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "RETURNDATASIZE",
		"path": "1"
	  },
	  "4774": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x0"
	  },
	  "4776": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "REVERT",
		"path": "1"
	  },
	  "4777": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "JUMPDEST",
		"path": "1"
	  },
	  "4778": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "POP",
		"path": "1"
	  },
	  "4779": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "POP",
		"path": "1"
	  },
	  "4780": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "POP",
		"path": "1"
	  },
	  "4781": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "POP",
		"path": "1"
	  },
	  "4782": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x40"
	  },
	  "4784": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "MLOAD",
		"path": "1"
	  },
	  "4785": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "RETURNDATASIZE",
		"path": "1"
	  },
	  "4786": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x1F"
	  },
	  "4788": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "NOT",
		"path": "1"
	  },
	  "4789": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x1F"
	  },
	  "4791": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "DUP3",
		"path": "1"
	  },
	  "4792": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "ADD",
		"path": "1"
	  },
	  "4793": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "AND",
		"path": "1"
	  },
	  "4794": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "DUP3",
		"path": "1"
	  },
	  "4795": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "ADD",
		"path": "1"
	  },
	  "4796": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "DUP1",
		"path": "1"
	  },
	  "4797": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x40"
	  },
	  "4799": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "MSTORE",
		"path": "1"
	  },
	  "4800": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "POP",
		"path": "1"
	  },
	  "4801": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "DUP2",
		"path": "1"
	  },
	  "4802": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "ADD",
		"path": "1"
	  },
	  "4803": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "4804": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "PUSH2",
		"path": "1",
		"value": "0x12CD"
	  },
	  "4807": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "SWAP2",
		"path": "1"
	  },
	  "4808": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "SWAP1",
		"path": "1"
	  },
	  "4809": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "PUSH2",
		"path": "1",
		"value": "0x1867"
	  },
	  "4812": {
		"fn": "ChainlinkClient._rawRequest",
		"jump": "i",
		"offset": [
		  6952,
		  7014
		],
		"op": "JUMP",
		"path": "1"
	  },
	  "4813": {
		"branch": 129,
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6952,
		  7014
		],
		"op": "JUMPDEST",
		"path": "1"
	  },
	  "4814": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6944,
		  7054
		],
		"op": "PUSH2",
		"path": "1",
		"value": "0xF76"
	  },
	  "4817": {
		"branch": 129,
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6944,
		  7054
		],
		"op": "JUMPI",
		"path": "1"
	  },
	  "4818": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6944,
		  7054
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x40"
	  },
	  "4820": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6944,
		  7054
		],
		"op": "MLOAD",
		"path": "1"
	  },
	  "4821": {
		"op": "PUSH3",
		"value": "0x461BCD"
	  },
	  "4825": {
		"op": "PUSH1",
		"value": "0xE5"
	  },
	  "4827": {
		"op": "SHL"
	  },
	  "4828": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6944,
		  7054
		],
		"op": "DUP2",
		"path": "1"
	  },
	  "4829": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6944,
		  7054
		],
		"op": "MSTORE",
		"path": "1"
	  },
	  "4830": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "4832": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6944,
		  7054
		],
		"op": "PUSH1",
		"path": "1",
		"value": "0x4"
	  },
	  "4834": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6944,
		  7054
		],
		"op": "DUP3",
		"path": "1"
	  },
	  "4835": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6944,
		  7054
		],
		"op": "ADD",
		"path": "1"
	  },
	  "4836": {
		"op": "MSTORE"
	  },
	  "4837": {
		"op": "PUSH1",
		"value": "0x23"
	  },
	  "4839": {
		"op": "PUSH1",
		"value": "0x24"
	  },
	  "4841": {
		"op": "DUP3"
	  },
	  "4842": {
		"op": "ADD"
	  },
	  "4843": {
		"op": "MSTORE"
	  },
	  "4844": {
		"op": "PUSH32",
		"value": "0x756E61626C6520746F207472616E73666572416E6443616C6C20746F206F7261"
	  },
	  "4877": {
		"op": "PUSH1",
		"value": "0x44"
	  },
	  "4879": {
		"op": "DUP3"
	  },
	  "4880": {
		"op": "ADD"
	  },
	  "4881": {
		"op": "MSTORE"
	  },
	  "4882": {
		"op": "PUSH3",
		"value": "0x636C65"
	  },
	  "4886": {
		"op": "PUSH1",
		"value": "0xE8"
	  },
	  "4888": {
		"op": "SHL"
	  },
	  "4889": {
		"op": "PUSH1",
		"value": "0x64"
	  },
	  "4891": {
		"op": "DUP3"
	  },
	  "4892": {
		"op": "ADD"
	  },
	  "4893": {
		"op": "MSTORE"
	  },
	  "4894": {
		"op": "PUSH1",
		"value": "0x84"
	  },
	  "4896": {
		"op": "ADD"
	  },
	  "4897": {
		"fn": "ChainlinkClient._rawRequest",
		"offset": [
		  6944,
		  7054
		],
		"op": "PUSH2",
		"path": "1",
		"value": "0x30F"
	  },
	  "4900": {
		"op": "JUMP"
	  },
	  "4901": {
		"fn": "BufferChainlink.appendUint8",
		"offset": [
		  6040,
		  6185
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "4902": {
		"op": "PUSH1",
		"value": "0x40"
	  },
	  "4904": {
		"op": "DUP1"
	  },
	  "4905": {
		"op": "MLOAD"
	  },
	  "4906": {
		"op": "DUP1"
	  },
	  "4907": {
		"op": "DUP3"
	  },
	  "4908": {
		"op": "ADD"
	  },
	  "4909": {
		"op": "SWAP1"
	  },
	  "4910": {
		"op": "SWAP2"
	  },
	  "4911": {
		"op": "MSTORE"
	  },
	  "4912": {
		"op": "PUSH1",
		"value": "0x60"
	  },
	  "4914": {
		"op": "DUP2"
	  },
	  "4915": {
		"op": "MSTORE"
	  },
	  "4916": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "4918": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "4920": {
		"op": "DUP3"
	  },
	  "4921": {
		"op": "ADD"
	  },
	  "4922": {
		"op": "MSTORE"
	  },
	  "4923": {
		"fn": "BufferChainlink.appendUint8",
		"offset": [
		  6143,
		  6180
		],
		"op": "PUSH2",
		"path": "8",
		"statement": 73,
		"value": "0xF2F"
	  },
	  "4926": {
		"fn": "BufferChainlink.appendUint8",
		"offset": [
		  6154,
		  6157
		],
		"op": "DUP4",
		"path": "8"
	  },
	  "4927": {
		"fn": "BufferChainlink.appendUint8",
		"offset": [
		  6159,
		  6162
		],
		"op": "DUP5",
		"path": "8"
	  },
	  "4928": {
		"fn": "BufferChainlink.appendUint8",
		"offset": [
		  6159,
		  6166
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x0"
	  },
	  "4930": {
		"fn": "BufferChainlink.appendUint8",
		"offset": [
		  6159,
		  6166
		],
		"op": "ADD",
		"path": "8"
	  },
	  "4931": {
		"fn": "BufferChainlink.appendUint8",
		"offset": [
		  6159,
		  6166
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "4932": {
		"fn": "BufferChainlink.appendUint8",
		"offset": [
		  6159,
		  6173
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "4933": {
		"fn": "BufferChainlink.appendUint8",
		"offset": [
		  6175,
		  6179
		],
		"op": "DUP5",
		"path": "8"
	  },
	  "4934": {
		"fn": "BufferChainlink.appendUint8",
		"offset": [
		  6143,
		  6153
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x145A"
	  },
	  "4937": {
		"fn": "BufferChainlink.appendUint8",
		"jump": "i",
		"offset": [
		  6143,
		  6180
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "4938": {
		"fn": "BufferChainlink.appendInt",
		"offset": [
		  9894,
		  10071
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "4939": {
		"op": "PUSH1",
		"value": "0x40"
	  },
	  "4941": {
		"op": "DUP1"
	  },
	  "4942": {
		"op": "MLOAD"
	  },
	  "4943": {
		"op": "DUP1"
	  },
	  "4944": {
		"op": "DUP3"
	  },
	  "4945": {
		"op": "ADD"
	  },
	  "4946": {
		"op": "SWAP1"
	  },
	  "4947": {
		"op": "SWAP2"
	  },
	  "4948": {
		"op": "MSTORE"
	  },
	  "4949": {
		"op": "PUSH1",
		"value": "0x60"
	  },
	  "4951": {
		"op": "DUP2"
	  },
	  "4952": {
		"op": "MSTORE"
	  },
	  "4953": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "4955": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "4957": {
		"op": "DUP3"
	  },
	  "4958": {
		"op": "ADD"
	  },
	  "4959": {
		"op": "MSTORE"
	  },
	  "4960": {
		"fn": "BufferChainlink.appendInt",
		"offset": [
		  10026,
		  10066
		],
		"op": "PUSH2",
		"path": "8",
		"statement": 74,
		"value": "0xF76"
	  },
	  "4963": {
		"fn": "BufferChainlink.appendInt",
		"offset": [
		  10035,
		  10038
		],
		"op": "DUP5",
		"path": "8"
	  },
	  "4964": {
		"fn": "BufferChainlink.appendInt",
		"offset": [
		  10040,
		  10043
		],
		"op": "DUP6",
		"path": "8"
	  },
	  "4965": {
		"fn": "BufferChainlink.appendInt",
		"offset": [
		  10040,
		  10047
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x0"
	  },
	  "4967": {
		"fn": "BufferChainlink.appendInt",
		"offset": [
		  10040,
		  10047
		],
		"op": "ADD",
		"path": "8"
	  },
	  "4968": {
		"fn": "BufferChainlink.appendInt",
		"offset": [
		  10040,
		  10047
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "4969": {
		"fn": "BufferChainlink.appendInt",
		"offset": [
		  10040,
		  10054
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "4970": {
		"fn": "BufferChainlink.appendInt",
		"offset": [
		  10056,
		  10060
		],
		"op": "DUP6",
		"path": "8"
	  },
	  "4971": {
		"fn": "BufferChainlink.appendInt",
		"offset": [
		  10062,
		  10065
		],
		"op": "DUP6",
		"path": "8"
	  },
	  "4972": {
		"fn": "BufferChainlink.appendInt",
		"offset": [
		  10026,
		  10034
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x14B5"
	  },
	  "4975": {
		"fn": "BufferChainlink.appendInt",
		"jump": "i",
		"offset": [
		  10026,
		  10066
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "4976": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2745,
		  3955
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "4977": {
		"op": "PUSH1",
		"value": "0x40"
	  },
	  "4979": {
		"op": "DUP1"
	  },
	  "4980": {
		"op": "MLOAD"
	  },
	  "4981": {
		"op": "DUP1"
	  },
	  "4982": {
		"op": "DUP3"
	  },
	  "4983": {
		"op": "ADD"
	  },
	  "4984": {
		"op": "SWAP1"
	  },
	  "4985": {
		"op": "SWAP2"
	  },
	  "4986": {
		"op": "MSTORE"
	  },
	  "4987": {
		"op": "PUSH1",
		"value": "0x60"
	  },
	  "4989": {
		"op": "DUP2"
	  },
	  "4990": {
		"op": "MSTORE"
	  },
	  "4991": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "4993": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "4995": {
		"op": "DUP3"
	  },
	  "4996": {
		"op": "ADD"
	  },
	  "4997": {
		"op": "MSTORE"
	  },
	  "4998": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2903,
		  2907
		],
		"op": "DUP3",
		"path": "8",
		"statement": 75
	  },
	  "4999": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2903,
		  2914
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "5000": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2896,
		  2899
		],
		"op": "DUP3",
		"path": "8"
	  },
	  "5001": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2896,
		  2914
		],
		"op": "GT",
		"path": "8"
	  },
	  "5002": {
		"branch": 120,
		"fn": "BufferChainlink.write",
		"offset": [
		  2896,
		  2914
		],
		"op": "ISZERO",
		"path": "8"
	  },
	  "5003": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2888,
		  2915
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x1393"
	  },
	  "5006": {
		"branch": 120,
		"fn": "BufferChainlink.write",
		"offset": [
		  2888,
		  2915
		],
		"op": "JUMPI",
		"path": "8"
	  },
	  "5007": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2888,
		  2915
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x0"
	  },
	  "5009": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2888,
		  2915
		],
		"op": "DUP1",
		"path": "8"
	  },
	  "5010": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2888,
		  2915
		],
		"op": "REVERT",
		"path": "8"
	  },
	  "5011": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2888,
		  2915
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5012": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2938,
		  2950
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x20"
	  },
	  "5014": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2938,
		  2950
		],
		"op": "DUP6",
		"path": "8"
	  },
	  "5015": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2938,
		  2950
		],
		"op": "ADD",
		"path": "8"
	  },
	  "5016": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2938,
		  2950
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "5017": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2926,
		  2935
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x13A2"
	  },
	  "5020": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2932,
		  2935
		],
		"op": "DUP4",
		"path": "8"
	  },
	  "5021": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2926,
		  2929
		],
		"op": "DUP7",
		"path": "8"
	  },
	  "5022": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2926,
		  2935
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x175D"
	  },
	  "5025": {
		"fn": "BufferChainlink.write",
		"jump": "i",
		"offset": [
		  2926,
		  2935
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "5026": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2926,
		  2935
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5027": {
		"branch": 121,
		"fn": "BufferChainlink.write",
		"offset": [
		  2926,
		  2950
		],
		"op": "GT",
		"path": "8"
	  },
	  "5028": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2922,
		  3012
		],
		"op": "ISZERO",
		"path": "8"
	  },
	  "5029": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2922,
		  3012
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x13D5"
	  },
	  "5032": {
		"branch": 121,
		"fn": "BufferChainlink.write",
		"offset": [
		  2922,
		  3012
		],
		"op": "JUMPI",
		"path": "8"
	  },
	  "5033": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2960,
		  3005
		],
		"op": "PUSH2",
		"path": "8",
		"statement": 76,
		"value": "0x13D5"
	  },
	  "5036": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2967,
		  2970
		],
		"op": "DUP6",
		"path": "8"
	  },
	  "5037": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2972,
		  3000
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x13C5"
	  },
	  "5040": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2976,
		  2979
		],
		"op": "DUP8",
		"path": "8"
	  },
	  "5041": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2976,
		  2988
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x20"
	  },
	  "5043": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2976,
		  2988
		],
		"op": "ADD",
		"path": "8"
	  },
	  "5044": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2976,
		  2988
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "5045": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2996,
		  2999
		],
		"op": "DUP8",
		"path": "8"
	  },
	  "5046": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2990,
		  2993
		],
		"op": "DUP7",
		"path": "8"
	  },
	  "5047": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2990,
		  2999
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x13C0"
	  },
	  "5050": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2990,
		  2999
		],
		"op": "SWAP2",
		"path": "8"
	  },
	  "5051": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2990,
		  2999
		],
		"op": "SWAP1",
		"path": "8"
	  },
	  "5052": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2990,
		  2999
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x175D"
	  },
	  "5055": {
		"fn": "BufferChainlink.write",
		"jump": "i",
		"offset": [
		  2990,
		  2999
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "5056": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2990,
		  2999
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5057": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2972,
		  2975
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x1536"
	  },
	  "5060": {
		"fn": "BufferChainlink.write",
		"jump": "i",
		"offset": [
		  2972,
		  3000
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "5061": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2972,
		  3000
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5062": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2972,
		  3004
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x13D0"
	  },
	  "5065": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2972,
		  3004
		],
		"op": "SWAP1",
		"path": "8"
	  },
	  "5066": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3003,
		  3004
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x2"
	  },
	  "5068": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2972,
		  3004
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x1746"
	  },
	  "5071": {
		"fn": "BufferChainlink.write",
		"jump": "i",
		"offset": [
		  2972,
		  3004
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "5072": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2972,
		  3004
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5073": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2960,
		  2966
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x1547"
	  },
	  "5076": {
		"fn": "BufferChainlink.write",
		"jump": "i",
		"offset": [
		  2960,
		  3005
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "5077": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2960,
		  3005
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5078": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3018,
		  3030
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x0"
	  },
	  "5080": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3036,
		  3047
		],
		"op": "DUP1",
		"path": "8"
	  },
	  "5081": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3133,
		  3136
		],
		"op": "DUP7",
		"path": "8"
	  },
	  "5082": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3127,
		  3137
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "5083": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3204,
		  3210
		],
		"op": "DUP1",
		"path": "8"
	  },
	  "5084": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3198,
		  3211
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "5085": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3320,
		  3323
		],
		"op": "DUP8",
		"path": "8"
	  },
	  "5086": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3315,
		  3317
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x20"
	  },
	  "5088": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3307,
		  3313
		],
		"op": "DUP4",
		"path": "8"
	  },
	  "5089": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3303,
		  3318
		],
		"op": "ADD",
		"path": "8"
	  },
	  "5090": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3299,
		  3324
		],
		"op": "ADD",
		"path": "8"
	  },
	  "5091": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3291,
		  3324
		],
		"op": "SWAP4",
		"path": "8"
	  },
	  "5092": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3291,
		  3324
		],
		"op": "POP",
		"path": "8"
	  },
	  "5093": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3404,
		  3410
		],
		"op": "DUP1",
		"path": "8"
	  },
	  "5094": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3398,
		  3401
		],
		"op": "DUP9",
		"path": "8"
	  },
	  "5095": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3393,
		  3396
		],
		"op": "DUP8",
		"path": "8"
	  },
	  "5096": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3389,
		  3402
		],
		"op": "ADD",
		"path": "8"
	  },
	  "5097": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3386,
		  3411
		],
		"op": "GT",
		"path": "8"
	  },
	  "5098": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3383,
		  3459
		],
		"op": "ISZERO",
		"path": "8"
	  },
	  "5099": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3383,
		  3459
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x13F4"
	  },
	  "5102": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3383,
		  3459
		],
		"op": "JUMPI",
		"path": "8"
	  },
	  "5103": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3446,
		  3449
		],
		"op": "DUP8",
		"path": "8"
	  },
	  "5104": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3441,
		  3444
		],
		"op": "DUP7",
		"path": "8"
	  },
	  "5105": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3437,
		  3450
		],
		"op": "ADD",
		"path": "8"
	  },
	  "5106": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3429,
		  3435
		],
		"op": "DUP3",
		"path": "8"
	  },
	  "5107": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3422,
		  3451
		],
		"op": "MSTORE",
		"path": "8"
	  },
	  "5108": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3383,
		  3459
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5109": {
		"op": "POP"
	  },
	  "5110": {
		"op": "POP"
	  },
	  "5111": {
		"op": "POP"
	  },
	  "5112": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3483,
		  3485
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x20"
	  },
	  "5114": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3473,
		  3486
		],
		"op": "DUP5",
		"path": "8"
	  },
	  "5115": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3473,
		  3486
		],
		"op": "ADD",
		"path": "8"
	  },
	  "5116": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3544,
		  3673
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5117": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3558,
		  3560
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x20"
	  },
	  "5119": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3551,
		  3554
		],
		"op": "DUP5",
		"path": "8"
	  },
	  "5120": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3551,
		  3560
		],
		"op": "LT",
		"path": "8"
	  },
	  "5121": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3544,
		  3673
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x1434"
	  },
	  "5124": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3544,
		  3673
		],
		"op": "JUMPI",
		"path": "8"
	  },
	  "5125": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3613,
		  3623
		],
		"op": "DUP1",
		"path": "8"
	  },
	  "5126": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3613,
		  3623
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "5127": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3600,
		  3624
		],
		"op": "DUP3",
		"path": "8"
	  },
	  "5128": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3600,
		  3624
		],
		"op": "MSTORE",
		"path": "8"
	  },
	  "5129": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3639,
		  3649
		],
		"op": "PUSH2",
		"path": "8",
		"statement": 77,
		"value": "0x1413"
	  },
	  "5132": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3647,
		  3649
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x20"
	  },
	  "5134": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3607,
		  3611
		],
		"op": "DUP4",
		"path": "8"
	  },
	  "5135": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3639,
		  3649
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x175D"
	  },
	  "5138": {
		"fn": "BufferChainlink.write",
		"jump": "i",
		"offset": [
		  3639,
		  3649
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "5139": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3639,
		  3649
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5140": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3639,
		  3649
		],
		"op": "SWAP2",
		"path": "8"
	  },
	  "5141": {
		"op": "POP"
	  },
	  "5142": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3657,
		  3666
		],
		"op": "PUSH2",
		"path": "8",
		"statement": 78,
		"value": "0x1420"
	  },
	  "5145": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3664,
		  3666
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x20"
	  },
	  "5147": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3657,
		  3666
		],
		"op": "DUP3",
		"path": "8"
	  },
	  "5148": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3657,
		  3666
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x175D"
	  },
	  "5151": {
		"fn": "BufferChainlink.write",
		"jump": "i",
		"offset": [
		  3657,
		  3666
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "5152": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3657,
		  3666
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5153": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3657,
		  3666
		],
		"op": "SWAP1",
		"path": "8"
	  },
	  "5154": {
		"op": "POP"
	  },
	  "5155": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3562,
		  3571
		],
		"op": "PUSH2",
		"path": "8",
		"statement": 79,
		"value": "0x142D"
	  },
	  "5158": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3569,
		  3571
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x20"
	  },
	  "5160": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3562,
		  3571
		],
		"op": "DUP6",
		"path": "8"
	  },
	  "5161": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3562,
		  3571
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x182D"
	  },
	  "5164": {
		"fn": "BufferChainlink.write",
		"jump": "i",
		"offset": [
		  3562,
		  3571
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "5165": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3562,
		  3571
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5166": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3562,
		  3571
		],
		"op": "SWAP4",
		"path": "8"
	  },
	  "5167": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3562,
		  3571
		],
		"op": "POP",
		"path": "8"
	  },
	  "5168": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3544,
		  3673
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x13FC"
	  },
	  "5171": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3544,
		  3673
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "5172": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3544,
		  3673
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5173": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3807,
		  3817
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "5174": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3858,
		  3869
		],
		"op": "DUP2",
		"path": "8"
	  },
	  "5175": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3858,
		  3869
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "5176": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "5178": {
		"op": "NOT"
	  },
	  "5179": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3747,
		  3749
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x20"
	  },
	  "5181": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3747,
		  3755
		],
		"op": "DUP7",
		"path": "8"
	  },
	  "5182": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3747,
		  3755
		],
		"op": "SWAP1",
		"path": "8"
	  },
	  "5183": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3747,
		  3755
		],
		"op": "SUB",
		"path": "8"
	  },
	  "5184": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3741,
		  3744
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x100"
	  },
	  "5187": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3741,
		  3756
		],
		"op": "EXP",
		"path": "8"
	  },
	  "5188": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3740,
		  3761
		],
		"op": "ADD",
		"path": "8"
	  },
	  "5189": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3854,
		  3876
		],
		"op": "SWAP1",
		"path": "8"
	  },
	  "5190": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3854,
		  3876
		],
		"op": "DUP2",
		"path": "8"
	  },
	  "5191": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3854,
		  3876
		],
		"op": "AND",
		"path": "8"
	  },
	  "5192": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3819,
		  3828
		],
		"op": "SWAP1",
		"path": "8"
	  },
	  "5193": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3819,
		  3828
		],
		"op": "NOT",
		"path": "8"
	  },
	  "5194": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3803,
		  3829
		],
		"op": "SWAP2",
		"path": "8"
	  },
	  "5195": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3803,
		  3829
		],
		"op": "SWAP1",
		"path": "8"
	  },
	  "5196": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3803,
		  3829
		],
		"op": "SWAP2",
		"path": "8"
	  },
	  "5197": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3803,
		  3829
		],
		"op": "AND",
		"path": "8"
	  },
	  "5198": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3898,
		  3919
		],
		"op": "OR",
		"path": "8"
	  },
	  "5199": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3885,
		  3920
		],
		"op": "SWAP1",
		"path": "8"
	  },
	  "5200": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3885,
		  3920
		],
		"op": "MSTORE",
		"path": "8"
	  },
	  "5201": {
		"op": "POP"
	  },
	  "5202": {
		"fn": "BufferChainlink.write",
		"offset": [
		  3947,
		  3950
		],
		"op": "DUP4",
		"path": "8",
		"statement": 80
	  },
	  "5203": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2745,
		  3955
		],
		"op": "SWAP5",
		"path": "8"
	  },
	  "5204": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2745,
		  3955
		],
		"op": "SWAP4",
		"path": "8"
	  },
	  "5205": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2745,
		  3955
		],
		"op": "POP",
		"path": "8"
	  },
	  "5206": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2745,
		  3955
		],
		"op": "POP",
		"path": "8"
	  },
	  "5207": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2745,
		  3955
		],
		"op": "POP",
		"path": "8"
	  },
	  "5208": {
		"fn": "BufferChainlink.write",
		"offset": [
		  2745,
		  3955
		],
		"op": "POP",
		"path": "8"
	  },
	  "5209": {
		"fn": "BufferChainlink.write",
		"jump": "o",
		"offset": [
		  2745,
		  3955
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "5210": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5148,
		  5787
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5211": {
		"op": "PUSH1",
		"value": "0x40"
	  },
	  "5213": {
		"op": "DUP1"
	  },
	  "5214": {
		"op": "MLOAD"
	  },
	  "5215": {
		"op": "DUP1"
	  },
	  "5216": {
		"op": "DUP3"
	  },
	  "5217": {
		"op": "ADD"
	  },
	  "5218": {
		"op": "SWAP1"
	  },
	  "5219": {
		"op": "SWAP2"
	  },
	  "5220": {
		"op": "MSTORE"
	  },
	  "5221": {
		"op": "PUSH1",
		"value": "0x60"
	  },
	  "5223": {
		"op": "DUP2"
	  },
	  "5224": {
		"op": "MSTORE"
	  },
	  "5225": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "5227": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "5229": {
		"op": "DUP3"
	  },
	  "5230": {
		"op": "ADD"
	  },
	  "5231": {
		"op": "MSTORE"
	  },
	  "5232": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5283,
		  5286
		],
		"op": "DUP4",
		"path": "8"
	  },
	  "5233": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5283,
		  5295
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x20"
	  },
	  "5235": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5283,
		  5295
		],
		"op": "ADD",
		"path": "8"
	  },
	  "5236": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5283,
		  5295
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "5237": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5276,
		  5279
		],
		"op": "DUP4",
		"path": "8"
	  },
	  "5238": {
		"branch": 122,
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5276,
		  5295
		],
		"op": "LT",
		"path": "8"
	  },
	  "5239": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5272,
		  5341
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x148F"
	  },
	  "5242": {
		"branch": 122,
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5272,
		  5341
		],
		"op": "JUMPI",
		"path": "8"
	  },
	  "5243": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5305,
		  5334
		],
		"op": "PUSH2",
		"path": "8",
		"statement": 81,
		"value": "0x148F"
	  },
	  "5246": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5312,
		  5315
		],
		"op": "DUP5",
		"path": "8"
	  },
	  "5247": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5317,
		  5320
		],
		"op": "DUP6",
		"path": "8"
	  },
	  "5248": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5317,
		  5329
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x20"
	  },
	  "5250": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5317,
		  5329
		],
		"op": "ADD",
		"path": "8"
	  },
	  "5251": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5317,
		  5329
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "5252": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5332,
		  5333
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x2"
	  },
	  "5254": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5317,
		  5333
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x13D0"
	  },
	  "5257": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5317,
		  5333
		],
		"op": "SWAP2",
		"path": "8"
	  },
	  "5258": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5317,
		  5333
		],
		"op": "SWAP1",
		"path": "8"
	  },
	  "5259": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5317,
		  5333
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x1746"
	  },
	  "5262": {
		"fn": "BufferChainlink.writeUint8",
		"jump": "i",
		"offset": [
		  5317,
		  5333
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "5263": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5305,
		  5334
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5264": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5427,
		  5430
		],
		"op": "DUP4",
		"path": "8"
	  },
	  "5265": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5421,
		  5431
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "5266": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5498,
		  5504
		],
		"op": "DUP1",
		"path": "8"
	  },
	  "5267": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5492,
		  5505
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "5268": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5610,
		  5612
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x20"
	  },
	  "5270": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5604,
		  5607
		],
		"op": "DUP6",
		"path": "8"
	  },
	  "5271": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5596,
		  5602
		],
		"op": "DUP4",
		"path": "8"
	  },
	  "5272": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5592,
		  5608
		],
		"op": "ADD",
		"path": "8"
	  },
	  "5273": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5588,
		  5613
		],
		"op": "ADD",
		"path": "8"
	  },
	  "5274": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5634,
		  5638
		],
		"op": "DUP5",
		"path": "8"
	  },
	  "5275": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5628,
		  5632
		],
		"op": "DUP2",
		"path": "8"
	  },
	  "5276": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5620,
		  5639
		],
		"op": "MSTORE8",
		"path": "8"
	  },
	  "5277": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5620,
		  5639
		],
		"op": "POP",
		"path": "8"
	  },
	  "5278": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5705,
		  5711
		],
		"op": "DUP1",
		"path": "8"
	  },
	  "5279": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5700,
		  5703
		],
		"op": "DUP6",
		"path": "8"
	  },
	  "5280": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5697,
		  5712
		],
		"op": "SUB",
		"path": "8"
	  },
	  "5281": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5694,
		  5761
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x14AB"
	  },
	  "5284": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5694,
		  5761
		],
		"op": "JUMPI",
		"path": "8"
	  },
	  "5285": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5750,
		  5751
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x1"
	  },
	  "5287": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5742,
		  5748
		],
		"op": "DUP2",
		"path": "8"
	  },
	  "5288": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5738,
		  5752
		],
		"op": "ADD",
		"path": "8"
	  },
	  "5289": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5730,
		  5736
		],
		"op": "DUP3",
		"path": "8"
	  },
	  "5290": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5723,
		  5753
		],
		"op": "MSTORE",
		"path": "8"
	  },
	  "5291": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5694,
		  5761
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5292": {
		"op": "POP"
	  },
	  "5293": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5779,
		  5782
		],
		"op": "SWAP4",
		"path": "8",
		"statement": 82
	  },
	  "5294": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5779,
		  5782
		],
		"op": "SWAP5",
		"path": "8"
	  },
	  "5295": {
		"fn": "BufferChainlink.writeUint8",
		"offset": [
		  5148,
		  5787
		],
		"op": "SWAP4",
		"path": "8"
	  },
	  "5296": {
		"op": "POP"
	  },
	  "5297": {
		"op": "POP"
	  },
	  "5298": {
		"op": "POP"
	  },
	  "5299": {
		"op": "POP"
	  },
	  "5300": {
		"fn": "BufferChainlink.writeUint8",
		"jump": "o",
		"offset": [
		  5148,
		  5787
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "5301": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  8974,
		  9649
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5302": {
		"op": "PUSH1",
		"value": "0x40"
	  },
	  "5304": {
		"op": "DUP1"
	  },
	  "5305": {
		"op": "MLOAD"
	  },
	  "5306": {
		"op": "DUP1"
	  },
	  "5307": {
		"op": "DUP3"
	  },
	  "5308": {
		"op": "ADD"
	  },
	  "5309": {
		"op": "SWAP1"
	  },
	  "5310": {
		"op": "SWAP2"
	  },
	  "5311": {
		"op": "MSTORE"
	  },
	  "5312": {
		"op": "PUSH1",
		"value": "0x60"
	  },
	  "5314": {
		"op": "DUP2"
	  },
	  "5315": {
		"op": "MSTORE"
	  },
	  "5316": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "5318": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "5320": {
		"op": "DUP3"
	  },
	  "5321": {
		"op": "ADD"
	  },
	  "5322": {
		"op": "MSTORE"
	  },
	  "5323": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9130,
		  9142
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x20"
	  },
	  "5325": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9130,
		  9142
		],
		"op": "DUP6",
		"path": "8"
	  },
	  "5326": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9130,
		  9142
		],
		"op": "ADD",
		"path": "8"
	  },
	  "5327": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9130,
		  9142
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "5328": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9118,
		  9127
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x14D9"
	  },
	  "5331": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9124,
		  9127
		],
		"op": "DUP6",
		"path": "8"
	  },
	  "5332": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9118,
		  9121
		],
		"op": "DUP5",
		"path": "8"
	  },
	  "5333": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9118,
		  9127
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x175D"
	  },
	  "5336": {
		"fn": "BufferChainlink.writeInt",
		"jump": "i",
		"offset": [
		  9118,
		  9127
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "5337": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9118,
		  9127
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5338": {
		"branch": 123,
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9118,
		  9142
		],
		"op": "GT",
		"path": "8"
	  },
	  "5339": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9114,
		  9187
		],
		"op": "ISZERO",
		"path": "8"
	  },
	  "5340": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9114,
		  9187
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x14ED"
	  },
	  "5343": {
		"branch": 123,
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9114,
		  9187
		],
		"op": "JUMPI",
		"path": "8"
	  },
	  "5344": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9152,
		  9180
		],
		"op": "PUSH2",
		"path": "8",
		"statement": 83,
		"value": "0x14ED"
	  },
	  "5347": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9159,
		  9162
		],
		"op": "DUP6",
		"path": "8"
	  },
	  "5348": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9165,
		  9174
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x13C5"
	  },
	  "5351": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9171,
		  9174
		],
		"op": "DUP7",
		"path": "8"
	  },
	  "5352": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9165,
		  9168
		],
		"op": "DUP6",
		"path": "8"
	  },
	  "5353": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9165,
		  9174
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x175D"
	  },
	  "5356": {
		"fn": "BufferChainlink.writeInt",
		"jump": "i",
		"offset": [
		  9165,
		  9174
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "5357": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9152,
		  9180
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5358": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9193,
		  9205
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x0"
	  },
	  "5360": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9221,
		  9222
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x1"
	  },
	  "5362": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9209,
		  9217
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x14FD"
	  },
	  "5365": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9214,
		  9217
		],
		"op": "DUP5",
		"path": "8"
	  },
	  "5366": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9209,
		  9212
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x100"
	  },
	  "5369": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9209,
		  9217
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x196D"
	  },
	  "5372": {
		"fn": "BufferChainlink.writeInt",
		"jump": "i",
		"offset": [
		  9209,
		  9217
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "5373": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9209,
		  9217
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5374": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9208,
		  9222
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x1507"
	  },
	  "5377": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9208,
		  9222
		],
		"op": "SWAP2",
		"path": "8"
	  },
	  "5378": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9208,
		  9222
		],
		"op": "SWAP1",
		"path": "8"
	  },
	  "5379": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9208,
		  9222
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x182D"
	  },
	  "5382": {
		"fn": "BufferChainlink.writeInt",
		"jump": "i",
		"offset": [
		  9208,
		  9222
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "5383": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9208,
		  9222
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5384": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9193,
		  9222
		],
		"op": "SWAP1",
		"path": "8"
	  },
	  "5385": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9193,
		  9222
		],
		"op": "POP",
		"path": "8"
	  },
	  "5386": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9308,
		  9311
		],
		"op": "DUP6",
		"path": "8"
	  },
	  "5387": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9302,
		  9312
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "5388": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9423,
		  9426
		],
		"op": "DUP4",
		"path": "8"
	  },
	  "5389": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9417,
		  9420
		],
		"op": "DUP7",
		"path": "8"
	  },
	  "5390": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9409,
		  9415
		],
		"op": "DUP3",
		"path": "8"
	  },
	  "5391": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9405,
		  9421
		],
		"op": "ADD",
		"path": "8"
	  },
	  "5392": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9401,
		  9427
		],
		"op": "ADD",
		"path": "8"
	  },
	  "5393": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9479,
		  9483
		],
		"op": "DUP6",
		"path": "8"
	  },
	  "5394": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9471,
		  9475
		],
		"op": "DUP4",
		"path": "8"
	  },
	  "5395": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9467,
		  9476
		],
		"op": "NOT",
		"path": "8"
	  },
	  "5396": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9460,
		  9464
		],
		"op": "DUP3",
		"path": "8"
	  },
	  "5397": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9454,
		  9465
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "5398": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9450,
		  9477
		],
		"op": "AND",
		"path": "8"
	  },
	  "5399": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9447,
		  9484
		],
		"op": "OR",
		"path": "8"
	  },
	  "5400": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9441,
		  9445
		],
		"op": "DUP2",
		"path": "8"
	  },
	  "5401": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9434,
		  9485
		],
		"op": "MSTORE",
		"path": "8"
	  },
	  "5402": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9434,
		  9485
		],
		"op": "POP",
		"path": "8"
	  },
	  "5403": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9567,
		  9573
		],
		"op": "DUP1",
		"path": "8"
	  },
	  "5404": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9561,
		  9574
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "5405": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9555,
		  9558
		],
		"op": "DUP5",
		"path": "8"
	  },
	  "5406": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9550,
		  9553
		],
		"op": "DUP8",
		"path": "8"
	  },
	  "5407": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9546,
		  9559
		],
		"op": "ADD",
		"path": "8"
	  },
	  "5408": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9543,
		  9575
		],
		"op": "GT",
		"path": "8"
	  },
	  "5409": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9540,
		  9623
		],
		"op": "ISZERO",
		"path": "8"
	  },
	  "5410": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9540,
		  9623
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x152B"
	  },
	  "5413": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9540,
		  9623
		],
		"op": "JUMPI",
		"path": "8"
	  },
	  "5414": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9610,
		  9613
		],
		"op": "DUP4",
		"path": "8"
	  },
	  "5415": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9605,
		  9608
		],
		"op": "DUP7",
		"path": "8"
	  },
	  "5416": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9601,
		  9614
		],
		"op": "ADD",
		"path": "8"
	  },
	  "5417": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9593,
		  9599
		],
		"op": "DUP2",
		"path": "8"
	  },
	  "5418": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9586,
		  9615
		],
		"op": "MSTORE",
		"path": "8"
	  },
	  "5419": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9540,
		  9623
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5420": {
		"op": "POP"
	  },
	  "5421": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9641,
		  9644
		],
		"op": "SWAP5",
		"path": "8",
		"statement": 84
	  },
	  "5422": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  9641,
		  9644
		],
		"op": "SWAP6",
		"path": "8"
	  },
	  "5423": {
		"fn": "BufferChainlink.writeInt",
		"offset": [
		  8974,
		  9649
		],
		"op": "SWAP5",
		"path": "8"
	  },
	  "5424": {
		"op": "POP"
	  },
	  "5425": {
		"op": "POP"
	  },
	  "5426": {
		"op": "POP"
	  },
	  "5427": {
		"op": "POP"
	  },
	  "5428": {
		"op": "POP"
	  },
	  "5429": {
		"fn": "BufferChainlink.writeInt",
		"jump": "o",
		"offset": [
		  8974,
		  9649
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "5430": {
		"fn": "BufferChainlink.max",
		"offset": [
		  1961,
		  2085
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5431": {
		"fn": "BufferChainlink.max",
		"offset": [
		  2018,
		  2025
		],
		"op": "PUSH1",
		"path": "8",
		"value": "0x0"
	  },
	  "5433": {
		"fn": "BufferChainlink.max",
		"offset": [
		  2041,
		  2042
		],
		"op": "DUP2",
		"path": "8"
	  },
	  "5434": {
		"fn": "BufferChainlink.max",
		"offset": [
		  2037,
		  2038
		],
		"op": "DUP4",
		"path": "8"
	  },
	  "5435": {
		"branch": 124,
		"fn": "BufferChainlink.max",
		"offset": [
		  2037,
		  2042
		],
		"op": "GT",
		"path": "8"
	  },
	  "5436": {
		"fn": "BufferChainlink.max",
		"offset": [
		  2033,
		  2067
		],
		"op": "ISZERO",
		"path": "8"
	  },
	  "5437": {
		"fn": "BufferChainlink.max",
		"offset": [
		  2033,
		  2067
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0xAE2"
	  },
	  "5440": {
		"branch": 124,
		"fn": "BufferChainlink.max",
		"offset": [
		  2033,
		  2067
		],
		"op": "JUMPI",
		"path": "8"
	  },
	  "5441": {
		"op": "POP"
	  },
	  "5442": {
		"fn": "BufferChainlink.max",
		"offset": [
		  2059,
		  2060
		],
		"op": "DUP2",
		"path": "8",
		"statement": 85
	  },
	  "5443": {
		"fn": "BufferChainlink.max",
		"offset": [
		  2052,
		  2060
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0xF32"
	  },
	  "5446": {
		"fn": "BufferChainlink.max",
		"offset": [
		  2052,
		  2060
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "5447": {
		"fn": "BufferChainlink.resize",
		"offset": [
		  1801,
		  1957
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5448": {
		"fn": "BufferChainlink.resize",
		"offset": [
		  1895,
		  1902
		],
		"op": "DUP2",
		"path": "8"
	  },
	  "5449": {
		"fn": "BufferChainlink.resize",
		"offset": [
		  1895,
		  1902
		],
		"op": "MLOAD",
		"path": "8"
	  },
	  "5450": {
		"fn": "BufferChainlink.resize",
		"offset": [
		  1908,
		  1927
		],
		"op": "PUSH2",
		"path": "8",
		"statement": 86,
		"value": "0x1553"
	  },
	  "5453": {
		"fn": "BufferChainlink.resize",
		"offset": [
		  1895,
		  1898
		],
		"op": "DUP4",
		"path": "8"
	  },
	  "5454": {
		"fn": "BufferChainlink.resize",
		"offset": [
		  1918,
		  1926
		],
		"op": "DUP4",
		"path": "8"
	  },
	  "5455": {
		"fn": "BufferChainlink.resize",
		"offset": [
		  1908,
		  1912
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x1026"
	  },
	  "5458": {
		"fn": "BufferChainlink.resize",
		"jump": "i",
		"offset": [
		  1908,
		  1927
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "5459": {
		"fn": "BufferChainlink.resize",
		"offset": [
		  1908,
		  1927
		],
		"op": "JUMPDEST",
		"path": "8"
	  },
	  "5460": {
		"fn": "BufferChainlink.resize",
		"offset": [
		  1908,
		  1927
		],
		"op": "POP",
		"path": "8"
	  },
	  "5461": {
		"fn": "BufferChainlink.resize",
		"offset": [
		  1933,
		  1952
		],
		"op": "PUSH2",
		"path": "8",
		"statement": 87,
		"value": "0x10B0"
	  },
	  "5464": {
		"fn": "BufferChainlink.resize",
		"offset": [
		  1940,
		  1943
		],
		"op": "DUP4",
		"path": "8"
	  },
	  "5465": {
		"fn": "BufferChainlink.resize",
		"offset": [
		  1945,
		  1951
		],
		"op": "DUP3",
		"path": "8"
	  },
	  "5466": {
		"fn": "BufferChainlink.resize",
		"offset": [
		  1933,
		  1939
		],
		"op": "PUSH2",
		"path": "8",
		"value": "0x11A0"
	  },
	  "5469": {
		"fn": "BufferChainlink.resize",
		"jump": "i",
		"offset": [
		  1933,
		  1952
		],
		"op": "JUMP",
		"path": "8"
	  },
	  "5470": {
		"op": "JUMPDEST"
	  },
	  "5471": {
		"op": "PUSH1",
		"value": "0x40"
	  },
	  "5473": {
		"op": "DUP1"
	  },
	  "5474": {
		"op": "MLOAD"
	  },
	  "5475": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "5477": {
		"op": "DUP2"
	  },
	  "5478": {
		"op": "ADD"
	  },
	  "5479": {
		"op": "DUP3"
	  },
	  "5480": {
		"op": "MSTORE"
	  },
	  "5481": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "5483": {
		"op": "DUP1"
	  },
	  "5484": {
		"op": "DUP3"
	  },
	  "5485": {
		"op": "MSTORE"
	  },
	  "5486": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "5488": {
		"op": "DUP1"
	  },
	  "5489": {
		"op": "DUP4"
	  },
	  "5490": {
		"op": "ADD"
	  },
	  "5491": {
		"op": "DUP3"
	  },
	  "5492": {
		"op": "SWAP1"
	  },
	  "5493": {
		"op": "MSTORE"
	  },
	  "5494": {
		"op": "DUP3"
	  },
	  "5495": {
		"op": "DUP5"
	  },
	  "5496": {
		"op": "ADD"
	  },
	  "5497": {
		"op": "DUP3"
	  },
	  "5498": {
		"op": "SWAP1"
	  },
	  "5499": {
		"op": "MSTORE"
	  },
	  "5500": {
		"op": "PUSH1",
		"value": "0x60"
	  },
	  "5502": {
		"op": "DUP1"
	  },
	  "5503": {
		"op": "DUP5"
	  },
	  "5504": {
		"op": "ADD"
	  },
	  "5505": {
		"op": "DUP4"
	  },
	  "5506": {
		"op": "SWAP1"
	  },
	  "5507": {
		"op": "MSTORE"
	  },
	  "5508": {
		"op": "DUP5"
	  },
	  "5509": {
		"op": "MLOAD"
	  },
	  "5510": {
		"op": "DUP1"
	  },
	  "5511": {
		"op": "DUP7"
	  },
	  "5512": {
		"op": "ADD"
	  },
	  "5513": {
		"op": "SWAP1"
	  },
	  "5514": {
		"op": "SWAP6"
	  },
	  "5515": {
		"op": "MSTORE"
	  },
	  "5516": {
		"op": "DUP5"
	  },
	  "5517": {
		"op": "MSTORE"
	  },
	  "5518": {
		"op": "DUP4"
	  },
	  "5519": {
		"op": "ADD"
	  },
	  "5520": {
		"op": "MSTORE"
	  },
	  "5521": {
		"op": "SWAP1"
	  },
	  "5522": {
		"op": "PUSH1",
		"value": "0x80"
	  },
	  "5524": {
		"op": "DUP3"
	  },
	  "5525": {
		"op": "ADD"
	  },
	  "5526": {
		"op": "MSTORE"
	  },
	  "5527": {
		"op": "SWAP1"
	  },
	  "5528": {
		"jump": "o",
		"op": "JUMP"
	  },
	  "5529": {
		"op": "JUMPDEST"
	  },
	  "5530": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "5532": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "5534": {
		"op": "DUP3"
	  },
	  "5535": {
		"op": "DUP5"
	  },
	  "5536": {
		"op": "SUB"
	  },
	  "5537": {
		"op": "SLT"
	  },
	  "5538": {
		"op": "ISZERO"
	  },
	  "5539": {
		"op": "PUSH2",
		"value": "0x15AB"
	  },
	  "5542": {
		"op": "JUMPI"
	  },
	  "5543": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "5545": {
		"op": "DUP1"
	  },
	  "5546": {
		"op": "REVERT"
	  },
	  "5547": {
		"op": "JUMPDEST"
	  },
	  "5548": {
		"op": "POP"
	  },
	  "5549": {
		"op": "CALLDATALOAD"
	  },
	  "5550": {
		"op": "SWAP2"
	  },
	  "5551": {
		"op": "SWAP1"
	  },
	  "5552": {
		"op": "POP"
	  },
	  "5553": {
		"jump": "o",
		"op": "JUMP"
	  },
	  "5554": {
		"op": "JUMPDEST"
	  },
	  "5555": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "5557": {
		"op": "DUP1"
	  },
	  "5558": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "5560": {
		"op": "PUSH1",
		"value": "0x60"
	  },
	  "5562": {
		"op": "DUP5"
	  },
	  "5563": {
		"op": "DUP7"
	  },
	  "5564": {
		"op": "SUB"
	  },
	  "5565": {
		"op": "SLT"
	  },
	  "5566": {
		"op": "ISZERO"
	  },
	  "5567": {
		"op": "PUSH2",
		"value": "0x15C7"
	  },
	  "5570": {
		"op": "JUMPI"
	  },
	  "5571": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "5573": {
		"op": "DUP1"
	  },
	  "5574": {
		"op": "REVERT"
	  },
	  "5575": {
		"op": "JUMPDEST"
	  },
	  "5576": {
		"op": "POP"
	  },
	  "5577": {
		"op": "POP"
	  },
	  "5578": {
		"op": "DUP2"
	  },
	  "5579": {
		"op": "CALLDATALOAD"
	  },
	  "5580": {
		"op": "SWAP4"
	  },
	  "5581": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "5583": {
		"op": "DUP4"
	  },
	  "5584": {
		"op": "ADD"
	  },
	  "5585": {
		"op": "CALLDATALOAD"
	  },
	  "5586": {
		"op": "SWAP4"
	  },
	  "5587": {
		"op": "POP"
	  },
	  "5588": {
		"op": "PUSH1",
		"value": "0x40"
	  },
	  "5590": {
		"op": "SWAP1"
	  },
	  "5591": {
		"op": "SWAP3"
	  },
	  "5592": {
		"op": "ADD"
	  },
	  "5593": {
		"op": "CALLDATALOAD"
	  },
	  "5594": {
		"op": "SWAP2"
	  },
	  "5595": {
		"op": "SWAP1"
	  },
	  "5596": {
		"op": "POP"
	  },
	  "5597": {
		"jump": "o",
		"op": "JUMP"
	  },
	  "5598": {
		"op": "JUMPDEST"
	  },
	  "5599": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "5601": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "5603": {
		"op": "DUP3"
	  },
	  "5604": {
		"op": "DUP5"
	  },
	  "5605": {
		"op": "SUB"
	  },
	  "5606": {
		"op": "SLT"
	  },
	  "5607": {
		"op": "ISZERO"
	  },
	  "5608": {
		"op": "PUSH2",
		"value": "0x15F0"
	  },
	  "5611": {
		"op": "JUMPI"
	  },
	  "5612": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "5614": {
		"op": "DUP1"
	  },
	  "5615": {
		"op": "REVERT"
	  },
	  "5616": {
		"op": "JUMPDEST"
	  },
	  "5617": {
		"op": "DUP2"
	  },
	  "5618": {
		"op": "CALLDATALOAD"
	  },
	  "5619": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "5621": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "5623": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "5625": {
		"op": "SHL"
	  },
	  "5626": {
		"op": "SUB"
	  },
	  "5627": {
		"op": "DUP2"
	  },
	  "5628": {
		"op": "AND"
	  },
	  "5629": {
		"op": "DUP2"
	  },
	  "5630": {
		"op": "EQ"
	  },
	  "5631": {
		"op": "PUSH2",
		"value": "0x1607"
	  },
	  "5634": {
		"op": "JUMPI"
	  },
	  "5635": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "5637": {
		"op": "DUP1"
	  },
	  "5638": {
		"op": "REVERT"
	  },
	  "5639": {
		"op": "JUMPDEST"
	  },
	  "5640": {
		"op": "SWAP4"
	  },
	  "5641": {
		"op": "SWAP3"
	  },
	  "5642": {
		"op": "POP"
	  },
	  "5643": {
		"op": "POP"
	  },
	  "5644": {
		"op": "POP"
	  },
	  "5645": {
		"jump": "o",
		"op": "JUMP"
	  },
	  "5646": {
		"op": "JUMPDEST"
	  },
	  "5647": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "5649": {
		"op": "DUP1"
	  },
	  "5650": {
		"op": "DUP3"
	  },
	  "5651": {
		"op": "MSTORE"
	  },
	  "5652": {
		"op": "DUP3"
	  },
	  "5653": {
		"op": "MLOAD"
	  },
	  "5654": {
		"op": "DUP3"
	  },
	  "5655": {
		"op": "DUP3"
	  },
	  "5656": {
		"op": "ADD"
	  },
	  "5657": {
		"op": "DUP2"
	  },
	  "5658": {
		"op": "SWAP1"
	  },
	  "5659": {
		"op": "MSTORE"
	  },
	  "5660": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "5662": {
		"op": "SWAP2"
	  },
	  "5663": {
		"op": "SWAP1"
	  },
	  "5664": {
		"op": "PUSH1",
		"value": "0x40"
	  },
	  "5666": {
		"op": "SWAP1"
	  },
	  "5667": {
		"op": "DUP2"
	  },
	  "5668": {
		"op": "DUP6"
	  },
	  "5669": {
		"op": "ADD"
	  },
	  "5670": {
		"op": "SWAP1"
	  },
	  "5671": {
		"op": "DUP7"
	  },
	  "5672": {
		"op": "DUP5"
	  },
	  "5673": {
		"op": "ADD"
	  },
	  "5674": {
		"op": "DUP6"
	  },
	  "5675": {
		"op": "JUMPDEST"
	  },
	  "5676": {
		"op": "DUP3"
	  },
	  "5677": {
		"op": "DUP2"
	  },
	  "5678": {
		"op": "LT"
	  },
	  "5679": {
		"op": "ISZERO"
	  },
	  "5680": {
		"op": "PUSH2",
		"value": "0x16B0"
	  },
	  "5683": {
		"op": "JUMPI"
	  },
	  "5684": {
		"op": "DUP2"
	  },
	  "5685": {
		"op": "MLOAD"
	  },
	  "5686": {
		"op": "DUP1"
	  },
	  "5687": {
		"op": "MLOAD"
	  },
	  "5688": {
		"op": "DUP6"
	  },
	  "5689": {
		"op": "MSTORE"
	  },
	  "5690": {
		"op": "DUP7"
	  },
	  "5691": {
		"op": "DUP2"
	  },
	  "5692": {
		"op": "ADD"
	  },
	  "5693": {
		"op": "MLOAD"
	  },
	  "5694": {
		"op": "DUP8"
	  },
	  "5695": {
		"op": "DUP7"
	  },
	  "5696": {
		"op": "ADD"
	  },
	  "5697": {
		"op": "MSTORE"
	  },
	  "5698": {
		"op": "DUP6"
	  },
	  "5699": {
		"op": "DUP2"
	  },
	  "5700": {
		"op": "ADD"
	  },
	  "5701": {
		"op": "MLOAD"
	  },
	  "5702": {
		"op": "DUP7"
	  },
	  "5703": {
		"op": "DUP7"
	  },
	  "5704": {
		"op": "ADD"
	  },
	  "5705": {
		"op": "MSTORE"
	  },
	  "5706": {
		"op": "PUSH1",
		"value": "0x60"
	  },
	  "5708": {
		"op": "DUP1"
	  },
	  "5709": {
		"op": "DUP3"
	  },
	  "5710": {
		"op": "ADD"
	  },
	  "5711": {
		"op": "MLOAD"
	  },
	  "5712": {
		"op": "SWAP1"
	  },
	  "5713": {
		"op": "DUP7"
	  },
	  "5714": {
		"op": "ADD"
	  },
	  "5715": {
		"op": "MSTORE"
	  },
	  "5716": {
		"op": "PUSH1",
		"value": "0x80"
	  },
	  "5718": {
		"op": "DUP1"
	  },
	  "5719": {
		"op": "DUP3"
	  },
	  "5720": {
		"op": "ADD"
	  },
	  "5721": {
		"op": "MLOAD"
	  },
	  "5722": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "5724": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "5726": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "5728": {
		"op": "SHL"
	  },
	  "5729": {
		"op": "SUB"
	  },
	  "5730": {
		"op": "SWAP1"
	  },
	  "5731": {
		"op": "DUP2"
	  },
	  "5732": {
		"op": "AND"
	  },
	  "5733": {
		"op": "SWAP2"
	  },
	  "5734": {
		"op": "DUP8"
	  },
	  "5735": {
		"op": "ADD"
	  },
	  "5736": {
		"op": "SWAP2"
	  },
	  "5737": {
		"op": "SWAP1"
	  },
	  "5738": {
		"op": "SWAP2"
	  },
	  "5739": {
		"op": "MSTORE"
	  },
	  "5740": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "5742": {
		"op": "DUP1"
	  },
	  "5743": {
		"op": "DUP4"
	  },
	  "5744": {
		"op": "ADD"
	  },
	  "5745": {
		"op": "MLOAD"
	  },
	  "5746": {
		"op": "DUP3"
	  },
	  "5747": {
		"op": "AND"
	  },
	  "5748": {
		"op": "SWAP1"
	  },
	  "5749": {
		"op": "DUP8"
	  },
	  "5750": {
		"op": "ADD"
	  },
	  "5751": {
		"op": "MSTORE"
	  },
	  "5752": {
		"op": "PUSH1",
		"value": "0xC0"
	  },
	  "5754": {
		"op": "DUP1"
	  },
	  "5755": {
		"op": "DUP4"
	  },
	  "5756": {
		"op": "ADD"
	  },
	  "5757": {
		"op": "MLOAD"
	  },
	  "5758": {
		"op": "SWAP1"
	  },
	  "5759": {
		"op": "SWAP2"
	  },
	  "5760": {
		"op": "AND"
	  },
	  "5761": {
		"op": "SWAP1"
	  },
	  "5762": {
		"op": "DUP7"
	  },
	  "5763": {
		"op": "ADD"
	  },
	  "5764": {
		"op": "MSTORE"
	  },
	  "5765": {
		"op": "PUSH1",
		"value": "0xE0"
	  },
	  "5767": {
		"op": "DUP1"
	  },
	  "5768": {
		"op": "DUP3"
	  },
	  "5769": {
		"op": "ADD"
	  },
	  "5770": {
		"op": "MLOAD"
	  },
	  "5771": {
		"op": "ISZERO"
	  },
	  "5772": {
		"op": "ISZERO"
	  },
	  "5773": {
		"op": "SWAP1"
	  },
	  "5774": {
		"op": "DUP7"
	  },
	  "5775": {
		"op": "ADD"
	  },
	  "5776": {
		"op": "MSTORE"
	  },
	  "5777": {
		"op": "PUSH2",
		"value": "0x100"
	  },
	  "5780": {
		"op": "SWAP1"
	  },
	  "5781": {
		"op": "DUP2"
	  },
	  "5782": {
		"op": "ADD"
	  },
	  "5783": {
		"op": "MLOAD"
	  },
	  "5784": {
		"op": "ISZERO"
	  },
	  "5785": {
		"op": "ISZERO"
	  },
	  "5786": {
		"op": "SWAP1"
	  },
	  "5787": {
		"op": "DUP6"
	  },
	  "5788": {
		"op": "ADD"
	  },
	  "5789": {
		"op": "MSTORE"
	  },
	  "5790": {
		"op": "PUSH2",
		"value": "0x120"
	  },
	  "5793": {
		"op": "SWAP1"
	  },
	  "5794": {
		"op": "SWAP4"
	  },
	  "5795": {
		"op": "ADD"
	  },
	  "5796": {
		"op": "SWAP3"
	  },
	  "5797": {
		"op": "SWAP1"
	  },
	  "5798": {
		"op": "DUP6"
	  },
	  "5799": {
		"op": "ADD"
	  },
	  "5800": {
		"op": "SWAP1"
	  },
	  "5801": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "5803": {
		"op": "ADD"
	  },
	  "5804": {
		"op": "PUSH2",
		"value": "0x162B"
	  },
	  "5807": {
		"op": "JUMP"
	  },
	  "5808": {
		"op": "JUMPDEST"
	  },
	  "5809": {
		"op": "POP"
	  },
	  "5810": {
		"op": "SWAP2"
	  },
	  "5811": {
		"op": "SWAP8"
	  },
	  "5812": {
		"op": "SWAP7"
	  },
	  "5813": {
		"op": "POP"
	  },
	  "5814": {
		"op": "POP"
	  },
	  "5815": {
		"op": "POP"
	  },
	  "5816": {
		"op": "POP"
	  },
	  "5817": {
		"op": "POP"
	  },
	  "5818": {
		"op": "POP"
	  },
	  "5819": {
		"op": "POP"
	  },
	  "5820": {
		"jump": "o",
		"op": "JUMP"
	  },
	  "5821": {
		"op": "JUMPDEST"
	  },
	  "5822": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "5824": {
		"op": "DUP1"
	  },
	  "5825": {
		"op": "DUP3"
	  },
	  "5826": {
		"op": "MSTORE"
	  },
	  "5827": {
		"op": "PUSH1",
		"value": "0x14"
	  },
	  "5829": {
		"op": "SWAP1"
	  },
	  "5830": {
		"op": "DUP3"
	  },
	  "5831": {
		"op": "ADD"
	  },
	  "5832": {
		"op": "MSTORE"
	  },
	  "5833": {
		"op": "PUSH20",
		"value": "0x10995D081A5CC81B9BDD081C1D589B1A5CDA1959"
	  },
	  "5854": {
		"op": "PUSH1",
		"value": "0x62"
	  },
	  "5856": {
		"op": "SHL"
	  },
	  "5857": {
		"op": "PUSH1",
		"value": "0x40"
	  },
	  "5859": {
		"op": "DUP3"
	  },
	  "5860": {
		"op": "ADD"
	  },
	  "5861": {
		"op": "MSTORE"
	  },
	  "5862": {
		"op": "PUSH1",
		"value": "0x60"
	  },
	  "5864": {
		"op": "ADD"
	  },
	  "5865": {
		"op": "SWAP1"
	  },
	  "5866": {
		"jump": "o",
		"op": "JUMP"
	  },
	  "5867": {
		"op": "JUMPDEST"
	  },
	  "5868": {
		"op": "PUSH4",
		"value": "0x4E487B71"
	  },
	  "5873": {
		"op": "PUSH1",
		"value": "0xE0"
	  },
	  "5875": {
		"op": "SHL"
	  },
	  "5876": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "5878": {
		"op": "MSTORE"
	  },
	  "5879": {
		"op": "PUSH1",
		"value": "0x41"
	  },
	  "5881": {
		"op": "PUSH1",
		"value": "0x4"
	  },
	  "5883": {
		"op": "MSTORE"
	  },
	  "5884": {
		"op": "PUSH1",
		"value": "0x24"
	  },
	  "5886": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "5888": {
		"op": "REVERT"
	  },
	  "5889": {
		"op": "JUMPDEST"
	  },
	  "5890": {
		"op": "PUSH4",
		"value": "0x4E487B71"
	  },
	  "5895": {
		"op": "PUSH1",
		"value": "0xE0"
	  },
	  "5897": {
		"op": "SHL"
	  },
	  "5898": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "5900": {
		"op": "MSTORE"
	  },
	  "5901": {
		"op": "PUSH1",
		"value": "0x32"
	  },
	  "5903": {
		"op": "PUSH1",
		"value": "0x4"
	  },
	  "5905": {
		"op": "MSTORE"
	  },
	  "5906": {
		"op": "PUSH1",
		"value": "0x24"
	  },
	  "5908": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "5910": {
		"op": "REVERT"
	  },
	  "5911": {
		"op": "JUMPDEST"
	  },
	  "5912": {
		"op": "PUSH4",
		"value": "0x4E487B71"
	  },
	  "5917": {
		"op": "PUSH1",
		"value": "0xE0"
	  },
	  "5919": {
		"op": "SHL"
	  },
	  "5920": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "5922": {
		"op": "MSTORE"
	  },
	  "5923": {
		"op": "PUSH1",
		"value": "0x11"
	  },
	  "5925": {
		"op": "PUSH1",
		"value": "0x4"
	  },
	  "5927": {
		"op": "MSTORE"
	  },
	  "5928": {
		"op": "PUSH1",
		"value": "0x24"
	  },
	  "5930": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "5932": {
		"op": "REVERT"
	  },
	  "5933": {
		"op": "JUMPDEST"
	  },
	  "5934": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "5936": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "5938": {
		"op": "DUP3"
	  },
	  "5939": {
		"op": "ADD"
	  },
	  "5940": {
		"op": "PUSH2",
		"value": "0x173F"
	  },
	  "5943": {
		"op": "JUMPI"
	  },
	  "5944": {
		"op": "PUSH2",
		"value": "0x173F"
	  },
	  "5947": {
		"op": "PUSH2",
		"value": "0x1717"
	  },
	  "5950": {
		"jump": "i",
		"op": "JUMP"
	  },
	  "5951": {
		"op": "JUMPDEST"
	  },
	  "5952": {
		"op": "POP"
	  },
	  "5953": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "5955": {
		"op": "ADD"
	  },
	  "5956": {
		"op": "SWAP1"
	  },
	  "5957": {
		"jump": "o",
		"op": "JUMP"
	  },
	  "5958": {
		"op": "JUMPDEST"
	  },
	  "5959": {
		"op": "DUP1"
	  },
	  "5960": {
		"op": "DUP3"
	  },
	  "5961": {
		"op": "MUL"
	  },
	  "5962": {
		"op": "DUP2"
	  },
	  "5963": {
		"op": "ISZERO"
	  },
	  "5964": {
		"op": "DUP3"
	  },
	  "5965": {
		"op": "DUP3"
	  },
	  "5966": {
		"op": "DIV"
	  },
	  "5967": {
		"op": "DUP5"
	  },
	  "5968": {
		"op": "EQ"
	  },
	  "5969": {
		"op": "OR"
	  },
	  "5970": {
		"op": "PUSH2",
		"value": "0xF32"
	  },
	  "5973": {
		"op": "JUMPI"
	  },
	  "5974": {
		"op": "PUSH2",
		"value": "0xF32"
	  },
	  "5977": {
		"op": "PUSH2",
		"value": "0x1717"
	  },
	  "5980": {
		"jump": "i",
		"op": "JUMP"
	  },
	  "5981": {
		"op": "JUMPDEST"
	  },
	  "5982": {
		"op": "DUP1"
	  },
	  "5983": {
		"op": "DUP3"
	  },
	  "5984": {
		"op": "ADD"
	  },
	  "5985": {
		"op": "DUP1"
	  },
	  "5986": {
		"op": "DUP3"
	  },
	  "5987": {
		"op": "GT"
	  },
	  "5988": {
		"op": "ISZERO"
	  },
	  "5989": {
		"op": "PUSH2",
		"value": "0xF32"
	  },
	  "5992": {
		"op": "JUMPI"
	  },
	  "5993": {
		"op": "PUSH2",
		"value": "0xF32"
	  },
	  "5996": {
		"op": "PUSH2",
		"value": "0x1717"
	  },
	  "5999": {
		"jump": "i",
		"op": "JUMP"
	  },
	  "6000": {
		"op": "JUMPDEST"
	  },
	  "6001": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "6003": {
		"op": "DUP2"
	  },
	  "6004": {
		"op": "MLOAD"
	  },
	  "6005": {
		"op": "DUP1"
	  },
	  "6006": {
		"op": "DUP5"
	  },
	  "6007": {
		"op": "MSTORE"
	  },
	  "6008": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "6010": {
		"op": "JUMPDEST"
	  },
	  "6011": {
		"op": "DUP2"
	  },
	  "6012": {
		"op": "DUP2"
	  },
	  "6013": {
		"op": "LT"
	  },
	  "6014": {
		"op": "ISZERO"
	  },
	  "6015": {
		"op": "PUSH2",
		"value": "0x1796"
	  },
	  "6018": {
		"op": "JUMPI"
	  },
	  "6019": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "6021": {
		"op": "DUP2"
	  },
	  "6022": {
		"op": "DUP6"
	  },
	  "6023": {
		"op": "ADD"
	  },
	  "6024": {
		"op": "DUP2"
	  },
	  "6025": {
		"op": "ADD"
	  },
	  "6026": {
		"op": "MLOAD"
	  },
	  "6027": {
		"op": "DUP7"
	  },
	  "6028": {
		"op": "DUP4"
	  },
	  "6029": {
		"op": "ADD"
	  },
	  "6030": {
		"op": "DUP3"
	  },
	  "6031": {
		"op": "ADD"
	  },
	  "6032": {
		"op": "MSTORE"
	  },
	  "6033": {
		"op": "ADD"
	  },
	  "6034": {
		"op": "PUSH2",
		"value": "0x177A"
	  },
	  "6037": {
		"op": "JUMP"
	  },
	  "6038": {
		"op": "JUMPDEST"
	  },
	  "6039": {
		"op": "POP"
	  },
	  "6040": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "6042": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "6044": {
		"op": "DUP3"
	  },
	  "6045": {
		"op": "DUP7"
	  },
	  "6046": {
		"op": "ADD"
	  },
	  "6047": {
		"op": "ADD"
	  },
	  "6048": {
		"op": "MSTORE"
	  },
	  "6049": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "6051": {
		"op": "PUSH1",
		"value": "0x1F"
	  },
	  "6053": {
		"op": "NOT"
	  },
	  "6054": {
		"op": "PUSH1",
		"value": "0x1F"
	  },
	  "6056": {
		"op": "DUP4"
	  },
	  "6057": {
		"op": "ADD"
	  },
	  "6058": {
		"op": "AND"
	  },
	  "6059": {
		"op": "DUP6"
	  },
	  "6060": {
		"op": "ADD"
	  },
	  "6061": {
		"op": "ADD"
	  },
	  "6062": {
		"op": "SWAP2"
	  },
	  "6063": {
		"op": "POP"
	  },
	  "6064": {
		"op": "POP"
	  },
	  "6065": {
		"op": "SWAP3"
	  },
	  "6066": {
		"op": "SWAP2"
	  },
	  "6067": {
		"op": "POP"
	  },
	  "6068": {
		"op": "POP"
	  },
	  "6069": {
		"jump": "o",
		"op": "JUMP"
	  },
	  "6070": {
		"op": "JUMPDEST"
	  },
	  "6071": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "6073": {
		"op": "DUP1"
	  },
	  "6074": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "6076": {
		"op": "SHL"
	  },
	  "6077": {
		"op": "SUB"
	  },
	  "6078": {
		"op": "DUP9"
	  },
	  "6079": {
		"op": "AND"
	  },
	  "6080": {
		"op": "DUP2"
	  },
	  "6081": {
		"op": "MSTORE"
	  },
	  "6082": {
		"op": "DUP7"
	  },
	  "6083": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "6085": {
		"op": "DUP3"
	  },
	  "6086": {
		"op": "ADD"
	  },
	  "6087": {
		"op": "MSTORE"
	  },
	  "6088": {
		"op": "DUP6"
	  },
	  "6089": {
		"op": "PUSH1",
		"value": "0x40"
	  },
	  "6091": {
		"op": "DUP3"
	  },
	  "6092": {
		"op": "ADD"
	  },
	  "6093": {
		"op": "MSTORE"
	  },
	  "6094": {
		"op": "PUSH4",
		"value": "0xFFFFFFFF"
	  },
	  "6099": {
		"op": "PUSH1",
		"value": "0xE0"
	  },
	  "6101": {
		"op": "SHL"
	  },
	  "6102": {
		"op": "DUP6"
	  },
	  "6103": {
		"op": "AND"
	  },
	  "6104": {
		"op": "PUSH1",
		"value": "0x60"
	  },
	  "6106": {
		"op": "DUP3"
	  },
	  "6107": {
		"op": "ADD"
	  },
	  "6108": {
		"op": "MSTORE"
	  },
	  "6109": {
		"op": "DUP4"
	  },
	  "6110": {
		"op": "PUSH1",
		"value": "0x80"
	  },
	  "6112": {
		"op": "DUP3"
	  },
	  "6113": {
		"op": "ADD"
	  },
	  "6114": {
		"op": "MSTORE"
	  },
	  "6115": {
		"op": "DUP3"
	  },
	  "6116": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "6118": {
		"op": "DUP3"
	  },
	  "6119": {
		"op": "ADD"
	  },
	  "6120": {
		"op": "MSTORE"
	  },
	  "6121": {
		"op": "PUSH1",
		"value": "0xE0"
	  },
	  "6123": {
		"op": "PUSH1",
		"value": "0xC0"
	  },
	  "6125": {
		"op": "DUP3"
	  },
	  "6126": {
		"op": "ADD"
	  },
	  "6127": {
		"op": "MSTORE"
	  },
	  "6128": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "6130": {
		"op": "PUSH2",
		"value": "0x17FE"
	  },
	  "6133": {
		"op": "PUSH1",
		"value": "0xE0"
	  },
	  "6135": {
		"op": "DUP4"
	  },
	  "6136": {
		"op": "ADD"
	  },
	  "6137": {
		"op": "DUP5"
	  },
	  "6138": {
		"op": "PUSH2",
		"value": "0x1770"
	  },
	  "6141": {
		"jump": "i",
		"op": "JUMP"
	  },
	  "6142": {
		"op": "JUMPDEST"
	  },
	  "6143": {
		"op": "SWAP10"
	  },
	  "6144": {
		"op": "SWAP9"
	  },
	  "6145": {
		"op": "POP"
	  },
	  "6146": {
		"op": "POP"
	  },
	  "6147": {
		"op": "POP"
	  },
	  "6148": {
		"op": "POP"
	  },
	  "6149": {
		"op": "POP"
	  },
	  "6150": {
		"op": "POP"
	  },
	  "6151": {
		"op": "POP"
	  },
	  "6152": {
		"op": "POP"
	  },
	  "6153": {
		"op": "POP"
	  },
	  "6154": {
		"jump": "o",
		"op": "JUMP"
	  },
	  "6155": {
		"op": "JUMPDEST"
	  },
	  "6156": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "6158": {
		"op": "DUP3"
	  },
	  "6159": {
		"op": "PUSH2",
		"value": "0x1828"
	  },
	  "6162": {
		"op": "JUMPI"
	  },
	  "6163": {
		"op": "PUSH4",
		"value": "0x4E487B71"
	  },
	  "6168": {
		"op": "PUSH1",
		"value": "0xE0"
	  },
	  "6170": {
		"op": "SHL"
	  },
	  "6171": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "6173": {
		"op": "MSTORE"
	  },
	  "6174": {
		"op": "PUSH1",
		"value": "0x12"
	  },
	  "6176": {
		"op": "PUSH1",
		"value": "0x4"
	  },
	  "6178": {
		"op": "MSTORE"
	  },
	  "6179": {
		"op": "PUSH1",
		"value": "0x24"
	  },
	  "6181": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "6183": {
		"op": "REVERT"
	  },
	  "6184": {
		"op": "JUMPDEST"
	  },
	  "6185": {
		"op": "POP"
	  },
	  "6186": {
		"op": "MOD"
	  },
	  "6187": {
		"op": "SWAP1"
	  },
	  "6188": {
		"jump": "o",
		"op": "JUMP"
	  },
	  "6189": {
		"op": "JUMPDEST"
	  },
	  "6190": {
		"op": "DUP2"
	  },
	  "6191": {
		"op": "DUP2"
	  },
	  "6192": {
		"op": "SUB"
	  },
	  "6193": {
		"op": "DUP2"
	  },
	  "6194": {
		"op": "DUP2"
	  },
	  "6195": {
		"op": "GT"
	  },
	  "6196": {
		"op": "ISZERO"
	  },
	  "6197": {
		"op": "PUSH2",
		"value": "0xF32"
	  },
	  "6200": {
		"op": "JUMPI"
	  },
	  "6201": {
		"op": "PUSH2",
		"value": "0xF32"
	  },
	  "6204": {
		"op": "PUSH2",
		"value": "0x1717"
	  },
	  "6207": {
		"jump": "i",
		"op": "JUMP"
	  },
	  "6208": {
		"op": "JUMPDEST"
	  },
	  "6209": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "6211": {
		"op": "DUP1"
	  },
	  "6212": {
		"op": "PUSH1",
		"value": "0xA0"
	  },
	  "6214": {
		"op": "SHL"
	  },
	  "6215": {
		"op": "SUB"
	  },
	  "6216": {
		"op": "DUP5"
	  },
	  "6217": {
		"op": "AND"
	  },
	  "6218": {
		"op": "DUP2"
	  },
	  "6219": {
		"op": "MSTORE"
	  },
	  "6220": {
		"op": "DUP3"
	  },
	  "6221": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "6223": {
		"op": "DUP3"
	  },
	  "6224": {
		"op": "ADD"
	  },
	  "6225": {
		"op": "MSTORE"
	  },
	  "6226": {
		"op": "PUSH1",
		"value": "0x60"
	  },
	  "6228": {
		"op": "PUSH1",
		"value": "0x40"
	  },
	  "6230": {
		"op": "DUP3"
	  },
	  "6231": {
		"op": "ADD"
	  },
	  "6232": {
		"op": "MSTORE"
	  },
	  "6233": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "6235": {
		"op": "PUSH2",
		"value": "0xEE9"
	  },
	  "6238": {
		"op": "PUSH1",
		"value": "0x60"
	  },
	  "6240": {
		"op": "DUP4"
	  },
	  "6241": {
		"op": "ADD"
	  },
	  "6242": {
		"op": "DUP5"
	  },
	  "6243": {
		"op": "PUSH2",
		"value": "0x1770"
	  },
	  "6246": {
		"jump": "i",
		"op": "JUMP"
	  },
	  "6247": {
		"op": "JUMPDEST"
	  },
	  "6248": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "6250": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "6252": {
		"op": "DUP3"
	  },
	  "6253": {
		"op": "DUP5"
	  },
	  "6254": {
		"op": "SUB"
	  },
	  "6255": {
		"op": "SLT"
	  },
	  "6256": {
		"op": "ISZERO"
	  },
	  "6257": {
		"op": "PUSH2",
		"value": "0x1879"
	  },
	  "6260": {
		"op": "JUMPI"
	  },
	  "6261": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "6263": {
		"op": "DUP1"
	  },
	  "6264": {
		"op": "REVERT"
	  },
	  "6265": {
		"op": "JUMPDEST"
	  },
	  "6266": {
		"op": "DUP2"
	  },
	  "6267": {
		"op": "MLOAD"
	  },
	  "6268": {
		"op": "DUP1"
	  },
	  "6269": {
		"op": "ISZERO"
	  },
	  "6270": {
		"op": "ISZERO"
	  },
	  "6271": {
		"op": "DUP2"
	  },
	  "6272": {
		"op": "EQ"
	  },
	  "6273": {
		"op": "PUSH2",
		"value": "0x1607"
	  },
	  "6276": {
		"op": "JUMPI"
	  },
	  "6277": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "6279": {
		"op": "DUP1"
	  },
	  "6280": {
		"op": "REVERT"
	  },
	  "6281": {
		"op": "JUMPDEST"
	  },
	  "6282": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "6284": {
		"op": "DUP2"
	  },
	  "6285": {
		"op": "DUP2"
	  },
	  "6286": {
		"op": "JUMPDEST"
	  },
	  "6287": {
		"op": "DUP1"
	  },
	  "6288": {
		"op": "DUP6"
	  },
	  "6289": {
		"op": "GT"
	  },
	  "6290": {
		"op": "ISZERO"
	  },
	  "6291": {
		"op": "PUSH2",
		"value": "0x18C4"
	  },
	  "6294": {
		"op": "JUMPI"
	  },
	  "6295": {
		"op": "DUP2"
	  },
	  "6296": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "6298": {
		"op": "NOT"
	  },
	  "6299": {
		"op": "DIV"
	  },
	  "6300": {
		"op": "DUP3"
	  },
	  "6301": {
		"op": "GT"
	  },
	  "6302": {
		"op": "ISZERO"
	  },
	  "6303": {
		"op": "PUSH2",
		"value": "0x18AA"
	  },
	  "6306": {
		"op": "JUMPI"
	  },
	  "6307": {
		"op": "PUSH2",
		"value": "0x18AA"
	  },
	  "6310": {
		"op": "PUSH2",
		"value": "0x1717"
	  },
	  "6313": {
		"jump": "i",
		"op": "JUMP"
	  },
	  "6314": {
		"op": "JUMPDEST"
	  },
	  "6315": {
		"op": "DUP1"
	  },
	  "6316": {
		"op": "DUP6"
	  },
	  "6317": {
		"op": "AND"
	  },
	  "6318": {
		"op": "ISZERO"
	  },
	  "6319": {
		"op": "PUSH2",
		"value": "0x18B7"
	  },
	  "6322": {
		"op": "JUMPI"
	  },
	  "6323": {
		"op": "SWAP2"
	  },
	  "6324": {
		"op": "DUP2"
	  },
	  "6325": {
		"op": "MUL"
	  },
	  "6326": {
		"op": "SWAP2"
	  },
	  "6327": {
		"op": "JUMPDEST"
	  },
	  "6328": {
		"op": "SWAP4"
	  },
	  "6329": {
		"op": "DUP5"
	  },
	  "6330": {
		"op": "SHR"
	  },
	  "6331": {
		"op": "SWAP4"
	  },
	  "6332": {
		"op": "SWAP1"
	  },
	  "6333": {
		"op": "DUP1"
	  },
	  "6334": {
		"op": "MUL"
	  },
	  "6335": {
		"op": "SWAP1"
	  },
	  "6336": {
		"op": "PUSH2",
		"value": "0x188E"
	  },
	  "6339": {
		"op": "JUMP"
	  },
	  "6340": {
		"op": "JUMPDEST"
	  },
	  "6341": {
		"op": "POP"
	  },
	  "6342": {
		"op": "SWAP3"
	  },
	  "6343": {
		"op": "POP"
	  },
	  "6344": {
		"op": "SWAP3"
	  },
	  "6345": {
		"op": "SWAP1"
	  },
	  "6346": {
		"op": "POP"
	  },
	  "6347": {
		"jump": "o",
		"op": "JUMP"
	  },
	  "6348": {
		"op": "JUMPDEST"
	  },
	  "6349": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "6351": {
		"op": "DUP3"
	  },
	  "6352": {
		"op": "PUSH2",
		"value": "0x18DB"
	  },
	  "6355": {
		"op": "JUMPI"
	  },
	  "6356": {
		"op": "POP"
	  },
	  "6357": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "6359": {
		"op": "PUSH2",
		"value": "0xF32"
	  },
	  "6362": {
		"op": "JUMP"
	  },
	  "6363": {
		"op": "JUMPDEST"
	  },
	  "6364": {
		"op": "DUP2"
	  },
	  "6365": {
		"op": "PUSH2",
		"value": "0x18E8"
	  },
	  "6368": {
		"op": "JUMPI"
	  },
	  "6369": {
		"op": "POP"
	  },
	  "6370": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "6372": {
		"op": "PUSH2",
		"value": "0xF32"
	  },
	  "6375": {
		"op": "JUMP"
	  },
	  "6376": {
		"op": "JUMPDEST"
	  },
	  "6377": {
		"op": "DUP2"
	  },
	  "6378": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "6380": {
		"op": "DUP2"
	  },
	  "6381": {
		"op": "EQ"
	  },
	  "6382": {
		"op": "PUSH2",
		"value": "0x18FE"
	  },
	  "6385": {
		"op": "JUMPI"
	  },
	  "6386": {
		"op": "PUSH1",
		"value": "0x2"
	  },
	  "6388": {
		"op": "DUP2"
	  },
	  "6389": {
		"op": "EQ"
	  },
	  "6390": {
		"op": "PUSH2",
		"value": "0x1908"
	  },
	  "6393": {
		"op": "JUMPI"
	  },
	  "6394": {
		"op": "PUSH2",
		"value": "0x1924"
	  },
	  "6397": {
		"op": "JUMP"
	  },
	  "6398": {
		"op": "JUMPDEST"
	  },
	  "6399": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "6401": {
		"op": "SWAP2"
	  },
	  "6402": {
		"op": "POP"
	  },
	  "6403": {
		"op": "POP"
	  },
	  "6404": {
		"op": "PUSH2",
		"value": "0xF32"
	  },
	  "6407": {
		"op": "JUMP"
	  },
	  "6408": {
		"op": "JUMPDEST"
	  },
	  "6409": {
		"op": "PUSH1",
		"value": "0xFF"
	  },
	  "6411": {
		"op": "DUP5"
	  },
	  "6412": {
		"op": "GT"
	  },
	  "6413": {
		"op": "ISZERO"
	  },
	  "6414": {
		"op": "PUSH2",
		"value": "0x1919"
	  },
	  "6417": {
		"op": "JUMPI"
	  },
	  "6418": {
		"op": "PUSH2",
		"value": "0x1919"
	  },
	  "6421": {
		"op": "PUSH2",
		"value": "0x1717"
	  },
	  "6424": {
		"jump": "i",
		"op": "JUMP"
	  },
	  "6425": {
		"op": "JUMPDEST"
	  },
	  "6426": {
		"op": "POP"
	  },
	  "6427": {
		"op": "POP"
	  },
	  "6428": {
		"op": "PUSH1",
		"value": "0x1"
	  },
	  "6430": {
		"op": "DUP3"
	  },
	  "6431": {
		"op": "SHL"
	  },
	  "6432": {
		"op": "PUSH2",
		"value": "0xF32"
	  },
	  "6435": {
		"op": "JUMP"
	  },
	  "6436": {
		"op": "JUMPDEST"
	  },
	  "6437": {
		"op": "POP"
	  },
	  "6438": {
		"op": "PUSH1",
		"value": "0x20"
	  },
	  "6440": {
		"op": "DUP4"
	  },
	  "6441": {
		"op": "LT"
	  },
	  "6442": {
		"op": "PUSH2",
		"value": "0x133"
	  },
	  "6445": {
		"op": "DUP4"
	  },
	  "6446": {
		"op": "LT"
	  },
	  "6447": {
		"op": "AND"
	  },
	  "6448": {
		"op": "PUSH1",
		"value": "0x4E"
	  },
	  "6450": {
		"op": "DUP5"
	  },
	  "6451": {
		"op": "LT"
	  },
	  "6452": {
		"op": "PUSH1",
		"value": "0xB"
	  },
	  "6454": {
		"op": "DUP5"
	  },
	  "6455": {
		"op": "LT"
	  },
	  "6456": {
		"op": "AND"
	  },
	  "6457": {
		"op": "OR"
	  },
	  "6458": {
		"op": "ISZERO"
	  },
	  "6459": {
		"op": "PUSH2",
		"value": "0x1947"
	  },
	  "6462": {
		"op": "JUMPI"
	  },
	  "6463": {
		"op": "POP"
	  },
	  "6464": {
		"op": "DUP2"
	  },
	  "6465": {
		"op": "DUP2"
	  },
	  "6466": {
		"op": "EXP"
	  },
	  "6467": {
		"op": "PUSH2",
		"value": "0xF32"
	  },
	  "6470": {
		"op": "JUMP"
	  },
	  "6471": {
		"op": "JUMPDEST"
	  },
	  "6472": {
		"op": "PUSH2",
		"value": "0x1951"
	  },
	  "6475": {
		"op": "DUP4"
	  },
	  "6476": {
		"op": "DUP4"
	  },
	  "6477": {
		"op": "PUSH2",
		"value": "0x1889"
	  },
	  "6480": {
		"jump": "i",
		"op": "JUMP"
	  },
	  "6481": {
		"op": "JUMPDEST"
	  },
	  "6482": {
		"op": "DUP1"
	  },
	  "6483": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "6485": {
		"op": "NOT"
	  },
	  "6486": {
		"op": "DIV"
	  },
	  "6487": {
		"op": "DUP3"
	  },
	  "6488": {
		"op": "GT"
	  },
	  "6489": {
		"op": "ISZERO"
	  },
	  "6490": {
		"op": "PUSH2",
		"value": "0x1965"
	  },
	  "6493": {
		"op": "JUMPI"
	  },
	  "6494": {
		"op": "PUSH2",
		"value": "0x1965"
	  },
	  "6497": {
		"op": "PUSH2",
		"value": "0x1717"
	  },
	  "6500": {
		"jump": "i",
		"op": "JUMP"
	  },
	  "6501": {
		"op": "JUMPDEST"
	  },
	  "6502": {
		"op": "MUL"
	  },
	  "6503": {
		"op": "SWAP4"
	  },
	  "6504": {
		"op": "SWAP3"
	  },
	  "6505": {
		"op": "POP"
	  },
	  "6506": {
		"op": "POP"
	  },
	  "6507": {
		"op": "POP"
	  },
	  "6508": {
		"jump": "o",
		"op": "JUMP"
	  },
	  "6509": {
		"op": "JUMPDEST"
	  },
	  "6510": {
		"op": "PUSH1",
		"value": "0x0"
	  },
	  "6512": {
		"op": "PUSH2",
		"value": "0xF2F"
	  },
	  "6515": {
		"op": "DUP4"
	  },
	  "6516": {
		"op": "DUP4"
	  },
	  "6517": {
		"op": "PUSH2",
		"value": "0x18CC"
	  },
	  "6520": {
		"jump": "i",
		"op": "JUMP"
	  }
	},
	"sha1": "a874ac710fa1149188f46da22c6aa8d3ac9fadd4",
	"source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n\nimport \"@chainlink/contracts/src/v0.8/ChainlinkClient.sol\";\n\n\ncontract BetContract is ChainlinkClient {\n\n    \n    uint256 number1;\n    uint256 number2;\n    uint256 currentGameId;        \n    uint256 betCounter = 0;\n\n    bytes32 private externalJobId;\n    uint256 private oraclePayment;\n    using Chainlink for Chainlink.Request;\n\n    mapping (uint => Bet) public bets;\n    mapping (address => Bet) public AddressToBet;\n\n\n    event RequestFulfilled(\n        bytes32 indexed requestId, \n        uint256 number1, \n        uint256 number2\n    );\n\n\n    struct Bet {\n\n        uint id;\n        uint gameId;\n        uint conditions;\n        uint price;\n        address challenger;\n        address accepter;\n        address winner;\n        bool isAlive;\n        bool isAccepted;\n    }\n\n\n    event LogPublishBet(\n\n        uint indexed _id,\n        address indexed _challenger,\n        uint256 indexed _price\n    ); \n\n    event LogAcceptBet(\n\n        uint indexed _id,\n        address indexed _challenger,\n        address indexed _accepter,\n        uint256  _price\n    );\n\n    event LogResolveBet(\n\n        uint indexed _id,\n        address indexed _challenger,\n        address indexed _accepter,\n        uint256 _payout\n    );\n\n    event logNumber (\n        uint number1,\n        uint number2\n    );\n\n\n    constructor() {\n        \n        setChainlinkToken(0x326C977E6efc84E512bB9C30f76E30c160eD06FB);\n        setChainlinkOracle(0x7ca7215c6B8013f249A195cc107F97c4e623e5F5);\n        externalJobId = \"28d535568b7848adb2369e1850aa4e1c\";\n        oraclePayment = (1 * LINK_DIVISIBILITY) / 10;\n\n    } \n\n    function requestMultiVariable() internal {\n\n        Chainlink.Request memory req = buildChainlinkRequest(externalJobId, address(this), this.fulfillBytesAndUint.selector);\n        req.add(\"get\", \"https://api.sportsdata.io/v3/nba/scores/json/TeamGameStatsBySeason/2023/11/1?key=76c2b56ace2845c59e84f30b8a88ad36\");\n        req.add(\"path1\", \"0,Name\");\n        req.add(\"path2\", \"0,Wins\");\n        req.add(\"path3\", \"0,Losses\");\n        req.add(\"path4\", \"0,GameID\");\n        sendOperatorRequest(req, oraclePayment);\n    }\n\n\n    function fulfillBytesAndUint(bytes32 requestId, uint256 _number1, uint256 _number2)\n        public recordChainlinkFulfillment(requestId){\n    \n        emit RequestFulfilled(requestId, _number1, _number2);\n        number1 = _number1;\n        number2 = _number2;\n    }\n \n    \n    // find winners and then close bets\n    function upkeep_setWinner() public {\n\n        requestMultiVariable();\n        require(number1 == 1 || number2 == 1);\n\n        for(uint i = 1; i <= betCounter; i++){\n        \n            if (bets[i].gameId == currentGameId) {\n\n                if ((bets[i].conditions == 0 && number2 == 0) || (bets[i].conditions == 1 && number2 == 1)){\n                    close_bet(i, bets[i].challenger);\n                }\n\n                if ((bets[i].conditions == 0 && number2 == 1) || (bets[i].conditions == 1 && number2 == 0)){\n                    close_bet(i, bets[i].accepter);\n                }\n            }\n        } \n    }\n\n\n    // send reward for winner and close bet\n    function close_bet(uint id, address _to) internal  {\n\n        if (bets[id].isAlive == false || bets[id].isAccepted == false) {\n            return;\n        }\n        \n        bets[id].winner = _to;\n        bets[id].isAlive = false;\n        \n        uint256 amount = bets[id].price * 2;\n        address payable to = payable(_to);\n\n        bool isSuccess = to.send(amount);\n        require(isSuccess, \"Transaction Failed\");\n\n\n    }\n    \n\n    // Publish a new bet\n    function publishBet( uint  _conditions, uint256 _price, uint256 _gameId) public payable {\n\n        require(_price >= 1, \"Minimum price is 1 Matic\");\n        require(msg.value >= _price);\n        \n        betCounter++;\n        bets[betCounter] = Bet(\n\n            betCounter,\n            _gameId,\n            _conditions,\n            _price, \n            msg.sender,\n            payable(0x0),\n            payable(0x0),        \n            true,\n            false\n        );\n\n        emit LogPublishBet(betCounter, msg.sender, _price);\n    }\n\n\n    function acceptBet(uint _id ) public payable {\n\n        Bet storage bet = bets[_id];\n\n        require(bet.isAlive == true, \"The bet was canceled\");\n        require(betCounter > 0, \"Bet is not published\");\n        require(_id > 0 && _id <= betCounter, \"Bet is not published\");\n        require(msg.sender != bet.challenger);\n        require(msg.value >= bet.price);\n        \n        bet.accepter = msg.sender;\n        bet.isAccepted = true;\n        emit LogAcceptBet(_id, bet.challenger, bet.accepter, bet.price);\n\n    } \n\n    // cancel bet from challenger before accept bet\n    function cancelBet(uint _id) public payable {\n\n        Bet storage bet = bets[_id];\n\n        require(bet.isAlive == true, \"The bet was canceled\");\n        require(betCounter >= _id && _id > 0, \"Bet is not published\");\n        require(msg.sender == bet.challenger);\n\n        bet.isAlive = false;\n        uint256 amount = bet.price;\n        address payable to = payable(bet.challenger);\n\n        bool isSuccess = to.send(amount);\n        require(isSuccess, \"Transaction Failed\");\n        \n    }\n\n\n    function getNumberOfBets() public view returns (uint) {\n        return betCounter;\n    }\n\n\n    function getNumberOfAvailableBets() public view returns(uint) {\n        \n        uint numberOfAvailableBets = 0;\n\n        for(uint i = 1; i <=  betCounter ; i++){\n\n            if(bets[i].isAccepted == false && bets[i].isAlive == true) {\n\n                numberOfAvailableBets++;\n            }\n        }\n\n        return numberOfAvailableBets;\n    }\n\n\n    function getAvailableBets() public view returns (Bet[] memory) {\n\n        uint[] memory betIds = new uint[](betCounter);\n        uint numberOfAvailableBets = 0;\n\n        for(uint i = 1; i <=  betCounter ; i++){\n\n            // Keep the ID if the bet is still available\n            if(bets[i].isAccepted == false && bets[i].isAlive == true) {\n\n                betIds[numberOfAvailableBets] = bets[i].id;\n                numberOfAvailableBets++;\n            }\n        }\n        \n        Bet[] memory availableBets = new Bet[](numberOfAvailableBets);\n\n        // Copy the betIds array into a smaller availableBets array to get rid of empty indexes\n        for(uint j = 0; j < numberOfAvailableBets; j++) {\n            availableBets[j] = bets[betIds[j]];\n        }\n        \n        return availableBets; \n    \n    }   \n\n\n}\n",
	"sourceMap": "120:6389:11:-:0;;;1291:1:1;1258:34;;270:1:11;249:22;;1354:288;;;;;;;;;-1:-1:-1;8688:6:1;:40;;-1:-1:-1;;;;;;8688:40:1;1405:42:11;8688:40:1;;;8457:8;:43;;-1:-1:-1;;;;;;8457:43:1;1477:42:11;8457:43:1;;;1530:50:11;:13;:50;;;1607:21;675:6:1;1607:1:11;:21;:::i;:::-;1606:28;;;;:::i;:::-;1590:13;:44;120:6389;;14:265:12;87:9;;;118;;135:15;;;129:22;;115:37;105:168;;195:10;190:3;186:20;183:1;176:31;230:4;227:1;220:15;258:4;255:1;248:15;105:168;14:265;;;;:::o;284:217::-;324:1;350;340:132;;394:10;389:3;385:20;382:1;375:31;429:4;426:1;419:15;457:4;454:1;447:15;340:132;-1:-1:-1;486:9:12;;284:217::o;:::-;120:6389:11;;;;;;",
	"sourcePath": "contracts/BetContract.sol",
	"type": "contract"
  }